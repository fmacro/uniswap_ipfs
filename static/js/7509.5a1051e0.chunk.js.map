{"version":3,"file":"static/js/7509.5a1051e0.chunk.js","mappings":"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","sources":["components/Liquidity/LiquidityPositionInfo.tsx","../../../packages/ui/src/components/icons/StatusIndicatorCircle.tsx","components/Liquidity/LiquidityPositionStatusIndicator.tsx","components/Liquidity/PositionNFT.tsx","hooks/usePositionTokenURI.ts","components/Liquidity/LiquidityPositionAmountsTile.tsx","components/Liquidity/LiquidityPositionPriceRangeTile.tsx","pages/Pool/Positions/PositionPage.tsx","pages/Pool/Positions/V2PositionPage.tsx"],"sourcesContent":["\"use strict\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport { LiquidityPositionStatusIndicator } from \"components/Liquidity/LiquidityPositionStatusIndicator\";\nimport { getProtocolVersionLabel, parseRestPosition } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { useMemo } from \"react\";\nimport { Flex, Text } from \"ui/src\";\nimport { DocumentList } from \"ui/src/components/icons/DocumentList\";\nexport function LiquidityPositionInfo({ position }) {\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  if (!positionInfo) {\n    return null;\n  }\n  const { currency0Amount, currency1Amount, status, feeTier, v4hook, version } = positionInfo;\n  const versionLabel = getProtocolVersionLabel(version);\n  return <Flex row gap=\"$gap16\" py=\"$spacing4\">\n    <DoubleCurrencyAndChainLogo\n      chainId={currency0Amount?.currency.chainId}\n      currencies={[currency0Amount?.currency, currency1Amount?.currency]}\n      size={44}\n    />\n    <Flex grow>\n      <Flex row gap=\"$gap16\">\n        <Text variant=\"heading3\">\n          {currency0Amount?.currency.symbol}\n          {\" / \"}\n          {currency1Amount?.currency.symbol}\n        </Text>\n        <Flex row gap={2} alignItems=\"center\"><LiquidityPositionInfoBadges\n          size=\"small\"\n          badges={[\n            versionLabel ? { label: versionLabel } : void 0,\n            v4hook ? { label: v4hook, copyable: true, icon: <DocumentList color=\"$neutral2\" size={16} /> } : void 0,\n            feeTier ? { label: `${Number(feeTier) / 1e4}%` } : void 0\n          ].filter(Boolean)}\n        /></Flex>\n      </Flex>\n      <LiquidityPositionStatusIndicator status={status} />\n    </Flex>\n  </Flex>;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [StatusIndicatorCircle, AnimatedStatusIndicatorCircle] = createIcon({\n  name: \"StatusIndicatorCircle\",\n  getIcon: (props) => <Svg viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n    <Path\n      d=\"M0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6Z\"\n      fill=\"currentColor\"\n      fillOpacity=\"0.6\"\n    />\n    <Path\n      d=\"M2 6C2 3.79086 3.79086 2 6 2C8.20914 2 10 3.79086 10 6C10 8.20914 8.20914 10 6 10C3.79086 10 2 8.20914 2 6Z\"\n      fill=\"currentColor\"\n    />\n  </Svg>,\n  defaultFill: \"#FF5F52\"\n});\n","\"use strict\";\nimport { PositionStatus } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { Flex, Text } from \"ui/src\";\nimport { StatusIndicatorCircle } from \"ui/src/components/icons/StatusIndicatorCircle\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst statusConfig = {\n  [PositionStatus.IN_RANGE]: {\n    color: \"$statusSuccess\",\n    i18nKey: \"common.withinRange\"\n  },\n  [PositionStatus.OUT_OF_RANGE]: {\n    color: \"$statusCritical\",\n    i18nKey: \"common.outOfRange\"\n  },\n  [PositionStatus.CLOSED]: {\n    color: \"$neutral2\",\n    i18nKey: \"common.closed\"\n  },\n  [PositionStatus.UNSPECIFIED]: void 0\n};\nexport function LiquidityPositionStatusIndicator({ status }) {\n  const config = statusConfig[status];\n  if (!config) {\n    return null;\n  }\n  return <Flex row gap=\"$gap8\" alignItems=\"center\">\n    <StatusIndicatorCircle color={config.color} />\n    <Text variant=\"body3\" color={config.color}><Trans i18nKey={config.i18nKey} /></Text>\n  </Flex>;\n}\n","\"use strict\";\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nfunction getSnapshot(src, canvas, targetHeight) {\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    let { width, height } = src;\n    const ratio = width / height;\n    height = targetHeight;\n    width = Math.round(ratio * targetHeight);\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    context.scale(devicePixelRatio, devicePixelRatio);\n    context.clearRect(0, 0, width, height);\n    context.drawImage(src, 0, 0, width, height);\n  }\n}\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`;\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`;\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`;\nexport function PositionNFT({ image, height: targetHeight }) {\n  const [animate, setAnimate] = useState(false);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  return <NFTGrid\n    onMouseEnter={() => {\n      setAnimate(true);\n    }}\n    onMouseLeave={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n      setAnimate(false);\n    }}\n  >\n    <NFTCanvas ref={canvasRef} />\n    <NFTImage\n      ref={imageRef}\n      src={image}\n      hidden={!animate}\n      onLoad={() => {\n        if (imageRef.current && canvasRef.current) {\n          getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n        }\n      }}\n    />\n  </NFTGrid>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nconst STARTS_WITH = \"data:application/json;base64,\";\nexport function usePositionTokenURI(tokenId) {\n  const contract = useV3NFTPositionManagerContract();\n  const inputs = useMemo(\n    () => [tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16)],\n    [tokenId]\n  );\n  const { result, error, loading, valid } = useSingleCallResult(contract, \"tokenURI\", inputs, {\n    ...NEVER_RELOAD,\n    gasRequired: 3e6\n  });\n  return useMemo(() => {\n    if (error || !valid || !tokenId) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (loading) {\n      return {\n        valid: true,\n        loading: true\n      };\n    }\n    if (!result) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    const [tokenURI] = result;\n    if (!tokenURI || !tokenURI.startsWith(STARTS_WITH)) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    try {\n      const json = JSON.parse(atob(tokenURI.slice(STARTS_WITH.length)));\n      return {\n        valid: true,\n        loading: false,\n        result: json\n      };\n    } catch (error2) {\n      return { valid: false, loading: false };\n    }\n  }, [error, loading, result, tokenId, valid]);\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { Flex, Text } from \"ui/src\";\nimport { CurrencyLogo } from \"uniswap/src/components/CurrencyLogo/CurrencyLogo\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { NumberType } from \"utilities/src/format/types\";\nexport function LiquidityPositionAmountsTile({\n  currency0Amount,\n  currency1Amount,\n  fiatValue0,\n  fiatValue1\n}) {\n  const currencyInfo0 = useCurrencyInfo(currency0Amount.currency);\n  const currencyInfo1 = useCurrencyInfo(currency1Amount.currency);\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const totalFiatValue = fiatValue0?.add(fiatValue1 ?? CurrencyAmount.fromRawAmount(fiatValue0.currency, 0));\n  return <Flex borderRadius=\"$rounded12\" gap=\"$gap12\" backgroundColor=\"$surface3\" p=\"$padding16\">\n    <Flex row alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex row alignItems=\"center\" gap=\"$gap16\">\n        <CurrencyLogo currencyInfo={currencyInfo0} size={20} />\n        <Text variant=\"body1\" color=\"neutral1\">{currency0Amount.currency.symbol}</Text>\n      </Flex>\n      <Flex row alignItems=\"center\" gap=\"$gap8\">\n        <Text variant=\"body1\" color=\"$neutral1\">{formatCurrencyAmount({ value: currency0Amount })}</Text>\n        {fiatValue0 && <Text variant=\"body1\" color=\"$neutral2\">\n          {\"(\"}\n          {formatCurrencyAmount({ value: fiatValue0, type: NumberType.FiatTokenPrice })}\n          {\")\"}\n        </Text>}\n        {totalFiatValue?.greaterThan(0) && fiatValue0 && <Flex backgroundColor=\"$surface1\" borderRadius=\"$rounded12\" px=\"$padding8\" py=\"$padding8\"><Text variant=\"body1\" color=\"$neutral1\">{formatPercent(new Percent(fiatValue0.quotient, totalFiatValue.quotient).toFixed(6))}</Text></Flex>}\n      </Flex>\n    </Flex>\n    <Flex row alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex row alignItems=\"center\" gap=\"$gap16\">\n        <CurrencyLogo currencyInfo={currencyInfo1} size={20} />\n        <Text variant=\"body1\" color=\"$neutral1\">{currency1Amount.currency.symbol}</Text>\n      </Flex>\n      <Flex row alignItems=\"center\" gap=\"$gap8\">\n        <Text variant=\"body1\" color=\"neutral1\">{formatCurrencyAmount({ value: currency1Amount })}</Text>\n        {fiatValue1 && <Text variant=\"body1\" color=\"$neutral2\">\n          {\"(\"}\n          {formatCurrencyAmount({ value: fiatValue1, type: NumberType.FiatTokenPrice })}\n          {\")\"}\n        </Text>}\n        {totalFiatValue?.greaterThan(0) && fiatValue1 && <Flex backgroundColor=\"$surface1\" borderRadius=\"$rounded12\" px=\"$padding8\" py=\"$padding8\"><Text variant=\"body1\" color=\"$neutral1\">{formatPercent(new Percent(fiatValue1.quotient, totalFiatValue.quotient).toFixed(6))}</Text></Flex>}\n      </Flex>\n    </Flex>\n  </Flex>;\n}\n","\"use strict\";\nimport { LiquidityPositionStatusIndicator } from \"components/Liquidity/LiquidityPositionStatusIndicator\";\nimport { useMemo, useState } from \"react\";\nimport { Flex, SegmentedControl, Text, styled } from \"ui/src\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst InnerTile = styled(Flex, {\n  grow: true,\n  alignItems: \"center\",\n  gap: \"$gap8\",\n  borderRadius: \"$rounded12\",\n  backgroundColor: \"$surface3\",\n  p: \"$padding16\"\n});\nexport function LiquidityPositionPriceRangeTile({\n  status,\n  minPrice,\n  maxPrice,\n  currentPrice\n}) {\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const currencyASymbol = currentPrice.baseCurrency.symbol;\n  const currencyBSymbol = currentPrice.quoteCurrency.symbol;\n  const controlOptions = useMemo(() => {\n    return [\n      {\n        value: currencyASymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyASymbol}</Text>\n      },\n      {\n        value: currencyBSymbol ?? \"\",\n        display: <Text variant=\"buttonLabel3\">{currencyBSymbol}</Text>\n      }\n    ];\n  }, [currencyASymbol, currencyBSymbol]);\n  if (!currencyASymbol || !currencyBSymbol) {\n    throw new Error(\"LiquidityPositionPriceRangeTile: Currency symbols are required\");\n  }\n  const displayMinPrice = pricesInverted ? minPrice.invert() : minPrice;\n  const displayMaxPrice = pricesInverted ? maxPrice.invert() : maxPrice;\n  const displayCurrentPrice = pricesInverted ? currentPrice.invert() : currentPrice;\n  const displayASymbol = pricesInverted ? currencyBSymbol : currencyASymbol;\n  const displayBSymbol = pricesInverted ? currencyASymbol : currencyBSymbol;\n  return <Flex backgroundColor=\"$surface2\" borderRadius=\"$rounded12\" p=\"$padding12\" width=\"100%\" gap=\"$gap12\">\n    <Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex row alignItems=\"center\" gap=\"$gap12\">\n        <Text variant=\"subheading1\"><Trans i18nKey=\"pool.priceRange\" /></Text>\n        {status && <LiquidityPositionStatusIndicator status={status} />}\n      </Flex>\n      <SegmentedControl\n        options={controlOptions}\n        selectedOption={pricesInverted ? currencyBSymbol : currencyASymbol}\n        onSelectOption={(selected) => {\n          setPricesInverted(selected !== currencyASymbol);\n        }}\n      />\n    </Flex>\n    <Flex row width=\"100%\" gap=\"$gap12\">\n      <InnerTile>\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.minPrice\" /></Text>\n        <Text variant=\"heading2\" color=\"$neutral1\">{displayMinPrice.toFixed()}</Text>\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n          i18nKey=\"common.feesEarnedPerBase\"\n          values={{\n            symbolA: displayASymbol,\n            symbolB: displayBSymbol\n          }}\n        /></Text>\n      </InnerTile>\n      <InnerTile>\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.maxPrice\" /></Text>\n        <Text variant=\"heading2\" color=\"$neutral1\">{displayMaxPrice.toFixed()}</Text>\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n          i18nKey=\"common.feesEarnedPerBase\"\n          values={{\n            symbolA: displayASymbol,\n            symbolB: displayBSymbol\n          }}\n        /></Text>\n      </InnerTile>\n    </Flex>\n    <InnerTile>\n      <Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"common.currentPrice\" /></Text>\n      <Text variant=\"heading2\" color=\"$neutral1\">{displayCurrentPrice.toFixed()}</Text>\n      <Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n        i18nKey=\"common.feesEarnedPerBase\"\n        values={{\n          symbolA: displayASymbol,\n          symbolB: displayBSymbol\n        }}\n      /></Text>\n    </InnerTile>\n  </Flex>;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionAmountsTile } from \"components/Liquidity/LiquidityPositionAmountsTile\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { LiquidityPositionPriceRangeTile } from \"components/Liquidity/LiquidityPositionPriceRangeTile\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { parseRestPosition, useV3PositionDerivedInfo } from \"components/Liquidity/utils\";\nimport { LoadingFullscreen } from \"components/Loader/styled\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport { useMemo, useState } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Navigate, useLocation, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, Main, Switch, Text, styled } from \"ui/src\";\nimport { useGetPositionsQuery } from \"uniswap/src/data/rest/getPositions\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlagWithLoading } from \"uniswap/src/features/gating/hooks\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"$spacing32\",\n  mx: \"auto\",\n  width: \"100%\",\n  zIndex: \"$default\",\n  p: \"$spacing24\"\n});\nexport const HeaderButton = styled(Flex, {\n  row: true,\n  backgroundColor: \"$surface2\",\n  borderRadius: \"$rounded12\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  gap: \"$gap4\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  ...ClickableTamaguiStyle,\n  variants: {\n    emphasis: {\n      primary: {\n        backgroundColor: \"$accent3\"\n      },\n      secondary: {\n        backgroundColor: \"$surface2\"\n      }\n    }\n  }\n});\nexport default function PositionPage() {\n  const { tokenId } = useParams();\n  const account = useAccount();\n  const { pathname } = useLocation();\n  const { data } = useGetPositionsQuery(\n    account.address ? {\n      address: account.address,\n      protocolVersions: [\n        pathname.includes(\"v3\") ? ProtocolVersion.V3 : pathname.includes(\"v4\") ? ProtocolVersion.V4 : ProtocolVersion.UNSPECIFIED\n      ]\n    } : void 0\n  );\n  const position = data?.positions[0];\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const metadata = usePositionTokenURI(tokenId ? BigNumber.from(tokenId) : void 0);\n  const dispatch = useAppDispatch();\n  const [collectAsWeth, setCollectAsWeth] = useState(false);\n  const { value: v4Enabled, isLoading } = useFeatureFlagWithLoading(FeatureFlags.V4Everywhere);\n  const { formatCurrencyAmount } = useFormatter();\n  const { currency0Amount, currency1Amount, status } = positionInfo ?? {};\n  const {\n    feeValue0,\n    feeValue1,\n    fiatFeeValue0,\n    fiatFeeValue1,\n    currentPrice,\n    fiatValue0,\n    fiatValue1,\n    priceLower,\n    priceUpper\n  } = useV3PositionDerivedInfo(positionInfo, tokenId, collectAsWeth);\n  if (!isLoading && !v4Enabled) {\n    return <Navigate to=\"/pools\" replace />;\n  }\n  if (!position || !positionInfo || !currency0Amount || !currency1Amount) {\n    return null;\n  }\n  return <BodyWrapper>\n    <Flex gap=\"$gap20\">\n      <Flex row maxWidth={360} justifyContent=\"flex-start\" alignItems=\"center\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to=\"/positions\">\n        <Trans i18nKey=\"pool.positions.title\" />\n        {\" \"}\n        <ChevronRight size={14} />\n      </BreadcrumbNavLink></BreadcrumbNavContainer></Flex>\n      <Flex row justifyContent=\"space-between\" alignItems=\"center\">\n        <LiquidityPositionInfo position={position} />\n        {status !== PositionStatus.CLOSED && <Flex row gap=\"$gap12\" alignItems=\"center\">\n          <HeaderButton\n            emphasis=\"secondary\"\n            onPress={() => {\n              dispatch(setOpenModal({ name: ModalName.AddLiquidity, initialState: position }));\n            }}\n          ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"common.addLiquidity\" /></Text></HeaderButton>\n          <HeaderButton\n            emphasis=\"primary\"\n            onPress={() => {\n              dispatch(setOpenModal({ name: ModalName.RemoveLiquidity, initialState: position }));\n            }}\n          ><Text variant=\"buttonLabel2\" color=\"$surface1\"><Trans i18nKey=\"pool.removeLiquidity\" /></Text></HeaderButton>\n        </Flex>}\n      </Flex>\n    </Flex>\n    <Flex row width=\"100%\" gap=\"$gap16\">\n      <Flex grow backgroundColor=\"$surface2\" borderRadius=\"$rounded12\" justifyContent=\"center\" alignItems=\"center\">{\"result\" in metadata ? <PositionNFT image={metadata.result.image} height={400} /> : <LoadingFullscreen style={{ borderRadius: 12, backgroundColor: \"transparent\" }} />}</Flex>\n      <Flex grow gap=\"$gap12\">\n        <Flex borderRadius=\"$rounded16\" backgroundColor=\"$surface2\" p=\"$padding12\" gap=\"$gap16\">\n          <Flex gap=\"$gap8\">\n            <Text variant=\"subheading1\"><Trans i18nKey=\"common.liquidity\" /></Text>\n            <Text variant=\"heading2\">{fiatValue0 && fiatValue1 ? formatCurrencyAmount({\n              amount: fiatValue0.add(fiatValue1),\n              type: NumberType.FiatTokenPrice\n            }) : \"-\"}</Text>\n          </Flex>\n          <LiquidityPositionAmountsTile\n            currency0Amount={currency0Amount}\n            currency1Amount={currency1Amount}\n            fiatValue0={fiatValue0}\n            fiatValue1={fiatValue1}\n          />\n        </Flex>\n        <Flex p=\"$padding12\" backgroundColor=\"$surface2\" borderRadius=\"$rounded16\">\n          <Flex row width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Text variant=\"subheading1\"><Trans i18nKey=\"pool.unclaimedFees\" /></Text>\n            <HeaderButton\n              emphasis=\"primary\"\n              onPress={() => {\n              }}\n            ><Text variant=\"buttonLabel4\" color=\"$surface1\"><Trans i18nKey=\"pool.claimFees\" /></Text></HeaderButton>\n          </Flex>\n          <Text variant=\"heading2\" mt=\"$spacing8\" mb=\"$spacing16\" color=\"$statusSuccess\">{fiatFeeValue0 && fiatFeeValue1 ? formatCurrencyAmount({\n            amount: fiatFeeValue0.add(fiatFeeValue1),\n            type: NumberType.FiatTokenPrice\n          }) : \"-\"}</Text>\n          {feeValue0 && feeValue1 && <LiquidityPositionAmountsTile\n            currency0Amount={feeValue0}\n            currency1Amount={feeValue1}\n            fiatValue0={fiatFeeValue0}\n            fiatValue1={fiatFeeValue1}\n          />}\n          <Flex row width=\"100%\" justifyContent=\"space-between\" mt=\"$spacing16\">\n            <Text variant=\"body1\"><Trans i18nKey=\"pool.collectAs\" values={{ nativeWrappedSymbol: \"WETH\" }} /></Text>\n            <Switch\n              variant=\"default\"\n              checked={collectAsWeth}\n              onCheckedChange={() => {\n                setCollectAsWeth((prev) => !prev);\n              }}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n    {priceLower && priceUpper && currentPrice && <LiquidityPositionPriceRangeTile\n      status={status}\n      minPrice={priceLower}\n      maxPrice={priceUpper}\n      currentPrice={currentPrice}\n    />}\n  </BodyWrapper>;\n}\n","\"use strict\";\nimport { PositionStatus, ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { parseRestPosition, useV2PositionDerivedInfo } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { HeaderButton } from \"pages/Pool/Positions/PositionPage\";\nimport { useMemo } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { setOpenModal } from \"state/application/reducer\";\nimport { useAppDispatch } from \"state/hooks\";\nimport { Flex, Main, Text, styled } from \"ui/src\";\nimport { useGetPositionsQuery } from \"uniswap/src/data/rest/getPositions\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlagWithLoading } from \"uniswap/src/features/gating/hooks\";\nimport { useLocalizationContext } from \"uniswap/src/features/language/LocalizationContext\";\nimport { ModalName } from \"uniswap/src/features/telemetry/constants\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { NumberType } from \"utilities/src/format/types\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  mx: \"auto\",\n  width: \"100%\",\n  zIndex: \"$default\",\n  p: \"$spacing24\"\n});\nexport default function V2PositionPage() {\n  const { currencyIdA, currencyIdB } = useParams();\n  const account = useAccount();\n  const { data } = useGetPositionsQuery(\n    account.address ? {\n      token0: currencyIdA,\n      token1: currencyIdB,\n      address: account.address,\n      protocolVersions: [ProtocolVersion.V2]\n    } : void 0\n  );\n  const position = data?.positions[0];\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { formatCurrencyAmount, formatPercent } = useLocalizationContext();\n  const { value: v4Enabled, isLoading } = useFeatureFlagWithLoading(FeatureFlags.V4Everywhere);\n  const { currency0Amount, currency1Amount, status, liquidityAmount } = positionInfo ?? {};\n  const { poolTokenPercentage, token0USDValue, token1USDValue } = useV2PositionDerivedInfo(positionInfo);\n  if (!isLoading && !v4Enabled) {\n    return <Navigate to=\"/pools\" replace />;\n  }\n  if (!position || !positionInfo || !liquidityAmount || !currency0Amount || !currency1Amount) {\n    return null;\n  }\n  return <BodyWrapper><Flex gap=\"$gap20\" width={580}>\n    <Flex row width=\"100%\" justifyContent=\"flex-start\" alignItems=\"center\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\"><BreadcrumbNavLink to=\"/positions\">\n      <Trans i18nKey=\"pool.positions.title\" />\n      {\" \"}\n      <ChevronRight size={14} />\n    </BreadcrumbNavLink></BreadcrumbNavContainer></Flex>\n    <LiquidityPositionInfo position={position} />\n    {status === PositionStatus.IN_RANGE && <Flex row gap=\"$gap12\" alignItems=\"center\">\n      <HeaderButton\n        emphasis=\"secondary\"\n        onPress={() => {\n          navigate(\"/migrate/v2\");\n        }}\n      ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"common.migrate\" /></Text></HeaderButton>\n      <HeaderButton\n        emphasis=\"secondary\"\n        onPress={() => {\n          dispatch(setOpenModal({ name: ModalName.AddLiquidity, initialState: position }));\n        }}\n      ><Text variant=\"buttonLabel2\" color=\"$neutral1\"><Trans i18nKey=\"common.addLiquidity\" /></Text></HeaderButton>\n      <HeaderButton\n        emphasis=\"primary\"\n        onPress={() => {\n          dispatch(setOpenModal({ name: ModalName.RemoveLiquidity, initialState: position }));\n        }}\n      ><Text variant=\"buttonLabel2\" color=\"$surface1\"><Trans i18nKey=\"pool.removeLiquidity\" /></Text></HeaderButton>\n    </Flex>}\n    <Flex borderColor=\"$surface3\" borderWidth={1} p=\"$spacing24\" gap=\"$gap12\" borderRadius=\"$rounded20\">\n      <Flex row width=\"100%\" justifyContent=\"space-between\">\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"position.currentValue\" /></Text>\n        <Text variant=\"body2\">{token0USDValue && token1USDValue ? formatCurrencyAmount({ value: token0USDValue.add(token1USDValue), type: NumberType.FiatStandard }) : \"-\"}</Text>\n      </Flex>\n      <Flex row width=\"100%\" justifyContent=\"space-between\">\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"pool.totalTokens\" /></Text>\n        <Flex row gap=\"$gap8\">\n          <Text variant=\"body2\">{formatCurrencyAmount({ value: liquidityAmount, type: NumberType.TokenNonTx })}</Text>\n          <DoubleCurrencyAndChainLogo\n            chainId={currency0Amount.currency.chainId}\n            currencies={[currency0Amount?.currency, currency1Amount?.currency]}\n            size={24}\n          />\n        </Flex>\n      </Flex>\n      <Flex row width=\"100%\" justifyContent=\"space-between\">\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n          i18nKey=\"position.depositedCurrency\"\n          values={{ currencySymbol: currency0Amount.currency.symbol }}\n        /></Text>\n        <Flex row gap=\"$gap8\">\n          <Text variant=\"body2\">{formatCurrencyAmount({ value: currency0Amount, type: NumberType.TokenNonTx })}</Text>\n          <DoubleCurrencyAndChainLogo\n            chainId={currency0Amount?.currency.chainId}\n            currencies={[currency0Amount?.currency]}\n            size={24}\n          />\n        </Flex>\n      </Flex>\n      <Flex row width=\"100%\" justifyContent=\"space-between\">\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans\n          i18nKey=\"position.depositedCurrency\"\n          values={{ currencySymbol: currency1Amount.currency.symbol }}\n        /></Text>\n        <Flex row gap=\"$gap8\">\n          <Text variant=\"body2\">{formatCurrencyAmount({ value: currency1Amount, type: NumberType.TokenNonTx })}</Text>\n          <DoubleCurrencyAndChainLogo\n            chainId={currency1Amount?.currency.chainId}\n            currencies={[currency1Amount?.currency]}\n            size={24}\n          />\n        </Flex>\n      </Flex>\n      <Flex row width=\"100%\" justifyContent=\"space-between\">\n        <Text variant=\"subheading2\" color=\"$neutral2\"><Trans i18nKey=\"addLiquidity.shareOfPool\" /></Text>\n        <Text variant=\"body2\">{formatPercent(poolTokenPercentage?.toFixed(6))}</Text>\n      </Flex>\n    </Flex>\n  </Flex></BodyWrapper>;\n}\n"],"names":["LiquidityPositionInfo","position","currency0Amount","currency1Amount","positionInfo","useMemo","parseRestPosition","status","feeTier","v4hook","version","versionLabel","getProtocolVersionLabel","Flex","row","gap","py","DoubleCurrencyAndChainLogo","chainId","currency","currencies","size","grow","Text","variant","symbol","alignItems","LiquidityPositionInfoBadges","badges","label","copyable","icon","DocumentList","color","Number","filter","Boolean","LiquidityPositionStatusIndicator","StatusIndicatorCircle","AnimatedStatusIndicatorCircle","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","fillOpacity","defaultFill","statusConfig","PositionStatus","IN_RANGE","i18nKey","OUT_OF_RANGE","CLOSED","UNSPECIFIED","config","Trans","getSnapshot","src","canvas","targetHeight","context","getContext","width","height","ratio","Math","round","devicePixelRatio","style","scale","clearRect","drawImage","NFTGrid","styled","div","NFTCanvas","NFTImage","img","PositionNFT","image","animate","setAnimate","useState","canvasRef","useRef","imageRef","onMouseEnter","onMouseLeave","current","ref","hidden","onLoad","STARTS_WITH","usePositionTokenURI","tokenId","contract","useV3NFTPositionManagerContract","inputs","BigNumber","toHexString","toString","result","error","loading","valid","useSingleCallResult","NEVER_RELOAD","gasRequired","tokenURI","startsWith","JSON","parse","atob","slice","length","error2","LiquidityPositionAmountsTile","fiatValue0","fiatValue1","totalFiatValue","currencyInfo0","useCurrencyInfo","currencyInfo1","formatCurrencyAmount","formatPercent","useLocalizationContext","add","CurrencyAmount","fromRawAmount","borderRadius","backgroundColor","p","justifyContent","CurrencyLogo","currencyInfo","value","type","NumberType","FiatTokenPrice","greaterThan","px","Percent","quotient","toFixed","InnerTile","LiquidityPositionPriceRangeTile","minPrice","maxPrice","currentPrice","pricesInverted","setPricesInverted","currencyASymbol","baseCurrency","currencyBSymbol","quoteCurrency","controlOptions","display","Error","displayMinPrice","invert","displayMaxPrice","displayCurrentPrice","displayASymbol","displayBSymbol","SegmentedControl","options","selectedOption","onSelectOption","selected","values","symbolA","symbolB","BodyWrapper","Main","flexDirection","mx","zIndex","HeaderButton","ClickableTamaguiStyle","variants","emphasis","primary","secondary","PositionPage","data","useParams","account","useAccount","pathname","useLocation","useGetPositionsQuery","address","protocolVersions","includes","ProtocolVersion","V3","V4","positions","metadata","from","dispatch","useAppDispatch","collectAsWeth","setCollectAsWeth","v4Enabled","isLoading","useFeatureFlagWithLoading","FeatureFlags","V4Everywhere","useFormatter","feeValue0","feeValue1","fiatFeeValue0","fiatFeeValue1","priceLower","priceUpper","useV3PositionDerivedInfo","maxWidth","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","onPress","setOpenModal","ModalName","AddLiquidity","initialState","RemoveLiquidity","LoadingFullscreen","amount","mt","mb","nativeWrappedSymbol","Switch","checked","onCheckedChange","prev","Navigate","replace","V2PositionPage","poolTokenPercentage","currencyIdA","currencyIdB","token0","token1","V2","navigate","useNavigate","liquidityAmount","token0USDValue","token1USDValue","useV2PositionDerivedInfo","borderColor","borderWidth","FiatStandard","TokenNonTx","currencySymbol"],"sourceRoot":""}