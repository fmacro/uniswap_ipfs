{"version":3,"file":"static/js/8902.84d9bdc8.chunk.js","mappings":"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","sources":["pages/LegacyPool/shared.tsx","state/stake/hooks.tsx","pages/LegacyPool/v2.tsx"],"sourcesContent":["\"use strict\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { Pool } from \"components/Icons/Pool\";\nimport { useState } from \"react\";\nimport { Anchor, styled, Text } from \"ui/src\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlag } from \"uniswap/src/features/gating/hooks\";\nimport { t } from \"uniswap/src/i18n\";\nconst PoolVersionItem = styled(Anchor, {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  width: \"100%\",\n  gap: \"$gap12\",\n  textDecorationLine: \"none\",\n  color: \"$neutral2\",\n  hoverStyle: {\n    color: \"$neutral1\"\n  }\n});\nconst menuItems = {\n  [ProtocolVersion.V4]: {\n    title: t(\"pool.v4\"),\n    link: \"/pool\"\n  },\n  [ProtocolVersion.V3]: {\n    title: t(\"pool.v3\"),\n    link: \"/pool\"\n  },\n  [ProtocolVersion.V2]: {\n    title: t(\"pool.v2\"),\n    link: \"/pools/v2\"\n  }\n};\nconst titles = {\n  [ProtocolVersion.V4]: \"v4\",\n  [ProtocolVersion.V3]: \"v3\",\n  [ProtocolVersion.V2]: \"v2\"\n};\nexport function PoolVersionMenu({ protocolVersion }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isV4Enabled = useFeatureFlag(FeatureFlags.V4Everywhere);\n  return <DropdownSelector\n    isOpen={isOpen}\n    menuLabel={<Text variant=\"body1\">{titles[protocolVersion]}</Text>}\n    internalMenuItems={<>{Object.entries(menuItems).filter(([protocol, info]) => {\n      if (!isV4Enabled && protocol === ProtocolVersion.V4) {\n        return false;\n      }\n      return info.title !== menuItems[protocolVersion].title;\n    }).map(([, info]) => <PoolVersionItem href={info.link} key={info.title}>\n      <Pool width=\"20px\" height=\"20px\" />\n      <Text variant=\"body1\" style={{ color: \"inherit\" }}>{info.title}</Text>\n    </PoolVersionItem>)}</>}\n    toggleOpen={setIsOpen}\n    buttonStyle={{ height: 36 }}\n    adaptToSheet={false}\n  />;\n}\n","\"use strict\";\nimport { Interface } from \"@ethersproject/abi\";\nimport StakingRewardsJSON from \"@uniswap/liquidity-staker/build/StakingRewards.json\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { Pair } from \"@uniswap/v2-sdk\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useCurrentBlockTimestamp from \"hooks/useCurrentBlockTimestamp\";\nimport JSBI from \"jsbi\";\nimport { NEVER_RELOAD, useMultipleContractSingleData } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nimport { DAI, UNI, USDC_MAINNET, USDT, WBTC, WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { logger } from \"utilities/src/logger/logger\";\nconst STAKING_REWARDS_INTERFACE = new Interface(StakingRewardsJSON.abi);\nexport const STAKING_GENESIS = 1600387200;\nconst STAKING_REWARDS_INFO = {\n  1: [\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], DAI],\n      stakingRewardAddress: \"0xa1484C3aa22a66C62b77E0AE78E15258bd0cB711\"\n    },\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], USDC_MAINNET],\n      stakingRewardAddress: \"0x7FBa4B8Dc5E7616e59622806932DBea72537A56b\"\n    },\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], USDT],\n      stakingRewardAddress: \"0x6C3e4cb2E96B01F4b866965A91ed4437839A121a\"\n    },\n    {\n      tokens: [WRAPPED_NATIVE_CURRENCY[UniverseChainId.Mainnet], WBTC],\n      stakingRewardAddress: \"0xCA35e32e7926b96A9988f61d510E038108d8068e\"\n    }\n  ]\n};\nexport function useStakingInfo(pairToFilterBy) {\n  const account = useAccount();\n  const currentBlockTimestamp = useCurrentBlockTimestamp(NEVER_RELOAD);\n  const info = useMemo(\n    () => account.chainId ? STAKING_REWARDS_INFO[account.chainId]?.filter(\n      (stakingRewardInfo) => pairToFilterBy === void 0 ? true : pairToFilterBy === null ? false : pairToFilterBy.involvesToken(stakingRewardInfo.tokens[0]) && pairToFilterBy.involvesToken(stakingRewardInfo.tokens[1])\n    ) ?? [] : [],\n    [account.chainId, pairToFilterBy]\n  );\n  const uni = account.chainId ? UNI[account.chainId] : void 0;\n  const rewardsAddresses = useMemo(() => info.map(({ stakingRewardAddress }) => stakingRewardAddress), [info]);\n  const accountArg = useMemo(() => [account.address], [account.address]);\n  const balances = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, \"balanceOf\", accountArg);\n  const earnedAmounts = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, \"earned\", accountArg);\n  const totalSupplies = useMultipleContractSingleData(rewardsAddresses, STAKING_REWARDS_INTERFACE, \"totalSupply\");\n  const rewardRates = useMultipleContractSingleData(\n    rewardsAddresses,\n    STAKING_REWARDS_INTERFACE,\n    \"rewardRate\",\n    void 0,\n    NEVER_RELOAD\n  );\n  const periodFinishes = useMultipleContractSingleData(\n    rewardsAddresses,\n    STAKING_REWARDS_INTERFACE,\n    \"periodFinish\",\n    void 0,\n    NEVER_RELOAD\n  );\n  return useMemo(() => {\n    if (!account.chainId || !uni) {\n      return [];\n    }\n    return rewardsAddresses.reduce((memo, rewardsAddress, index) => {\n      const balanceState = balances[index];\n      const earnedAmountState = earnedAmounts[index];\n      const totalSupplyState = totalSupplies[index];\n      const rewardRateState = rewardRates[index];\n      const periodFinishState = periodFinishes[index];\n      if (\n        // these may be undefined if not logged in\n        !balanceState?.loading && !earnedAmountState?.loading && // always need these\n        totalSupplyState && !totalSupplyState.loading && rewardRateState && !rewardRateState.loading && periodFinishState && !periodFinishState.loading\n      ) {\n        if (balanceState?.error || earnedAmountState?.error || totalSupplyState.error || rewardRateState.error || periodFinishState.error) {\n          logger.warn(\"stake/hooks\", \"useStakingInfo\", \"Failed to load staking rewards info\");\n          return memo;\n        }\n        const tokens = info[index].tokens;\n        const dummyPair = new Pair(\n          CurrencyAmount.fromRawAmount(tokens[0], \"0\"),\n          CurrencyAmount.fromRawAmount(tokens[1], \"0\")\n        );\n        const stakedAmount = CurrencyAmount.fromRawAmount(\n          dummyPair.liquidityToken,\n          JSBI.BigInt(balanceState?.result?.[0] ?? 0)\n        );\n        const totalStakedAmount = CurrencyAmount.fromRawAmount(\n          dummyPair.liquidityToken,\n          JSBI.BigInt(totalSupplyState.result?.[0])\n        );\n        const totalRewardRate = CurrencyAmount.fromRawAmount(uni, JSBI.BigInt(rewardRateState.result?.[0]));\n        const getHypotheticalRewardRate = (stakedAmount2, totalStakedAmount2, totalRewardRate2) => {\n          return CurrencyAmount.fromRawAmount(\n            uni,\n            JSBI.greaterThan(totalStakedAmount2.quotient, JSBI.BigInt(0)) ? JSBI.divide(JSBI.multiply(totalRewardRate2.quotient, stakedAmount2.quotient), totalStakedAmount2.quotient) : JSBI.BigInt(0)\n          );\n        };\n        const individualRewardRate = getHypotheticalRewardRate(stakedAmount, totalStakedAmount, totalRewardRate);\n        const periodFinishSeconds = periodFinishState.result?.[0]?.toNumber();\n        const periodFinishMs = periodFinishSeconds * 1e3;\n        const active = periodFinishSeconds && currentBlockTimestamp ? periodFinishSeconds > currentBlockTimestamp.toNumber() : true;\n        memo.push({\n          stakingRewardAddress: rewardsAddress,\n          tokens: info[index].tokens,\n          periodFinish: periodFinishMs > 0 ? new Date(periodFinishMs) : void 0,\n          earnedAmount: CurrencyAmount.fromRawAmount(uni, JSBI.BigInt(earnedAmountState?.result?.[0] ?? 0)),\n          rewardRate: individualRewardRate,\n          totalRewardRate,\n          stakedAmount,\n          totalStakedAmount,\n          getHypotheticalRewardRate,\n          active\n        });\n      }\n      return memo;\n    }, []);\n  }, [\n    balances,\n    account.chainId,\n    currentBlockTimestamp,\n    earnedAmounts,\n    info,\n    periodFinishes,\n    rewardRates,\n    rewardsAddresses,\n    totalSupplies,\n    uni\n  ]);\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { ButtonOutlined, ButtonPrimary, ButtonSecondary } from \"components/Button/buttons\";\nimport Card from \"components/Card/cards\";\nimport FullPositionCard from \"components/PositionCard\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport Row, { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { CardBGImage, CardNoise, CardSection, DataCard } from \"components/earn/styled\";\nimport { Dots } from \"components/swap/styled\";\nimport { BIG_INT_ZERO } from \"constants/misc\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useV2Pairs } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport { useRpcTokenBalancesWithLoadingIndicator } from \"lib/hooks/useCurrencyBalance\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { PoolVersionMenu } from \"pages/LegacyPool/shared\";\nimport { useMemo } from \"react\";\nimport { ChevronsRight } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { useStakingInfo } from \"state/stake/hooks\";\nimport { toV2LiquidityToken, useTrackedTokenPairs } from \"state/user/hooks\";\nimport { ExternalLink, HideSmall, ThemedText } from \"theme/components\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0px 8px;\n  `};\n`;\nconst LPFeeExplainer = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  margin: 0 0 16px 0;\n  overflow: hidden;\n`;\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`;\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  height: 40px;\n  width: fit-content;\n  border-radius: 12px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    width: 48%;\n  `};\n`;\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  height: 40px;\n  width: fit-content;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    width: 48%;\n  `};\n`;\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral2};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst Header = styled(ThemedText.H1Small)`\n  margin-top: 8px;\n  justify-self: flex-start;\n  font-weight: 535;\n  text-wrap: nowrap;\n`;\nexport default function Pool() {\n  const theme = useTheme();\n  const account = useAccount();\n  const networkSupportsV2 = useNetworkSupportsV2();\n  let trackedTokenPairs = useTrackedTokenPairs();\n  if (!networkSupportsV2) {\n    trackedTokenPairs = [];\n  }\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  );\n  const [balanceMap, fetchingV2PairBalances] = useRpcTokenBalancesWithLoadingIndicator(\n    account.address,\n    tokenPairsWithLiquidityTokens.map(({ liquidityToken }) => liquidityToken),\n    !account?.address\n  );\n  const liquidityTokensWithBalances = useMemo(\n    () => tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) => {\n      return balanceMap[liquidityToken.address]?.greaterThan(0);\n    }),\n    [tokenPairsWithLiquidityTokens, balanceMap]\n  );\n  const v2Pairs = useV2Pairs(liquidityTokensWithBalances.map(({ tokens }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair);\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair) => Boolean(v2Pair));\n  const stakingInfo = useStakingInfo();\n  const stakingInfosWithBalance = stakingInfo?.filter(\n    (pool) => JSBI.greaterThan(pool.stakedAmount.quotient, BIG_INT_ZERO)\n  );\n  const stakingPairs = useV2Pairs(stakingInfosWithBalance?.map((stakingInfo2) => stakingInfo2.tokens));\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity.filter((v2Pair) => {\n    return stakingPairs?.map((stakingPair) => stakingPair[1]).filter((stakingPair) => stakingPair?.liquidityToken.address === v2Pair.liquidityToken.address).length === 0;\n  });\n  return <Trace logImpression page={InterfacePageName.POOL_PAGE}><>\n    <PageWrapper>\n      <LPFeeExplainer>\n        <CardBGImage />\n        <CardNoise />\n        <CardSection><AutoColumn gap=\"md\">\n          <RowBetween><ThemedText.DeprecatedWhite fontWeight={535}><Trans i18nKey=\"pool.liquidity.rewards\" /></ThemedText.DeprecatedWhite></RowBetween>\n          <RowBetween><ThemedText.DeprecatedWhite fontSize={14}><Trans i18nKey=\"pool.liquidity.earn.fee\" /></ThemedText.DeprecatedWhite></RowBetween>\n          <ExternalLink\n            style={{ color: theme.white, textDecoration: \"underline\" }}\n            target=\"_blank\"\n            href=\"https://docs.uniswap.org/contracts/v2/concepts/core-concepts/pools\"\n          ><ThemedText.DeprecatedWhite fontSize={14}><Trans i18nKey=\"pool.learnAbout\" /></ThemedText.DeprecatedWhite></ExternalLink>\n        </AutoColumn></CardSection>\n        <CardBGImage />\n        <CardNoise />\n      </LPFeeExplainer>\n      {!networkSupportsV2 ? <V2Unsupported /> : <AutoColumn gap=\"lg\" justify=\"center\"><AutoColumn gap=\"md\" style={{ width: \"100%\" }}>\n        <Row gap=\"md\" justify=\"space-between\" style={{ marginTop: \"1rem\" }} padding=\"0\">\n          <Row gap=\"md\" width=\"content\">\n            <HideSmall><Header><Trans i18nKey=\"pool.yourv2\" /></Header></HideSmall>\n            <PoolVersionMenu protocolVersion={ProtocolVersion.V2} />\n          </Row>\n          <ButtonRow>\n            <ResponsiveButtonSecondary as={Link} padding=\"6px 8px\" to=\"/add/v2/ETH\"><Trans i18nKey=\"pool.create.pair\" /></ResponsiveButtonSecondary>\n            <ResponsiveButtonPrimary id=\"find-pool-button\" as={Link} to=\"/pools/v2/find\" padding=\"6px 8px\"><Text fontWeight={535} fontSize={16}><Trans i18nKey=\"pool.import\" /></Text></ResponsiveButtonPrimary>\n            <ResponsiveButtonPrimary id=\"join-pool-button\" as={Link} to=\"/add/v2/ETH\" padding=\"6px 8px\"><Text fontWeight={535} fontSize={16}><Trans i18nKey=\"pool.v2.add\" /></Text></ResponsiveButtonPrimary>\n          </ButtonRow>\n        </Row>\n        {!account ? <Card padding=\"40px\"><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Trans i18nKey=\"pool.liquidity.connectToAdd\" /></ThemedText.DeprecatedBody></Card> : v2IsLoading ? <EmptyProposals><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Dots><Trans i18nKey=\"common.loading\" /></Dots></ThemedText.DeprecatedBody></EmptyProposals> : allV2PairsWithLiquidity?.length > 0 || stakingPairs?.length > 0 ? <>\n          {v2PairsWithoutStakedAmount.map((v2Pair) => <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />)}\n          {stakingPairs.map(\n            (stakingPair, i) => stakingPair[1] && // skip pairs that arent loaded\n            <FullPositionCard\n              key={stakingInfosWithBalance[i].stakingRewardAddress}\n              pair={stakingPair[1]}\n              stakedBalance={stakingInfosWithBalance[i].stakedAmount}\n            />\n          )}\n          <RowFixed justify=\"center\" style={{ width: \"100%\" }}><ButtonOutlined\n            as={Link}\n            to=\"/migrate/v2\"\n            id=\"import-pool-link\"\n            style={{\n              padding: \"8px 16px\",\n              margin: \"0 4px\",\n              borderRadius: \"12px\",\n              width: \"fit-content\",\n              fontSize: \"14px\"\n            }}\n          >\n            <ChevronsRight size={16} style={{ marginRight: \"8px\" }} />\n            <Trans i18nKey=\"pool.v2.migratev3\" />\n          </ButtonOutlined></RowFixed>\n        </> : <EmptyProposals><ThemedText.DeprecatedBody color={theme.neutral3} textAlign=\"center\"><Trans i18nKey=\"pool.noLiquidity\" /></ThemedText.DeprecatedBody></EmptyProposals>}\n      </AutoColumn></AutoColumn>}\n    </PageWrapper>\n    <SwitchLocaleLink />\n  </></Trace>;\n}\n"],"names":["PoolVersionItem","styled","Anchor","display","flexDirection","alignItems","width","gap","textDecorationLine","color","hoverStyle","menuItems","ProtocolVersion","V4","title","t","link","V3","V2","titles","PoolVersionMenu","protocolVersion","isOpen","setIsOpen","useState","isV4Enabled","useFeatureFlag","FeatureFlags","V4Everywhere","DropdownSelector","menuLabel","Text","variant","internalMenuItems","Object","entries","filter","protocol","info","map","href","Pool","height","style","toggleOpen","buttonStyle","adaptToSheet","STAKING_REWARDS_INTERFACE","Interface","StakingRewardsJSON","STAKING_REWARDS_INFO","tokens","WRAPPED_NATIVE_CURRENCY","UniverseChainId","Mainnet","DAI","stakingRewardAddress","USDC_MAINNET","USDT","WBTC","PageWrapper","AutoColumn","theme","deprecated_mediaWidth","deprecated_upToSmall","LPFeeExplainer","DataCard","ButtonRow","RowFixed","ResponsiveButtonPrimary","ButtonPrimary","ResponsiveButtonSecondary","ButtonSecondary","EmptyProposals","div","neutral2","Header","ThemedText","H1Small","account","v2Pairs","stakingInfo","stakingInfosWithBalance","allV2PairsWithLiquidity","stakingPairs","useTheme","useAccount","networkSupportsV2","useNetworkSupportsV2","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","useMemo","liquidityToken","toV2LiquidityToken","balanceMap","fetchingV2PairBalances","useRpcTokenBalancesWithLoadingIndicator","address","liquidityTokensWithBalances","greaterThan","useV2Pairs","v2IsLoading","length","some","V2Pair","pair","v2Pair","Boolean","pairToFilterBy","currentBlockTimestamp","useCurrentBlockTimestamp","NEVER_RELOAD","chainId","stakingRewardInfo","involvesToken","uni","UNI","rewardsAddresses","accountArg","balances","useMultipleContractSingleData","earnedAmounts","totalSupplies","rewardRates","periodFinishes","reduce","memo","rewardsAddress","index","balanceState","earnedAmountState","totalSupplyState","rewardRateState","periodFinishState","loading","error","logger","warn","dummyPair","Pair","CurrencyAmount","fromRawAmount","stakedAmount","JSBI","result","totalStakedAmount","totalRewardRate","getHypotheticalRewardRate","stakedAmount2","totalStakedAmount2","totalRewardRate2","quotient","individualRewardRate","periodFinishSeconds","toNumber","periodFinishMs","active","push","periodFinish","Date","earnedAmount","rewardRate","useStakingInfo","pool","BIG_INT_ZERO","stakingInfo2","v2PairsWithoutStakedAmount","stakingPair","Trace","logImpression","page","InterfacePageName","POOL_PAGE","CardBGImage","CardNoise","CardSection","RowBetween","DeprecatedWhite","fontWeight","Trans","i18nKey","fontSize","ExternalLink","white","textDecoration","target","justify","Row","marginTop","padding","HideSmall","as","Link","to","id","DeprecatedBody","neutral3","textAlign","Dots","FullPositionCard","i","stakedBalance","ButtonOutlined","margin","borderRadius","ChevronsRight","size","marginRight","Card","V2Unsupported","SwitchLocaleLink"],"sourceRoot":""}