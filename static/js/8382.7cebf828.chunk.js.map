{"version":3,"file":"static/js/8382.7cebf828.chunk.js","mappings":"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","sources":["../../../packages/ui/src/components/icons/ReverseArrows.tsx","components/Liquidity/LiquidityPositionFeeStats.tsx","components/Liquidity/LiquidityPositionCard.tsx","components/Liquidity/LiquidityPositionInfo.tsx","../../../packages/ui/src/components/icons/StatusIndicatorCircle.tsx","components/Liquidity/LiquidityPositionStatusIndicator.tsx","pages/MigrateV3/index.tsx"],"sourcesContent":["import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [ReverseArrows, AnimatedReverseArrows] = createIcon({\n  name: \"ReverseArrows\",\n  getIcon: (props) => <Svg viewBox=\"0 0 20 20\" fill=\"none\" {...props}><Path\n    d=\"M2.05836 6.27468C2.00086 6.21718 1.95514 6.14789 1.92348 6.07123C1.86014 5.91873 1.86014 5.74623 1.92348 5.59373C1.95514 5.51706 2.00086 5.44798 2.05836 5.39048L5.3917 2.05715C5.63586 1.81298 6.03173 1.81298 6.27589 2.05715C6.52006 2.30132 6.52006 2.69718 6.27589 2.94134L4.00925 5.20799H14.1667C14.5117 5.20799 14.7917 5.48799 14.7917 5.83299C14.7917 6.17799 14.5117 6.45799 14.1667 6.45799H4.00925L6.27589 8.72463C6.52006 8.9688 6.52006 9.36466 6.27589 9.60882C6.15423 9.73049 5.9942 9.79213 5.8342 9.79213C5.6742 9.79213 5.51418 9.73132 5.39251 9.60882L2.05836 6.27468ZM18.0766 13.9271C18.045 13.8504 17.9992 13.7813 17.9417 13.7238L14.6084 10.3905C14.3642 10.1463 13.9684 10.1463 13.7242 10.3905C13.4801 10.6346 13.4801 11.0305 13.7242 11.2747L15.9909 13.5413H5.83339C5.48839 13.5413 5.20839 13.8213 5.20839 14.1663C5.20839 14.5113 5.48839 14.7913 5.83339 14.7913H15.9909L13.7242 17.058C13.4801 17.3021 13.4801 17.698 13.7242 17.9422C13.8459 18.0638 14.0059 18.1255 14.1659 18.1255C14.3259 18.1255 14.4859 18.0647 14.6076 17.9422L17.9409 14.6088C17.9984 14.5513 18.0442 14.4822 18.0758 14.4056C18.14 14.2522 18.14 14.0804 18.0766 13.9271Z\"\n    fill=\"currentColor\"\n  /></Svg>\n});\n","\"use strict\";\nimport { useState } from \"react\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, Text, styled } from \"ui/src\";\nimport { ReverseArrows } from \"ui/src/components/icons/ReverseArrows\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst PrimaryText = styled(Text, {\n  color: \"$neutral1\",\n  variant: \"body1\"\n});\nconst SecondaryText = styled(Text, {\n  color: \"$neutral2\",\n  variant: \"body3\"\n});\nexport function LiquidityPositionFeeStats({\n  formattedUsdValue,\n  formattedUsdFees,\n  totalApr,\n  feeApr,\n  lowPrice,\n  highPrice\n}) {\n  const [pricesInverted, setPricesInverted] = useState(false);\n  const lowDisplayPrice = pricesInverted ? lowPrice.invert() : lowPrice;\n  const highDisplayPrice = pricesInverted ? highPrice.invert() : highPrice;\n  return <Flex row alignItems=\"center\" gap=\"$gap20\">\n    <Flex gap=\"$gap4\">\n      <PrimaryText>{formattedUsdValue}</PrimaryText>\n      <SecondaryText>\n        {\"+\"}\n        {formattedUsdFees}\n        {\" fees\"}\n      </SecondaryText>\n    </Flex>\n    <Flex gap=\"$gap4\">\n      <PrimaryText>{totalApr}</PrimaryText>\n      <SecondaryText><Trans i18nKey=\"position.stats.totalApr\" /></SecondaryText>\n    </Flex>\n    <Flex gap=\"$gap4\">\n      <PrimaryText>{feeApr}</PrimaryText>\n      <SecondaryText><Trans i18nKey=\"position.stats.feeApr\" /></SecondaryText>\n    </Flex>\n    <Flex gap=\"$gap4\">\n      <Flex row gap=\"$gap12\" alignItems=\"center\">\n        <SecondaryText><Trans i18nKey=\"chart.price.label.low\" /></SecondaryText>\n        <PrimaryText>\n          {lowDisplayPrice.toSignificant(6)}\n          {\" \"}\n          {lowDisplayPrice.quoteCurrency.symbol}\n          {\" /\"}\n          {\" \"}\n          {lowDisplayPrice.baseCurrency.symbol}\n        </PrimaryText>\n      </Flex>\n      <Flex row gap=\"$gap12\" alignItems=\"center\">\n        <SecondaryText><Trans i18nKey=\"chart.price.label.high\" /></SecondaryText>\n        <PrimaryText>\n          {highDisplayPrice.toSignificant(6)}\n          {\" \"}\n          {highDisplayPrice.quoteCurrency.symbol}\n          {\" /\"}\n          {\" \"}\n          {highDisplayPrice.baseCurrency.symbol}\n        </PrimaryText>\n      </Flex>\n    </Flex>\n    <Flex height=\"100%\" justifyContent=\"flex-end\" onPress={() => setPricesInverted((prevInverted) => !prevInverted)}><ReverseArrows {...ClickableTamaguiStyle} color=\"$neutral2\" size={16} /></Flex>\n  </Flex>;\n}\n","\"use strict\";\nimport { Price } from \"@uniswap/sdk-core\";\nimport { LiquidityPositionFeeStats } from \"components/Liquidity/LiquidityPositionFeeStats\";\nimport { LiquidityPositionInfo } from \"components/Liquidity/LiquidityPositionInfo\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { useMemo } from \"react\";\nimport { Flex } from \"ui/src\";\nexport function LiquidityPositionCard({ liquidityPosition, ...rest }) {\n  const positionInfo = useMemo(() => parseRestPosition(liquidityPosition), [liquidityPosition]);\n  if (!liquidityPosition || !positionInfo) {\n    return null;\n  }\n  const { currency0Amount, currency1Amount } = positionInfo;\n  return <Flex\n    p=\"$spacing24\"\n    gap=\"$spacing24\"\n    borderWidth={1}\n    borderRadius=\"$rounded20\"\n    borderColor=\"$surface3\"\n    width=\"100%\"\n    overflow=\"hidden\"\n    {...rest}\n  >\n    <Flex row alignItems=\"center\" justifyContent=\"space-between\">\n      <LiquidityPositionInfo position={liquidityPosition} />\n      {\n        /* TODO: add the range chart */\n      }\n    </Flex>\n    {\n      /* TODO: calculate the real fee stats here: */\n    }\n    <LiquidityPositionFeeStats\n      formattedUsdValue=\"$1,245.14\"\n      formattedUsdFees=\"$11.41\"\n      totalApr=\"122.41%\"\n      feeApr=\"134.78%\"\n      lowPrice={new Price(currency0Amount.currency, currency1Amount.currency, \"1\", \"2\")}\n      highPrice={new Price(currency0Amount.currency, currency1Amount.currency, \"1\", \"3\")}\n    />\n  </Flex>;\n}\n","\"use strict\";\nimport { LiquidityPositionInfoBadges } from \"components/Liquidity/LiquidityPositionInfoBadges\";\nimport { LiquidityPositionStatusIndicator } from \"components/Liquidity/LiquidityPositionStatusIndicator\";\nimport { getProtocolVersionLabel, parseRestPosition } from \"components/Liquidity/utils\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { useMemo } from \"react\";\nimport { Flex, Text } from \"ui/src\";\nimport { DocumentList } from \"ui/src/components/icons/DocumentList\";\nexport function LiquidityPositionInfo({ position }) {\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  if (!positionInfo) {\n    return null;\n  }\n  const { currency0Amount, currency1Amount, status, feeTier, v4hook, version } = positionInfo;\n  const versionLabel = getProtocolVersionLabel(version);\n  return <Flex row gap=\"$gap16\" py=\"$spacing4\">\n    <DoubleCurrencyAndChainLogo\n      chainId={currency0Amount?.currency.chainId}\n      currencies={[currency0Amount?.currency, currency1Amount?.currency]}\n      size={44}\n    />\n    <Flex grow>\n      <Flex row gap=\"$gap16\">\n        <Text variant=\"heading3\">\n          {currency0Amount?.currency.symbol}\n          {\" / \"}\n          {currency1Amount?.currency.symbol}\n        </Text>\n        <Flex row gap={2} alignItems=\"center\"><LiquidityPositionInfoBadges\n          size=\"small\"\n          badges={[\n            versionLabel ? { label: versionLabel } : void 0,\n            v4hook ? { label: v4hook, copyable: true, icon: <DocumentList color=\"$neutral2\" size={16} /> } : void 0,\n            feeTier ? { label: `${Number(feeTier) / 1e4}%` } : void 0\n          ].filter(Boolean)}\n        /></Flex>\n      </Flex>\n      <LiquidityPositionStatusIndicator status={status} />\n    </Flex>\n  </Flex>;\n}\n","import { Path, Svg } from \"react-native-svg\";\nimport { createIcon } from \"../factories/createIcon\";\nexport const [StatusIndicatorCircle, AnimatedStatusIndicatorCircle] = createIcon({\n  name: \"StatusIndicatorCircle\",\n  getIcon: (props) => <Svg viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n    <Path\n      d=\"M0 6C0 2.68629 2.68629 0 6 0C9.31371 0 12 2.68629 12 6C12 9.31371 9.31371 12 6 12C2.68629 12 0 9.31371 0 6Z\"\n      fill=\"currentColor\"\n      fillOpacity=\"0.6\"\n    />\n    <Path\n      d=\"M2 6C2 3.79086 3.79086 2 6 2C8.20914 2 10 3.79086 10 6C10 8.20914 8.20914 10 6 10C3.79086 10 2 8.20914 2 6Z\"\n      fill=\"currentColor\"\n    />\n  </Svg>,\n  defaultFill: \"#FF5F52\"\n});\n","\"use strict\";\nimport { PositionStatus } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { Flex, Text } from \"ui/src\";\nimport { StatusIndicatorCircle } from \"ui/src/components/icons/StatusIndicatorCircle\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst statusConfig = {\n  [PositionStatus.IN_RANGE]: {\n    color: \"$statusSuccess\",\n    i18nKey: \"common.withinRange\"\n  },\n  [PositionStatus.OUT_OF_RANGE]: {\n    color: \"$statusCritical\",\n    i18nKey: \"common.outOfRange\"\n  },\n  [PositionStatus.CLOSED]: {\n    color: \"$neutral2\",\n    i18nKey: \"common.closed\"\n  },\n  [PositionStatus.UNSPECIFIED]: void 0\n};\nexport function LiquidityPositionStatusIndicator({ status }) {\n  const config = statusConfig[status];\n  if (!config) {\n    return null;\n  }\n  return <Flex row gap=\"$gap8\" alignItems=\"center\">\n    <StatusIndicatorCircle color={config.color} />\n    <Text variant=\"body3\" color={config.color}><Trans i18nKey={config.i18nKey} /></Text>\n  </Flex>;\n}\n","\"use strict\";\nimport { ProtocolVersion } from \"@uniswap/client-pools/dist/pools/v1/types_pb\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink } from \"components/BreadcrumbNav\";\nimport { LiquidityPositionCard } from \"components/Liquidity/LiquidityPositionCard\";\nimport { parseRestPosition } from \"components/Liquidity/utils\";\nimport { PoolProgressIndicator } from \"components/PoolProgressIndicator/PoolProgressIndicator\";\nimport { CreatePositionContextProvider, PriceRangeContextProvider } from \"pages/Pool/Positions/create/ContextProviders\";\nimport { useCreatePositionContext } from \"pages/Pool/Positions/create/CreatePositionContext\";\nimport { EditSelectTokensStep } from \"pages/Pool/Positions/create/EditStep\";\nimport { SelectPriceRangeStep } from \"pages/Pool/Positions/create/RangeSelectionStep\";\nimport { SelectTokensStep } from \"pages/Pool/Positions/create/SelectTokenStep\";\nimport { PositionFlowStep } from \"pages/Pool/Positions/create/types\";\nimport { useMemo } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { PositionField } from \"types/position\";\nimport { Flex, Main, Text, styled } from \"ui/src\";\nimport { ArrowDown } from \"ui/src/components/icons/ArrowDown\";\nimport { RotateLeft } from \"ui/src/components/icons/RotateLeft\";\nimport { useGetPositionsQuery } from \"uniswap/src/data/rest/getPositions\";\nimport { FeatureFlags } from \"uniswap/src/features/gating/flags\";\nimport { useFeatureFlagWithLoading } from \"uniswap/src/features/gating/hooks\";\nimport { Trans, useTranslation } from \"uniswap/src/i18n\";\nimport { useAccount } from \"wagmi\";\nconst BodyWrapper = styled(Main, {\n  backgroundColor: \"$surface1\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  gap: 60,\n  mt: \"1rem\",\n  mx: \"auto\",\n  width: \"100%\",\n  zIndex: \"$default\",\n  p: 24\n});\nfunction MigrateV3Inner({ positionInfo }) {\n  const { positionId } = useParams();\n  const { t } = useTranslation();\n  const { step, setStep } = useCreatePositionContext();\n  const { value: v4Enabled, isLoading: isV4GateLoading } = useFeatureFlagWithLoading(FeatureFlags.V4Everywhere);\n  const { currency0Amount, currency1Amount } = positionInfo;\n  if (!isV4GateLoading && !v4Enabled) {\n    return <Navigate to=\"/pools\" replace />;\n  }\n  if (isV4GateLoading) {\n    return null;\n  }\n  return <BodyWrapper>\n    <Flex maxWidth={360}>\n      {\n        /* nav breadcrumbs */\n      }\n      <Flex width=\"100%\"><BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\n        <BreadcrumbNavLink to=\"/positions\">\n          <Trans i18nKey=\"pool.positions.title\" />\n          {\" \"}\n          <ChevronRight size={14} />\n        </BreadcrumbNavLink>\n        <BreadcrumbNavLink to={`/explore/position/${positionId}`}>\n          {currency0Amount.currency.symbol}\n          {\" / \"}\n          {currency1Amount.currency.symbol}\n          {\" \"}\n          <ChevronRight size={14} />\n        </BreadcrumbNavLink>\n      </BreadcrumbNavContainer></Flex>\n      <Text width=\"100%\" variant=\"heading2\" mt=\"$spacing20\"><Trans i18nKey=\"common.migrate.position\" /></Text>\n      <PoolProgressIndicator\n        mt=\"$spacing32\"\n        steps={[\n          { label: t(\"migrate.selectFeeTier\"), active: step === PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER },\n          { label: t(\"migrate.setRange\"), active: step === PositionFlowStep.PRICE_RANGE }\n        ]}\n      />\n    </Flex>\n    <Flex flex={3} gap=\"$gap12\">\n      <Flex mt={44} row justifyContent=\"flex-end\">\n        {\n          /* TODO: replace with Spore button once available */\n        }\n        <Flex\n          row\n          backgroundColor=\"$surface2\"\n          borderRadius=\"$rounded12\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          gap=\"$gap4\"\n          py=\"$padding8\"\n          px=\"$padding12\"\n          {...ClickableTamaguiStyle}\n          onPress={() => {\n            setStep(PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER);\n          }}\n        >\n          <RotateLeft color=\"$neutral1\" size={16} />\n          <Text variant=\"buttonLabel4\" color=\"$neutral2\"><Trans i18nKey=\"common.button.reset\" /></Text>\n        </Flex>\n      </Flex>\n      <LiquidityPositionCard liquidityPosition={positionInfo.restPosition} mt=\"$spacing24\" />\n      <Flex justifyContent=\"center\" alignItems=\"center\"><Flex shrink backgroundColor=\"$surface2\" borderRadius=\"$rounded12\" p=\"$padding12\"><ArrowDown size={20} color=\"$neutral1\" /></Flex></Flex>\n      {step === PositionFlowStep.SELECT_TOKENS_AND_FEE_TIER ? <SelectTokensStep\n        width=\"100%\"\n        maxWidth=\"unset\"\n        tokensLocked\n        onContinue={() => {\n          setStep(PositionFlowStep.PRICE_RANGE);\n        }}\n      /> : <EditSelectTokensStep width=\"100%\" maxWidth=\"unset\" />}\n      {step === PositionFlowStep.PRICE_RANGE && <SelectPriceRangeStep\n        width=\"100%\"\n        maxWidth=\"unset\"\n        onContinue={() => {\n        }}\n      />}\n    </Flex>\n  </BodyWrapper>;\n}\nexport default function MigrateV3() {\n  const { tokenId } = useParams();\n  const account = useAccount();\n  const { data } = useGetPositionsQuery(\n    account.address ? {\n      poolId: tokenId,\n      address: account.address,\n      protocolVersions: [ProtocolVersion.V3]\n    } : void 0\n  );\n  const position = data?.positions[0];\n  const positionInfo = useMemo(() => parseRestPosition(position), [position]);\n  if (!position || !positionInfo) {\n    return null;\n  }\n  const { currency0Amount, currency1Amount } = positionInfo;\n  return <CreatePositionContextProvider\n    initialState={{\n      currencyInputs: {\n        [PositionField.TOKEN0]: currency0Amount.currency,\n        [PositionField.TOKEN1]: currency1Amount.currency\n      }\n    }}\n  ><PriceRangeContextProvider><MigrateV3Inner positionInfo={positionInfo} /></PriceRangeContextProvider></CreatePositionContextProvider>;\n}\n"],"names":["ReverseArrows","AnimatedReverseArrows","createIcon","name","getIcon","props","Svg","viewBox","fill","Path","d","PrimaryText","styled","Text","color","variant","SecondaryText","LiquidityPositionFeeStats","formattedUsdValue","formattedUsdFees","totalApr","feeApr","lowPrice","highPrice","pricesInverted","setPricesInverted","useState","lowDisplayPrice","invert","highDisplayPrice","Flex","row","alignItems","gap","Trans","i18nKey","toSignificant","quoteCurrency","symbol","baseCurrency","height","justifyContent","onPress","prevInverted","ClickableTamaguiStyle","size","LiquidityPositionCard","liquidityPosition","rest","positionInfo","useMemo","parseRestPosition","currency0Amount","currency1Amount","p","borderWidth","borderRadius","borderColor","width","overflow","LiquidityPositionInfo","position","Price","currency","status","feeTier","v4hook","version","versionLabel","getProtocolVersionLabel","py","DoubleCurrencyAndChainLogo","chainId","currencies","grow","LiquidityPositionInfoBadges","badges","label","copyable","icon","DocumentList","Number","filter","Boolean","LiquidityPositionStatusIndicator","StatusIndicatorCircle","AnimatedStatusIndicatorCircle","fillOpacity","defaultFill","statusConfig","PositionStatus","IN_RANGE","OUT_OF_RANGE","CLOSED","UNSPECIFIED","config","BodyWrapper","Main","backgroundColor","display","flexDirection","mt","mx","zIndex","MigrateV3Inner","positionId","useParams","t","useTranslation","step","setStep","useCreatePositionContext","value","v4Enabled","isLoading","isV4GateLoading","useFeatureFlagWithLoading","FeatureFlags","V4Everywhere","maxWidth","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","PoolProgressIndicator","steps","active","PositionFlowStep","SELECT_TOKENS_AND_FEE_TIER","PRICE_RANGE","flex","px","RotateLeft","restPosition","shrink","ArrowDown","SelectTokensStep","tokensLocked","onContinue","EditSelectTokensStep","SelectPriceRangeStep","Navigate","replace","MigrateV3","data","tokenId","account","useAccount","useGetPositionsQuery","address","poolId","protocolVersions","ProtocolVersion","V3","positions","CreatePositionContextProvider","initialState","currencyInputs","PositionField","TOKEN0","TOKEN1","PriceRangeContextProvider"],"sourceRoot":""}