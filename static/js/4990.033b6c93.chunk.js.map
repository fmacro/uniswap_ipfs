{"version":3,"file":"static/js/4990.033b6c93.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/chevron-up.js","components/swap/UnsupportedCurrencyFooter.tsx","pages/AddLiquidityV2/ConfirmAddModalBottom.tsx","pages/AddLiquidityV2/PoolPriceBar.tsx","state/mint/hooks.tsx","pages/AddLiquidityV2/index.tsx","pages/AddLiquidityV2/redirects.tsx","utils/calculateSlippageAmount.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ChevronUp=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"18 15 12 9 6 15\"}))}));ChevronUp.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ChevronUp.displayName=\"ChevronUp\";export default ChevronUp;","\"use strict\";\nimport { ButtonEmpty } from \"components/Button/buttons\";\nimport Card, { OutlineCard } from \"components/Card/cards\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport Modal from \"components/Modal\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow, RowBetween } from \"components/deprecated/Row\";\nimport { useCurrencyInfo } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useState } from \"react\";\nimport { CloseIcon, ExternalLink, ThemedText } from \"theme/components\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Text } from \"ui/src\";\nimport { SafetyLevel } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nconst DetailsFooter = styled.div`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => show ? \"translateY(0%)\" : \"translateY(-100%)\"};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`;\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`;\nconst AddressText = styled(Text)`\n  color: ${({ theme }) => theme.accent1};\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`;\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies\n}) {\n  const { chainId } = useAccount();\n  const [showDetails, setShowDetails] = useState(false);\n  const tokens = chainId && currencies ? currencies.map((currency) => {\n    return currency?.wrapped;\n  }) : [];\n  return <DetailsFooter show={show}>\n    <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}><Card padding=\"2rem\"><AutoColumn gap=\"lg\">\n      <RowBetween>\n        <ThemedText.DeprecatedMediumHeader><Trans i18nKey=\"common.unsupportedAsset_other\" /></ThemedText.DeprecatedMediumHeader>\n        <CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" />\n      </RowBetween>\n      {tokens.map((token) => {\n        return <UnsupportedTokenCard key={token?.address?.concat(\"not-supported\")} token={token} chainId={chainId} />;\n      })}\n      <AutoColumn gap=\"lg\"><ThemedText.DeprecatedBody fontWeight={535}><Trans i18nKey=\"swap.limitedAssets.warning\" /></ThemedText.DeprecatedBody></AutoColumn>\n    </AutoColumn></Card></Modal>\n    <StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\"><Text color=\"$accent1\"><Trans i18nKey=\"swap.unsupportedAssets.readMore\" /></Text></StyledButtonEmpty>\n  </DetailsFooter>;\n}\nfunction UnsupportedTokenCard({ token, chainId }) {\n  const currencyInfo = useCurrencyInfo(token);\n  if (!token || !currencyInfo?.isSpam && currencyInfo?.safetyLevel === SafetyLevel.Verified) {\n    return null;\n  }\n  return <OutlineCard key={token?.address?.concat(\"not-supported\")} data-testid=\"unsupported-token-card\"><AutoColumn gap=\"10px\">\n    <AutoRow gap=\"5px\" align=\"center\">\n      <CurrencyLogo currency={token} size={24} />\n      <ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody>\n    </AutoRow>\n    {chainId && <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}><AddressText>{token.address}</AddressText></ExternalLink>}\n  </AutoColumn></OutlineCard>;\n}\n","\"use strict\";\nimport { ButtonPrimary } from \"components/Button/buttons\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { Text } from \"rebass\";\nimport { Field } from \"state/mint/actions\";\nimport { ThemedText } from \"theme/components\";\nimport { Trans } from \"uniswap/src/i18n\";\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd\n}) {\n  const depositedAmtA = currencies[Field.CURRENCY_A]?.symbol;\n  const depositedAmtB = currencies[Field.CURRENCY_B]?.symbol;\n  return <>\n    <RowBetween>\n      <ThemedText.DeprecatedBody><Trans i18nKey=\"common.amountDeposited.label\" values={{ amount: depositedAmtA }} /></ThemedText.DeprecatedBody>\n      <RowFixed>\n        <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: \"8px\" }} />\n        <ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</ThemedText.DeprecatedBody>\n      </RowFixed>\n    </RowBetween>\n    <RowBetween>\n      <ThemedText.DeprecatedBody><Trans i18nKey=\"common.amountDeposited.label\" values={{ amount: depositedAmtB }} /></ThemedText.DeprecatedBody>\n      <RowFixed>\n        <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: \"8px\" }} />\n        <ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</ThemedText.DeprecatedBody>\n      </RowFixed>\n    </RowBetween>\n    <RowBetween>\n      <ThemedText.DeprecatedBody><Trans i18nKey=\"pool.rates\" /></ThemedText.DeprecatedBody>\n      <ThemedText.DeprecatedBody>{`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${currencies[Field.CURRENCY_B]?.symbol}`}</ThemedText.DeprecatedBody>\n    </RowBetween>\n    <RowBetween style={{ justifyContent: \"flex-end\" }}><ThemedText.DeprecatedBody>{`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${currencies[Field.CURRENCY_A]?.symbol}`}</ThemedText.DeprecatedBody></RowBetween>\n    <RowBetween>\n      <ThemedText.DeprecatedBody><Trans i18nKey=\"pool.shareOf\" /></ThemedText.DeprecatedBody>\n      <ThemedText.DeprecatedBody>\n        {noLiquidity ? \"100\" : poolTokenPercentage?.toSignificant(4)}\n        {\"%\"}\n      </ThemedText.DeprecatedBody>\n    </RowBetween>\n    <ButtonPrimary style={{ margin: \"20px 0 0 0\" }} onClick={onAdd}><Text fontWeight={535} fontSize={20}>{noLiquidity ? <Trans i18nKey=\"pool.createAndSupply\" /> : <Trans i18nKey=\"pool.confirmSupply\" />}</Text></ButtonPrimary>\n  </>;\n}\n","\"use strict\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { AutoRow } from \"components/deprecated/Row\";\nimport { ONE_BIPS } from \"constants/misc\";\nimport { useTheme } from \"lib/styled-components\";\nimport { Text } from \"rebass\";\nimport { Field } from \"state/mint/actions\";\nimport { ThemedText } from \"theme/components\";\nimport { Trans } from \"uniswap/src/i18n\";\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price\n}) {\n  const theme = useTheme();\n  let invertedPrice;\n  try {\n    invertedPrice = price?.invert()?.toSignificant(6);\n  } catch (error) {\n    invertedPrice = void 0;\n  }\n  return <AutoColumn gap=\"md\"><AutoRow justify=\"space-around\" gap=\"4px\">\n    <AutoColumn justify=\"center\">\n      <ThemedText.DeprecatedBlack data-testid=\"currency-b-price\">{price?.toSignificant(6) ?? \"-\"}</ThemedText.DeprecatedBlack>\n      <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}><Trans\n        i18nKey=\"common.feesEarnedPerBase\"\n        values={{ symbolA: currencies[Field.CURRENCY_B]?.symbol, symbolB: currencies[Field.CURRENCY_A]?.symbol }}\n      /></Text>\n    </AutoColumn>\n    <AutoColumn justify=\"center\">\n      <ThemedText.DeprecatedBlack data-testid=\"currency-a-price\">{invertedPrice ?? \"-\"}</ThemedText.DeprecatedBlack>\n      <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}><Trans\n        i18nKey=\"common.feesEarnedPerBase\"\n        values={{ symbolA: currencies[Field.CURRENCY_A]?.symbol, symbolB: currencies[Field.CURRENCY_B]?.symbol }}\n      /></Text>\n    </AutoColumn>\n    <AutoColumn justify=\"center\">\n      <ThemedText.DeprecatedBlack>\n        {noLiquidity && price ? \"100\" : (poolTokenPercentage?.lessThan(ONE_BIPS) ? \"<0.01\" : poolTokenPercentage?.toFixed(2)) ?? \"0\"}\n        {\"%\"}\n      </ThemedText.DeprecatedBlack>\n      <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}><Trans i18nKey=\"addLiquidity.shareOfPool\" /></Text>\n    </AutoColumn>\n  </AutoRow></AutoColumn>;\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent, Price } from \"@uniswap/sdk-core\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTotalSupply } from \"hooks/useTotalSupply\";\nimport { PairState, useV2Pair } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { useCallback, useMemo } from \"react\";\nimport { useCurrencyBalances } from \"state/connection/hooks\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { Field, typeInput } from \"state/mint/actions\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { logger } from \"utilities/src/logger/logger\";\nconst ZERO = JSBI.BigInt(0);\nexport function useMintState() {\n  return useAppSelector((state) => state.mint);\n}\nexport function useMintActionHandlers(noLiquidity) {\n  const dispatch = useAppDispatch();\n  const onFieldAInput = useCallback(\n    (typedValue) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }));\n    },\n    [dispatch, noLiquidity]\n  );\n  const onFieldBInput = useCallback(\n    (typedValue) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }));\n    },\n    [dispatch, noLiquidity]\n  );\n  return {\n    onFieldAInput,\n    onFieldBInput\n  };\n}\nexport function useDerivedMintInfo(currencyA, currencyB) {\n  const account = useAccount();\n  const { independentField, typedValue, otherTypedValue } = useMintState();\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A;\n  const currencies = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? void 0,\n      [Field.CURRENCY_B]: currencyB ?? void 0\n    }),\n    [currencyA, currencyB]\n  );\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]);\n  const totalSupply = useTotalSupply(pair?.liquidityToken);\n  const noLiquidity = pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) || Boolean(\n    pairState === PairState.EXISTS && pair && JSBI.equal(pair.reserve0.quotient, ZERO) && JSBI.equal(pair.reserve1.quotient, ZERO)\n  );\n  const balances = useCurrencyBalances(\n    account.address,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  );\n  const currencyBalances = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1]\n  };\n  const independentAmount = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  );\n  const dependentAmount = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseCurrencyAmount(otherTypedValue, currencies[dependentField]);\n      }\n      return void 0;\n    } else if (independentAmount) {\n      const wrappedIndependentAmount = independentAmount?.wrapped;\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped];\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA;\n        const dependentTokenAmount = dependentField === Field.CURRENCY_B ? pair.priceOf(tokenA).quote(wrappedIndependentAmount) : pair.priceOf(tokenB).quote(wrappedIndependentAmount);\n        return dependentCurrency?.isNative ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient) : dependentTokenAmount;\n      }\n      return void 0;\n    } else {\n      return void 0;\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair]);\n  const parsedAmounts = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount\n    };\n  }, [dependentAmount, independentAmount, independentField]);\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount2, [Field.CURRENCY_B]: currencyBAmount2 } = parsedAmounts;\n      if (currencyAAmount2?.greaterThan(0) && currencyBAmount2?.greaterThan(0)) {\n        const value = currencyBAmount2.divide(currencyAAmount2);\n        return new Price(currencyAAmount2.currency, currencyBAmount2.currency, value.denominator, value.numerator);\n      }\n      return void 0;\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped;\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : void 0;\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts]);\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount2, [Field.CURRENCY_B]: currencyBAmount2 } = parsedAmounts;\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount2?.wrapped, currencyBAmount2?.wrapped];\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB);\n      } catch (error2) {\n        logger.warn(\n          \"mint/hooks\",\n          \"useDerivedMintInfo\",\n          `Error getLiquidityMinted: ${error2}. Total supply: ${totalSupply}, tokenAmountA: ${tokenAmountA}, tokenAmountB: ${tokenAmountB}`,\n          { error: error2 }\n        );\n        return void 0;\n      }\n    } else {\n      return void 0;\n    }\n  }, [parsedAmounts, pair, totalSupply]);\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient);\n    } else {\n      return void 0;\n    }\n  }, [liquidityMinted, totalSupply]);\n  let error;\n  if (!account.isConnected) {\n    error = <ConnectWalletButtonText />;\n  }\n  if (pairState === PairState.INVALID) {\n    error = error ?? <Trans i18nKey=\"common.invalidPair\" />;\n  }\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans i18nKey=\"common.noAmount.error\" />;\n  }\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts;\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = <Trans\n      i18nKey=\"common.insufficientTokenBalance.error\"\n      values={{\n        tokenSymbol: currencies[Field.CURRENCY_A]?.symbol\n      }}\n    />;\n  }\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = <Trans\n      i18nKey=\"common.insufficientTokenBalance.error\"\n      values={{\n        tokenSymbol: currencies[Field.CURRENCY_B]?.symbol\n      }}\n    />;\n  }\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  };\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport {\n  InterfaceElementName,\n  InterfaceEventName,\n  LiquidityEventName,\n  LiquiditySource\n} from \"@uniswap/analytics-events\";\nimport { Percent, V2_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { computePairAddress } from \"@uniswap/v2-sdk\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { ButtonError, ButtonLight, ButtonPrimary } from \"components/Button/buttons\";\nimport { BlueCard, LightCard } from \"components/Card/cards\";\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { AddRemoveTabs } from \"components/NavigationTabs\";\nimport { MinimalPositionCard } from \"components/PositionCard\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { AutoColumn, ColumnCenter } from \"components/deprecated/Column\";\nimport Row, { AutoRow, RowBetween, RowFlat } from \"components/deprecated/Row\";\nimport UnsupportedCurrencyFooter from \"components/swap/UnsupportedCurrencyFooter\";\nimport { ZERO_PERCENT } from \"constants/misc\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ApprovalState, useApproveCallback } from \"hooks/useApproveCallback\";\nimport { useV2RouterContract } from \"hooks/useContract\";\nimport { useEthersSigner } from \"hooks/useEthersSigner\";\nimport { useIsSwapUnsupported } from \"hooks/useIsSwapUnsupported\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useGetTransactionDeadline } from \"hooks/useTransactionDeadline\";\nimport { PairState } from \"hooks/useV2Pairs\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { ConfirmAddModalBottom } from \"pages/AddLiquidityV2/ConfirmAddModalBottom\";\nimport { PoolPriceBar } from \"pages/AddLiquidityV2/PoolPriceBar\";\nimport AppBody from \"pages/App/AppBody\";\nimport { Dots, Wrapper } from \"pages/LegacyPool/styled\";\nimport { useCallback, useState } from \"react\";\nimport { Plus } from \"react-feather\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Field } from \"state/mint/actions\";\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from \"state/mint/hooks\";\nimport { useTransactionAdder } from \"state/transactions/hooks\";\nimport { TransactionType } from \"state/transactions/types\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\nimport { ThemedText } from \"theme/components\";\nimport { Text } from \"ui/src\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { calculateSlippageAmount } from \"utils/calculateSlippageAmount\";\nimport { currencyId } from \"utils/currencyId\";\nimport { maxAmountSpend } from \"utils/maxAmountSpend\";\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 1e4);\nconst AddLiquidityHeaderContainer = styled(AutoColumn)`\n  gap: 20px;\n  margin-bottom: 16px;\n`;\nexport default function AddLiquidity() {\n  const { currencyIdA, currencyIdB } = useParams();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const signer = useEthersSigner();\n  const theme = useTheme();\n  const trace = useTrace();\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const wrappedNativeCurrency = account.status === \"connected\" && account.chainId ? WRAPPED_NATIVE_CURRENCY[account.chainId] : void 0;\n  const oneCurrencyIsWETH = Boolean(\n    account.chainId && wrappedNativeCurrency && (currencyA && currencyA.equals(wrappedNativeCurrency) || currencyB && currencyB.equals(wrappedNativeCurrency))\n  );\n  const accountDrawer = useAccountDrawer();\n  const { independentField, typedValue, otherTypedValue } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA ?? void 0, currencyB ?? void 0);\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity);\n  const isValid = !error;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false);\n  const getDeadline = useGetTransactionDeadline();\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE);\n  const [txHash, setTxHash] = useState(\"\");\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? \"\"\n  };\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field])\n      };\n    },\n    {}\n  );\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? \"0\")\n      };\n    },\n    {}\n  );\n  const router = useV2RouterContract();\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address);\n  const addTransaction = useTransactionAdder();\n  const networkSupportsV2 = useNetworkSupportsV2();\n  async function onAdd() {\n    if (account.status !== \"connected\" || !signer || !router || !networkSupportsV2) {\n      return;\n    }\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts;\n    const deadline = await getDeadline();\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0]\n    };\n    let estimate, method, args, value;\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [\n        (tokenBIsETH ? currencyA : currencyB)?.wrapped?.address ?? \"\",\n        // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(),\n        // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n        // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n        // eth min\n        account.address,\n        deadline.toHexString()\n      ];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString());\n    } else {\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [\n        currencyA?.wrapped?.address ?? \"\",\n        currencyB?.wrapped?.address ?? \"\",\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account.address,\n        deadline.toHexString()\n      ];\n      value = null;\n    }\n    setAttemptingTxn(true);\n    await estimate(...args, value ? { value } : {}).then(\n      (estimatedGasLimit) => method(...args, {\n        ...value ? { value } : {},\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then((response) => {\n        setAttemptingTxn(false);\n        const transactionInfo = {\n          type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n          baseCurrencyId: currencyId(currencyA),\n          expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? \"0\",\n          quoteCurrencyId: currencyId(currencyB),\n          expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? \"0\"\n        };\n        addTransaction(response, transactionInfo);\n        setTxHash(response.hash);\n        sendAnalyticsEvent(LiquidityEventName.ADD_LIQUIDITY_SUBMITTED, {\n          label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join(\"/\"),\n          ...trace,\n          ...transactionInfo,\n          type: LiquiditySource.V2,\n          transaction_hash: response.hash,\n          pool_address: computePairAddress({\n            factoryAddress: V2_FACTORY_ADDRESSES[currencyA.chainId],\n            tokenA: currencyA.wrapped,\n            tokenB: currencyB.wrapped\n          })\n        });\n      })\n    ).catch((error2) => {\n      setAttemptingTxn(false);\n      if (error2?.code !== 4001) {\n        logger.error(error2, {\n          tags: {\n            file: \"AddLiquidityV2\",\n            function: \"AddLiquidity\"\n          }\n        });\n      }\n    });\n  }\n  const modalHeader = () => {\n    return <AddLiquidityHeaderContainer>{noLiquidity ? <LightCard mt=\"20px\" $borderRadius=\"20px\"><AutoRow justify=\"space-between\">\n      <Text fontSize={24} fontWeight=\"$medium\" lineHeight={42} mr={10}>{currencies[Field.CURRENCY_A]?.symbol + \"/\" + currencies[Field.CURRENCY_B]?.symbol}</Text>\n      <DoubleCurrencyLogo currencies={[currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]]} size={30} />\n    </AutoRow></LightCard> : <>\n      <RowFlat style={{ marginTop: \"20px\" }}>\n        <Text fontSize={48} fontWeight=\"$medium\" lineHeight={42} mr={10}>{liquidityMinted?.toSignificant(6)}</Text>\n        <DoubleCurrencyLogo currencies={[currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]]} size={30} />\n      </RowFlat>\n      <Row><Text fontSize={24}>{currencies[Field.CURRENCY_A]?.symbol + \"/\" + currencies[Field.CURRENCY_B]?.symbol + \" Pool Tokens\"}</Text></Row>\n      <Text fontSize={12} textAlign=\"left\" pt={8} fontStyle=\"italic\" color=\"$neutral2\"><Trans i18nKey=\"pool.estimatePercentToRevert\" values={{ allowed: allowedSlippage.toSignificant(4) }} /></Text>\n    </>}</AddLiquidityHeaderContainer>;\n  };\n  const modalBottom = () => {\n    return <ConfirmAddModalBottom\n      price={price}\n      currencies={currencies}\n      parsedAmounts={parsedAmounts}\n      noLiquidity={noLiquidity}\n      onAdd={onAdd}\n      poolTokenPercentage={poolTokenPercentage}\n    />;\n  };\n  const pendingText = <Trans\n    i18nKey=\"pool.supplyingMaths\"\n    values={{\n      amtA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6),\n      symA: currencies[Field.CURRENCY_A]?.symbol,\n      amtB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6),\n      symB: currencies[Field.CURRENCY_B]?.symbol\n    }}\n  />;\n  const handleCurrencyASelect = useCallback(\n    (currencyA2) => {\n      const newCurrencyIdA = currencyId(currencyA2);\n      if (newCurrencyIdA === currencyIdB) {\n        navigate(`/add/v2/${currencyIdB}/${currencyIdA}`);\n      } else {\n        navigate(`/add/v2/${newCurrencyIdA}/${currencyIdB}`);\n      }\n    },\n    [currencyIdB, navigate, currencyIdA]\n  );\n  const handleCurrencyBSelect = useCallback(\n    (currencyB2) => {\n      const newCurrencyIdB = currencyId(currencyB2);\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          navigate(`/add/v2/${currencyIdB}/${newCurrencyIdB}`);\n        } else {\n          navigate(`/add/v2/${newCurrencyIdB}`);\n        }\n      } else {\n        navigate(`/add/v2/${currencyIdA ? currencyIdA : \"ETH\"}/${newCurrencyIdB}`);\n      }\n    },\n    [currencyIdA, navigate, currencyIdB]\n  );\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    if (txHash) {\n      onFieldAInput(\"\");\n    }\n    setTxHash(\"\");\n  }, [onFieldAInput, txHash]);\n  const { pathname } = useLocation();\n  const isCreate = pathname.includes(\"/create\");\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B);\n  if (!networkSupportsV2) {\n    return <V2Unsupported />;\n  }\n  return <>\n    <AppBody>\n      <AddRemoveTabs creating={isCreate} adding={true} autoSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} />\n      <Wrapper>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash}\n          reviewContent={() => <ConfirmationModalContent\n            title={noLiquidity ? <Trans i18nKey=\"pool.areCreating\" /> : <Trans i18nKey=\"common.youWillReceive\" />}\n            onDismiss={handleDismissConfirmation}\n            topContent={modalHeader}\n            bottomContent={modalBottom}\n          />}\n          pendingText={pendingText}\n          currencyToAdd={pair?.liquidityToken}\n        />\n        <AutoColumn gap=\"20px\">\n          {noLiquidity || (isCreate ? <ColumnCenter><BlueCard><AutoColumn gap=\"10px\">\n            <ThemedText.DeprecatedLink fontWeight={535} color=\"accent1\"><Trans i18nKey=\"pool.areFirst\" /></ThemedText.DeprecatedLink>\n            <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\"><Trans i18nKey=\"pool.ratioTokenToPrice\" /></ThemedText.DeprecatedLink>\n            <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\"><Trans i18nKey=\"pool.onceHappyReview\" /></ThemedText.DeprecatedLink>\n          </AutoColumn></BlueCard></ColumnCenter> : <ColumnCenter><BlueCard><AutoColumn gap=\"10px\"><ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n            <b><Trans i18nKey=\"common.tip.label\" /></b>\n            {\" \"}\n            <Trans i18nKey=\"pool.liquidityPoolFeesNotice\" />\n          </ThemedText.DeprecatedLink></AutoColumn></BlueCard></ColumnCenter>)}\n          <CurrencyInputPanel\n            value={formattedAmounts[Field.CURRENCY_A]}\n            onUserInput={onFieldAInput}\n            onMax={() => {\n              onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? \"\");\n            }}\n            onCurrencySelect={handleCurrencyASelect}\n            showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n            currency={currencies[Field.CURRENCY_A] ?? null}\n            id=\"add-liquidity-input-tokena\"\n          />\n          <ColumnCenter><Plus size=\"16\" color={theme.neutral2} /></ColumnCenter>\n          <CurrencyInputPanel\n            value={formattedAmounts[Field.CURRENCY_B]}\n            onUserInput={onFieldBInput}\n            onCurrencySelect={handleCurrencyBSelect}\n            onMax={() => {\n              onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? \"\");\n            }}\n            showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n            currency={currencies[Field.CURRENCY_B] ?? null}\n            id=\"add-liquidity-input-tokenb\"\n          />\n          {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && <><LightCard padding=\"0px\" $borderRadius=\"20px\">\n            <RowBetween padding=\"1rem\"><ThemedText.DeprecatedSubHeader fontWeight={535} fontSize={14}>{noLiquidity ? <Trans i18nKey=\"pool.initialShare\" /> : <Trans i18nKey=\"pool.share\" />}</ThemedText.DeprecatedSubHeader></RowBetween>\n            {\" \"}\n            <LightCard padding=\"1rem\" $borderRadius=\"20px\"><PoolPriceBar\n              currencies={currencies}\n              poolTokenPercentage={poolTokenPercentage}\n              noLiquidity={noLiquidity}\n              price={price}\n            /></LightCard>\n          </LightCard></>}\n          {addIsUnsupported ? <ButtonPrimary disabled={true}><ThemedText.DeprecatedMain mb=\"4px\"><Trans i18nKey=\"common.unsupportedAsset_one\" /></ThemedText.DeprecatedMain></ButtonPrimary> : account.status !== \"connected\" ? <Trace\n            logPress\n            eventOnTrigger={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n            properties={{ received_swap_quote: false }}\n            element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n          ><ButtonLight onClick={accountDrawer.open}><ConnectWalletButtonText /></ButtonLight></Trace> : <AutoColumn gap=\"md\">\n            {(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && <RowBetween>\n              {approvalA !== ApprovalState.APPROVED && <ButtonPrimary\n                onClick={approveACallback}\n                disabled={approvalA === ApprovalState.PENDING}\n                width={approvalB !== ApprovalState.APPROVED ? \"48%\" : \"100%\"}\n              >{approvalA === ApprovalState.PENDING ? <Dots><Trans\n                i18nKey=\"pools.approving.amount\"\n                values={{ amount: currencies[Field.CURRENCY_A]?.symbol }}\n              /></Dots> : <Trans\n                i18nKey=\"account.transactionSummary.approve\"\n                values={{ tokenSymbol: currencies[Field.CURRENCY_A]?.symbol }}\n              />}</ButtonPrimary>}\n              {approvalB !== ApprovalState.APPROVED && <ButtonPrimary\n                onClick={approveBCallback}\n                disabled={approvalB === ApprovalState.PENDING}\n                width={approvalA !== ApprovalState.APPROVED ? \"48%\" : \"100%\"}\n              >{approvalB === ApprovalState.PENDING ? <Dots><Trans\n                i18nKey=\"pools.approving.amount\"\n                values={{ amount: currencies[Field.CURRENCY_B]?.symbol }}\n              /></Dots> : <Trans\n                i18nKey=\"account.transactionSummary.approve\"\n                values={{ tokenSymbol: currencies[Field.CURRENCY_B]?.symbol }}\n              />}</ButtonPrimary>}\n            </RowBetween>}\n            <ButtonError\n              onClick={() => {\n                setShowConfirm(true);\n              }}\n              disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n              error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n            ><Text fontSize={20} fontWeight=\"$medium\">{error ?? <Trans i18nKey=\"pool.supply\" />}</Text></ButtonError>\n          </AutoColumn>}\n        </AutoColumn>\n      </Wrapper>\n    </AppBody>\n    <SwitchLocaleLink />\n    {!addIsUnsupported ? pair && !noLiquidity && pairState !== PairState.INVALID ? <AutoColumn style={{ minWidth: \"20rem\", width: \"100%\", maxWidth: \"400px\", marginTop: \"1rem\" }}><MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} /></AutoColumn> : null : <UnsupportedCurrencyFooter\n      show={addIsUnsupported}\n      currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n    />}\n  </>;\n}\n","\"use strict\";\nimport AddLiquidityV2 from \"pages/AddLiquidityV2/index\";\nimport { Navigate, useParams } from \"react-router-dom\";\nexport default function AddLiquidityV2WithTokenRedirects() {\n  const { currencyIdA, currencyIdB } = useParams();\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Navigate to={`/add/v2/${currencyIdA}`} replace />;\n  }\n  return <AddLiquidityV2 />;\n}\n","\"use strict\";\nimport { Fraction } from \"@uniswap/sdk-core\";\nconst ONE = new Fraction(1, 1);\nexport function calculateSlippageAmount(value, slippage) {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) {\n    throw new Error(\"Unexpected slippage\");\n  }\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient];\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName","DetailsFooter","styled","div","theme","neutral2","surface2","Z_INDEX","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","Text","accent1","deprecated_mediaWidth","deprecated_upToSmall","UnsupportedCurrencyFooter","currencies","chainId","useAccount","showDetails","setShowDetails","useState","tokens","map","currency","wrapped","Modal","isOpen","onDismiss","Card","padding","AutoColumn","gap","RowBetween","ThemedText","DeprecatedMediumHeader","Trans","i18nKey","CloseIcon","onClick","data-testid","token","UnsupportedTokenCard","address","concat","DeprecatedBody","fontWeight","currencyInfo","useCurrencyInfo","isSpam","safetyLevel","SafetyLevel","Verified","OutlineCard","AutoRow","align","CurrencyLogo","symbol","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","ConfirmAddModalBottom","noLiquidity","price","parsedAmounts","poolTokenPercentage","onAdd","depositedAmtA","Field","CURRENCY_A","depositedAmtB","CURRENCY_B","values","amount","RowFixed","style","marginRight","toSignificant","justifyContent","invert","ButtonPrimary","margin","fontSize","PoolPriceBar","useTheme","invertedPrice","error","justify","DeprecatedBlack","pt","symbolA","symbolB","lessThan","ONE_BIPS","toFixed","ZERO","JSBI","useMintState","useAppSelector","state","mint","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","Percent","AddLiquidityHeaderContainer","AddLiquidity","router","pair","currencyIdA","currencyIdB","useParams","navigate","useNavigate","account","signer","useEthersSigner","trace","useTrace","currencyA","useCurrency","currencyB","wrappedNativeCurrency","status","WRAPPED_NATIVE_CURRENCY","oneCurrencyIsWETH","Boolean","equals","accountDrawer","useAccountDrawer","independentField","typedValue","otherTypedValue","dependentField","pairState","currencyBalances","liquidityMinted","useMemo","useV2Pair","totalSupply","useTotalSupply","liquidityToken","PairState","NOT_EXISTS","quotient","EXISTS","reserve0","reserve1","balances","useCurrencyBalances","independentAmount","tryParseCurrencyAmount","dependentAmount","wrappedIndependentAmount","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","isNative","CurrencyAmount","fromRawAmount","wrappedCurrencyA","currencyAAmount2","currencyBAmount2","greaterThan","value","divide","Price","denominator","numerator","tokenAmountA","tokenAmountB","getLiquidityMinted","error2","logger","warn","add","isConnected","ConnectWalletButtonText","INVALID","currencyAAmount","currencyBAmount","tokenSymbol","useDerivedMintInfo","onFieldAInput","onFieldBInput","dispatch","useAppDispatch","useCallback","typeInput","field","useMintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","txHash","setTxHash","formattedAmounts","maxAmounts","reduce","accumulator","maxAmountSpend","atMaxAmounts","equalTo","useV2RouterContract","approvalA","approveACallback","useApproveCallback","approvalB","approveBCallback","addTransaction","useTransactionAdder","networkSupportsV2","useNetworkSupportsV2","parsedAmountA","parsedAmountB","deadline","amountsMin","calculateSlippageAmount","ZERO_PERCENT","estimate","method","args","tokenBIsETH","estimateGas","addLiquidityETH","toString","toHexString","BigNumber","from","addLiquidity","then","estimatedGasLimit","gasLimit","calculateGasMargin","response","transactionInfo","type","TransactionType","ADD_LIQUIDITY_V2_POOL","baseCurrencyId","currencyId","expectedAmountBaseRaw","quoteCurrencyId","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","ADD_LIQUIDITY_SUBMITTED","label","join","LiquiditySource","V2","transaction_hash","pool_address","computePairAddress","factoryAddress","V2_FACTORY_ADDRESSES","catch","code","tags","file","function","modalHeader","LightCard","mt","$borderRadius","lineHeight","mr","DoubleCurrencyLogo","RowFlat","marginTop","Row","textAlign","fontStyle","allowed","modalBottom","pendingText","amtA","symA","amtB","symB","handleCurrencyASelect","currencyA2","newCurrencyIdA","handleCurrencyBSelect","currencyB2","newCurrencyIdB","handleDismissConfirmation","pathname","useLocation","isCreate","includes","addIsUnsupported","useIsSwapUnsupported","AppBody","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","currencyToAdd","ColumnCenter","BlueCard","DeprecatedLink","b","CurrencyInputPanel","onUserInput","onMax","toExact","onCurrencySelect","showMaxButton","id","Plus","DeprecatedSubHeader","disabled","DeprecatedMain","mb","Trace","logPress","eventOnTrigger","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","open","ApprovalState","NOT_APPROVED","PENDING","APPROVED","Dots","ButtonError","SwitchLocaleLink","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","AddLiquidityV2WithTokenRedirects","toLowerCase","Navigate","to","replace","AddLiquidityV2","ONE","Fraction","slippage","Error","multiply","subtract"],"sourceRoot":""}