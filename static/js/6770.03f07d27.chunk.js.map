{"version":3,"file":"static/js/6770.03f07d27.chunk.js","mappings":"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","sources":["components/NavBar/MobileBottomBar/MobileBottomBar.tsx","components/Icons/Sell.tsx","components/NavBar/MobileBottomBar/TDPActionTabs.tsx","graphql/data/pools/usePoolsFromTokenAddress.ts","components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable.tsx","graphql/data/useTokenTransactions.ts","components/Tokens/TokenDetails/tables/TransactionsTable.tsx","components/Tokens/TokenDetails/ActivitySection.tsx","components/Tokens/TokenDetails/BalanceSummary.tsx","components/Icons/Globe.tsx","components/Tokens/TokenDetails/TokenDescription.tsx","components/Tokens/TokenDetails/TokenDetailsHeader.tsx","components/Tokens/TokenDetails/index.tsx","utils/getInitialLogoURL.ts","assets/svg/eye.svg","components/Tokens/TokenDetails/InvalidTokenDetails.tsx","pages/TokenDetails/utils.ts","pages/TokenDetails/index.tsx","shared-cloud/metatags.ts"],"sourcesContent":["\"use strict\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Flex, styled } from \"ui/src\";\nconst MOBILE_BAR_MAX_HEIGHT = 100;\nexport const MobileBottomBar = styled(Flex, {\n  zIndex: Z_INDEX.dropdown,\n  position: \"fixed\",\n  bottom: 0,\n  right: 0,\n  left: 0,\n  justifyContent: \"space-between\",\n  gap: \"$gap8\",\n  width: \"100%\",\n  maxHeight: MOBILE_BAR_MAX_HEIGHT,\n  backdropFilter: \"blur(4px)\",\n  mask: \"linear-gradient(to bottom, transparent, $surface1 15%)\",\n  py: \"$padding12\",\n  px: \"$padding16\",\n  animation: \"lazy\",\n  display: \"none\",\n  $xl: {\n    display: \"block\"\n  },\n  variants: {\n    hide: {\n      true: {\n        bottom: `-${MOBILE_BAR_MAX_HEIGHT}px !important`\n      },\n      false: {\n        bottom: 0\n      }\n    }\n  }\n});\n","\"use strict\";\nexport function Sell(props) {\n  return <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    d=\"M1.28516 11.9999C1.28516 6.08243 6.08194 1.28564 11.9994 1.28564C17.9169 1.28564 22.7137 6.08243 22.7137 11.9999C22.7137 17.9174 17.9169 22.7142 11.9994 22.7142C6.08194 22.7142 1.28516 17.9174 1.28516 11.9999ZM10.9816 7.49994C10.9816 6.9378 11.4373 6.48209 11.9995 6.48209C12.5616 6.48209 13.0173 6.9378 13.0173 7.49994V14.0426L15.7798 11.2802C16.1772 10.8827 16.8217 10.8827 17.2192 11.2802C17.6167 11.6777 17.6167 12.3222 17.2192 12.7197L12.7192 17.2197C12.3217 17.6172 11.6772 17.6172 11.2798 17.2197L6.77975 12.7197C6.38225 12.3222 6.38225 11.6777 6.77975 11.2802C7.17725 10.8827 7.82172 10.8827 8.21922 11.2802L10.9816 14.0426V7.49994Z\"\n    fill={props.fill || \"white\"}\n  /></svg>;\n}\n","\"use strict\";\nimport { CreditCardIcon } from \"components/Icons/CreditCard\";\nimport { Sell } from \"components/Icons/Sell\";\nimport { Send } from \"components/Icons/Send\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport styled from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ClickableStyle } from \"theme/components\";\nimport { Flex } from \"ui/src\";\nimport { t } from \"uniswap/src/i18n\";\nconst TDPActionPill = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  gap: 8px;\n  border: none;\n  border-radius: 50px;\n  transition: color 0.2s;\n  background-color: ${({ $color, theme }) => $color || theme.neutral2};\n  color: ${({ theme }) => theme.neutralContrast};\n  padding: 12px 20px 12px 16px;\n  font-size: 18px;\n  font-weight: 535;\n  flex-grow: 1;\n  ${ClickableStyle}\n\n  @media (max-width: 360px) {\n    padding-left: 20px;\n    > svg {\n      display: none;\n    }\n  }\n`;\nexport function TDPActionTabs() {\n  const { currencyChain, currencyChainId, address, tokenColor } = useTDPContext();\n  const switchChain = useSwitchChain();\n  const navigate = useNavigate();\n  const account = useAccount();\n  const chainUrlParam = currencyChain.toLowerCase();\n  const addressUrlParam = address === NATIVE_CHAIN_ID ? \"ETH\" : address;\n  const toActionLink = useCallback(\n    async (href) => {\n      if (account.chainId && account.chainId !== currencyChainId) {\n        await switchChain(currencyChainId);\n      }\n      navigate(href);\n    },\n    [account, currencyChainId, switchChain, navigate]\n  );\n  const tabs = [\n    {\n      label: t(\"common.buy.label\"),\n      href: `/swap/?chain=${chainUrlParam}&outputCurrency=${addressUrlParam}`,\n      icon: <CreditCardIcon fill=\"white\" />\n    },\n    {\n      label: t(\"common.sell.label\"),\n      href: `/swap?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Sell fill=\"white\" />\n    },\n    {\n      label: t(\"common.send.button\"),\n      href: `/send?chain=${chainUrlParam}&inputCurrency=${addressUrlParam}`,\n      icon: <Send fill=\"white\" />\n    }\n  ];\n  return <Flex row justifyContent=\"center\" gap=\"$spacing8\" width=\"100%\">{tabs.map((tab) => <TDPActionPill key={tab.label} onClick={() => toActionLink(tab.href)} $color={tokenColor}>\n    {tab.icon}\n    {tab.label}\n  </TDPActionPill>)}</Flex>;\n}\n","\"use strict\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport {\n  V2_BIPS,\n  calculate1DVolOverTvl,\n  calculateApr,\n  sortPools\n} from \"graphql/data/pools/useTopPools\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  useTopV2PairsQuery,\n  useTopV3PoolsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nconst DEFAULT_QUERY_SIZE = 20;\nexport function usePoolsFromTokenAddress(tokenAddress, sortState, chainId) {\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useTopV3PoolsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain: chainIdToBackendChain({ chainId, withFallback: true })\n    }\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useTopV2PairsQuery({\n    variables: {\n      first: DEFAULT_QUERY_SIZE,\n      tokenAddress,\n      chain: chainIdToBackendChain({ chainId, withFallback: true })\n    },\n    skip: !chainId\n  });\n  const loading = loadingV3 || loadingV2;\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const sizeRef = useRef(DEFAULT_QUERY_SIZE);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      sizeRef.current += DEFAULT_QUERY_SIZE;\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.topV3Pools?.[dataV3.topV3Pools.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            return prev;\n          }\n          if (!loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV3Pools: [...(prev.topV3Pools ?? []).slice(), ...(fetchMoreResult.topV3Pools ?? []).slice()]\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.topV2Pairs?.[dataV2.topV2Pairs.length - 1]?.totalLiquidity?.value\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult || !prev || !Object.keys(prev).length) {\n            return prev;\n          }\n          if (!loadingMoreV3.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            topV2Pairs: [...(prev.topV2Pairs ?? []).slice(), ...(fetchMoreResult.topV2Pairs ?? []).slice()]\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [dataV2?.topV2Pairs, dataV3?.topV3Pools, fetchMoreV2, fetchMoreV3]\n  );\n  return useMemo(() => {\n    const topV3Pools = dataV3?.topV3Pools?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volumeWeek: pool.volumeWeek?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, pool.feeTier),\n        feeTier: pool.feeTier,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const topV2Pairs = dataV2?.topV2Pairs?.map((pool) => {\n      return {\n        hash: pool.address,\n        token0: pool.token0,\n        token1: pool.token1,\n        tvl: pool.totalLiquidity?.value,\n        volume24h: pool.volume24h?.value,\n        volumeWeek: pool.volumeWeek?.value,\n        volOverTvl: calculate1DVolOverTvl(pool.volume24h?.value, pool.totalLiquidity?.value),\n        apr: calculateApr(pool.volume24h?.value, pool.totalLiquidity?.value, V2_BIPS),\n        feeTier: V2_BIPS,\n        protocolVersion: pool.protocolVersion\n      };\n    }) ?? [];\n    const pools = sortPools([...topV3Pools, ...topV2Pairs], sortState).slice(0, sizeRef.current);\n    return { loading, errorV2, errorV3, pools, loadMore };\n  }, [dataV2?.topV2Pairs, dataV3?.topV3Pools, errorV2, errorV3, loadMore, loading, sortState]);\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { PoolsTable, sortAscendingAtom, sortMethodAtom } from \"components/Pools/PoolTable/PoolTable\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { usePoolsFromTokenAddress } from \"graphql/data/pools/usePoolsFromTokenAddress\";\nimport { PoolSortFields } from \"graphql/data/pools/useTopPools\";\nimport { OrderDirection } from \"graphql/data/util\";\nimport { useAtomValue, useResetAtom } from \"jotai/utils\";\nimport { useEffect, useMemo } from \"react\";\nconst HIDDEN_COLUMNS = [PoolSortFields.VolOverTvl];\nexport function TokenDetailsPoolsTable({\n  chainId,\n  referenceToken\n}) {\n  const sortMethod = useAtomValue(sortMethodAtom);\n  const sortAscending = useAtomValue(sortAscendingAtom);\n  const sortState = useMemo(\n    () => ({ sortBy: sortMethod, sortDirection: sortAscending ? OrderDirection.Asc : OrderDirection.Desc }),\n    [sortAscending, sortMethod]\n  );\n  const { pools, loading, errorV2, errorV3, loadMore } = usePoolsFromTokenAddress(\n    referenceToken.address,\n    sortState,\n    chainId\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Pools for token ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !pools.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const resetSortMethod = useResetAtom(sortMethodAtom);\n  const resetSortAscending = useResetAtom(sortAscendingAtom);\n  useEffect(() => {\n    resetSortMethod();\n    resetSortAscending();\n  }, [resetSortAscending, resetSortMethod]);\n  return <div data-testid={`tdp-pools-table-${referenceToken.address.toLowerCase()}`}><PoolsTable\n    pools={pools}\n    loading={allDataStillLoading}\n    error={combinedError}\n    maxHeight={600}\n    hiddenColumns={HIDDEN_COLUMNS}\n    loadMore={loadMore}\n  /></div>;\n}\n","\"use strict\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport {\n  Chain,\n  PoolTransactionType,\n  useV2TokenTransactionsQuery,\n  useV3TokenTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport var TokenTransactionType = /* @__PURE__ */ ((TokenTransactionType2) => {\n  TokenTransactionType2[\"BUY\"] = \"Buy\";\n  TokenTransactionType2[\"SELL\"] = \"Sell\";\n  return TokenTransactionType2;\n})(TokenTransactionType || {});\nconst TokenTransactionDefaultQuerySize = 25;\nexport function useTokenTransactions(address, chainId, filter = [\"Buy\" /* BUY */, \"Sell\" /* SELL */]) {\n  const {\n    data: dataV3,\n    loading: loadingV3,\n    fetchMore: fetchMoreV3,\n    error: errorV3\n  } = useV3TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      chain: chainIdToBackendChain({ chainId, withFallback: true }),\n      first: TokenTransactionDefaultQuerySize\n    }\n  });\n  const {\n    data: dataV2,\n    loading: loadingV2,\n    error: errorV2,\n    fetchMore: fetchMoreV2\n  } = useV2TokenTransactionsQuery({\n    variables: {\n      address: address.toLowerCase(),\n      first: TokenTransactionDefaultQuerySize,\n      chain: chainIdToBackendChain({ chainId })\n    }\n  });\n  const loadingMoreV3 = useRef(false);\n  const loadingMoreV2 = useRef(false);\n  const querySizeRef = useRef(TokenTransactionDefaultQuerySize);\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMoreV3.current || loadingMoreV2.current) {\n        return;\n      }\n      loadingMoreV3.current = true;\n      loadingMoreV2.current = true;\n      querySizeRef.current += TokenTransactionDefaultQuerySize;\n      fetchMoreV3({\n        variables: {\n          cursor: dataV3?.token?.v3Transactions?.[dataV3.token?.v3Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          if (!loadingMoreV2.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v3Transactions: [...prev.token?.v3Transactions ?? [], ...fetchMoreResult.token?.v3Transactions ?? []]\n            }\n          };\n          loadingMoreV3.current = false;\n          return mergedData;\n        }\n      });\n      fetchMoreV2({\n        variables: {\n          cursor: dataV2?.token?.v2Transactions?.[dataV2.token?.v2Transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          if (!loadingMoreV3.current) {\n            onComplete?.();\n          }\n          const mergedData = {\n            token: {\n              ...prev.token,\n              id: prev?.token?.id ?? \"\",\n              chain: prev?.token?.chain ?? Chain.Ethereum,\n              v2Transactions: [...prev.token?.v2Transactions ?? [], ...fetchMoreResult.token?.v2Transactions ?? []]\n            }\n          };\n          loadingMoreV2.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [dataV2?.token?.v2Transactions, dataV3?.token?.v3Transactions, fetchMoreV2, fetchMoreV3]\n  );\n  const transactions = useMemo(\n    () => [\n      ...dataV3?.token?.v3Transactions?.filter((tx) => {\n        if (!tx) {\n          return false;\n        }\n        const tokenBeingSold = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n        const isSell = tokenBeingSold.address?.toLowerCase() === address.toLowerCase();\n        return tx.type === PoolTransactionType.Swap && filter.includes(isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */);\n      }) ?? [],\n      ...dataV2?.token?.v2Transactions?.filter((tx) => {\n        if (!tx) {\n          return false;\n        }\n        const tokenBeingSold = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n        const isSell = tokenBeingSold.address?.toLowerCase() === address.toLowerCase();\n        return tx.type === PoolTransactionType.Swap && filter.includes(isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */);\n      }) ?? []\n    ].sort(\n      (a, b) => a?.timestamp && b?.timestamp ? b.timestamp - a.timestamp : a?.timestamp === null ? -1 : 1\n    ).slice(0, querySizeRef.current),\n    [address, dataV2?.token?.v2Transactions, dataV3?.token?.v3Transactions, filter]\n  );\n  return useMemo(() => {\n    return {\n      transactions,\n      loading: loadingV3 || loadingV2,\n      loadMore,\n      errorV2,\n      errorV3\n    };\n  }, [transactions, loadingV3, loadingV2, loadMore, errorV2, errorV3]);\n}\n","\"use strict\";\nimport { ApolloError } from \"@apollo/client\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport {\n  FilterHeaderRow,\n  HeaderArrow,\n  HeaderSortText,\n  StyledExternalLink,\n  TimestampCell,\n  TokenLinkCell\n} from \"components/Table/styled\";\nimport { useUpdateManualOutage } from \"featureFlags/flags/outageBanner\";\nimport { TokenTransactionType, useTokenTransactions } from \"graphql/data/useTokenTransactions\";\nimport { OrderDirection, unwrapToken } from \"graphql/data/util\";\nimport { useActiveLocalCurrency } from \"hooks/useActiveLocalCurrency\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { EllipsisTamaguiStyle } from \"theme/components\";\nimport { Flex, Text, styled } from \"ui/src\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst StyledSwapAmount = styled(Text, {\n  display: \"inline-block\",\n  maxWidth: 75,\n  variant: \"body2\",\n  color: \"$neutral1\",\n  ...EllipsisTamaguiStyle\n});\nconst TableWrapper = styled(Flex, {\n  position: \"relative\",\n  minHeight: 158\n});\nexport function TransactionsTable({\n  chainId,\n  referenceToken\n}) {\n  const activeLocalCurrency = useActiveLocalCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([TokenTransactionType.BUY, TokenTransactionType.SELL]);\n  const { transactions, loading, loadMore, errorV2, errorV3 } = useTokenTransactions(\n    referenceToken.address,\n    chainId,\n    filter\n  );\n  const combinedError = errorV2 && errorV3 ? new ApolloError({\n    errorMessage: `Could not retrieve V2 and V3 Transactions for token: ${referenceToken.address} on chain: ${chainId}`\n  }) : void 0;\n  const allDataStillLoading = loading && !transactions.length;\n  useUpdateManualOutage({ chainId, errorV3, errorV2 });\n  const unwrappedReferenceToken = unwrapToken(chainId, referenceToken);\n  const data = useMemo(\n    () => transactions.map((transaction) => {\n      const swapLeg0 = {\n        address: transaction.token0.address,\n        symbol: transaction.token0.symbol,\n        amount: parseFloat(transaction.token0Quantity),\n        token: transaction.token0\n      };\n      const swapLeg1 = {\n        address: transaction.token1.address,\n        symbol: transaction.token1.symbol,\n        amount: parseFloat(transaction.token1Quantity),\n        token: transaction.token1\n      };\n      const token0IsBeingSold = parseFloat(transaction.token0Quantity) > 0;\n      return {\n        hash: transaction.hash,\n        timestamp: transaction.timestamp,\n        input: token0IsBeingSold ? swapLeg0 : swapLeg1,\n        output: token0IsBeingSold ? swapLeg1 : swapLeg0,\n        usdValue: transaction.usdValue.value,\n        makerAddress: transaction.account\n      };\n    }),\n    [transactions]\n  );\n  const showLoadingSkeleton = allDataStillLoading || !!combinedError;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        header: () => <Cell minWidth={120} justifyContent=\"flex-start\" grow><Flex row gap=\"$gap4\" alignItems=\"center\">\n          <HeaderArrow direction={OrderDirection.Desc} />\n          <HeaderSortText active><Trans i18nKey=\"common.time\" /></HeaderSortText>\n        </Flex></Cell>,\n        cell: (row) => <Cell loading={showLoadingSkeleton} minWidth={120} justifyContent=\"flex-start\" grow><TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chainId, row.getValue?.().hash, ExplorerDataType.TRANSACTION)}\n        /></Cell>\n      }),\n      columnHelper.accessor((row) => row.output.address, {\n        id: \"swap-type\",\n        header: () => <Cell minWidth={75} justifyContent=\"flex-start\" grow><FilterHeaderRow\n          clickable={filterModalIsOpen}\n          onPress={toggleFilterModal}\n          alignItems=\"center\"\n          ref={filterAnchorRef}\n        >\n          <Filter\n            allFilters={Object.values(TokenTransactionType)}\n            activeFilter={filter}\n            setFilters={setFilters}\n            isOpen={filterModalIsOpen}\n            toggleFilterModal={toggleFilterModal}\n            anchorRef={filterAnchorRef}\n          />\n          <Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.type.label\" /></Text>\n        </FilterHeaderRow></Cell>,\n        cell: (outputTokenAddress) => {\n          const isBuy = String(outputTokenAddress.getValue?.()).toLowerCase() === referenceToken.address.toLowerCase();\n          return <Cell loading={showLoadingSkeleton} minWidth={75} justifyContent=\"flex-start\" grow><Text variant=\"body2\" color={isBuy ? \"$statusSuccess\" : \"$statusCritical\"}>{isBuy ? <Trans i18nKey=\"common.buy.label\" /> : <Trans i18nKey=\"common.sell.label\" />}</Text></Cell>;\n        }\n      }),\n      columnHelper.accessor(\n        (row) => row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.input.amount : row.output.amount,\n        {\n          id: \"reference-amount\",\n          header: () => <Cell minWidth={100} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral2\">\n            {\"$\"}\n            {unwrappedReferenceToken.symbol}\n          </Text></Cell>,\n          cell: (inputTokenAmount) => <Cell loading={showLoadingSkeleton} minWidth={100} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral1\">{formatNumber({\n            input: Math.abs(inputTokenAmount.getValue?.()) || 0\n          })}</Text></Cell>\n        }\n      ),\n      columnHelper.accessor(\n        (row) => {\n          const nonReferenceSwapLeg = row.input.address?.toLowerCase() === referenceToken.address.toLowerCase() ? row.output : row.input;\n          return <Flex row gap=\"$gap8\" justifyContent=\"flex-end\">\n            <StyledSwapAmount>{formatNumber({\n              input: Math.abs(nonReferenceSwapLeg.amount) || 0\n            })}</StyledSwapAmount>\n            <TokenLinkCell token={nonReferenceSwapLeg.token} />\n          </Flex>;\n        },\n        {\n          id: \"non-reference-amount\",\n          header: () => <Cell minWidth={160} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.for\" /></Text></Cell>,\n          cell: (swapOutput) => <Cell loading={showLoadingSkeleton} minWidth={160} justifyContent=\"flex-end\">{swapOutput.getValue?.()}</Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.usdValue, {\n        id: \"fiat-value\",\n        header: () => <Cell minWidth={125} justifyContent=\"flex-end\"><Flex row gap=\"$gap4\" justifyContent=\"flex-end\"><HeaderSortText>{activeLocalCurrency}</HeaderSortText></Flex></Cell>,\n        cell: (fiat) => <Cell loading={showLoadingSkeleton} minWidth={125} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral1\">{formatFiatPrice({ price: fiat.getValue?.() })}</Text></Cell>\n      }),\n      columnHelper.accessor((row) => row.makerAddress, {\n        id: \"maker-address\",\n        header: () => <Cell minWidth={150} justifyContent=\"flex-end\"><Text variant=\"body2\" color=\"$neutral2\"><Trans i18nKey=\"common.wallet.label\" /></Text></Cell>,\n        cell: (makerAddress) => <Cell loading={showLoadingSkeleton} minWidth={150} justifyContent=\"flex-end\"><StyledExternalLink href={getExplorerLink(chainId, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>{shortenAddress(makerAddress.getValue?.())}</StyledExternalLink></Cell>\n      })\n    ];\n  }, [\n    showLoadingSkeleton,\n    chainId,\n    filterModalIsOpen,\n    filter,\n    referenceToken.address,\n    unwrappedReferenceToken.symbol,\n    formatNumber,\n    activeLocalCurrency,\n    formatFiatPrice\n  ]);\n  return <TableWrapper><Table\n    columns={columns}\n    data={data}\n    loading={allDataStillLoading}\n    error={combinedError}\n    loadMore={loadMore}\n    maxHeight={600}\n  /></TableWrapper>;\n}\n","\"use strict\";\nimport { TokenDetailsPoolsTable } from \"components/Tokens/TokenDetails/tables/TokenDetailsPoolsTable\";\nimport { TransactionsTable } from \"components/Tokens/TokenDetails/tables/TransactionsTable\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useState } from \"react\";\nimport { ClickableTamaguiStyle } from \"theme/components\";\nimport { Flex, styled, Text } from \"ui/src\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst Container = styled(Flex, {\n  width: \"100%\"\n});\nconst Tab = styled(Text, {\n  color: \"$neutral1\",\n  variant: \"heading3\",\n  ...ClickableTamaguiStyle\n});\nvar ActivityTab = /* @__PURE__ */ ((ActivityTab2) => {\n  ActivityTab2[ActivityTab2[\"Txs\"] = 0] = \"Txs\";\n  ActivityTab2[ActivityTab2[\"Pools\"] = 1] = \"Pools\";\n  return ActivityTab2;\n})(ActivityTab || {});\nexport function ActivitySection() {\n  const { wrapped: referenceToken, chainId } = useTDPContext().currency;\n  const [activityInView, setActivityInView] = useState(0 /* Txs */);\n  if (!referenceToken) {\n    return null;\n  }\n  return <Container data-testid=\"token-details-activity-section\">\n    <Flex row gap=\"$spacing24\" mb=\"$spacing24\" id=\"activity-header\">\n      <Tab\n        color={activityInView === 0 /* Txs */ ? \"$neutral1\" : \"$neutral2\"}\n        onPress={() => setActivityInView(0 /* Txs */)}\n      ><Trans i18nKey=\"common.transactions\" /></Tab>\n      <Tab\n        color={activityInView === 1 /* Pools */ ? \"$neutral1\" : \"$neutral2\"}\n        onPress={() => setActivityInView(1 /* Pools */)}\n      ><Trans i18nKey=\"common.pools\" /></Tab>\n    </Flex>\n    {activityInView === 0 /* Txs */ && <TransactionsTable chainId={chainId} referenceToken={referenceToken} />}\n    {activityInView === 1 /* Pools */ && <TokenDetailsPoolsTable chainId={chainId} referenceToken={referenceToken} />}\n  </Container>;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { getTokenDetailsURL, gqlToCurrency, supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { Chain } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst BalancesCard = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  height: fit-content;\n  width: 100%;\n\n  // 768 hardcoded to match NFT-redesign navbar breakpoints\n  // src/nft/css/sprinkles.css.ts\n  // change to match theme breakpoints when this navbar is updated\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\nconst BalanceSection = styled.div`\n  height: fit-content;\n  width: 100%;\n`;\nconst BalanceRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-top: 12px;\n`;\nconst BalanceItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst BalanceAmountsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  margin-left: 12px;\n  ${({ $alignLeft }) => $alignLeft && `\n    justify-content: start;\n    gap: 8px;\n  `}\n`;\nconst Balance = ({\n  currency,\n  chainId = UniverseChainId.Mainnet,\n  gqlBalance,\n  alignLeft = false,\n  onClick\n}) => {\n  const { formatNumber } = useFormatter();\n  const currencies = useMemo(() => [currency], [currency]);\n  const formattedGqlBalance = formatNumber({\n    input: gqlBalance?.quantity,\n    type: NumberType.TokenNonTx\n  });\n  const formattedUsdGqlValue = formatNumber({\n    input: gqlBalance?.denominatedValue?.value,\n    type: NumberType.PortfolioBalance\n  });\n  return <BalanceRow onClick={onClick}>\n    <PortfolioLogo\n      currencies={currencies}\n      chainId={chainId}\n      images={[gqlBalance?.token?.project?.logoUrl]}\n      size={32}\n    />\n    <BalanceAmountsContainer $alignLeft={alignLeft}>\n      <BalanceItem><ThemedText.BodyPrimary>{formattedUsdGqlValue}</ThemedText.BodyPrimary></BalanceItem>\n      <BalanceItem><ThemedText.BodySecondary>{formattedGqlBalance}</ThemedText.BodySecondary></BalanceItem>\n    </BalanceAmountsContainer>\n  </BalanceRow>;\n};\nexport const PageChainBalanceSummary = ({\n  pageChainBalance,\n  alignLeft = false\n}) => {\n  if (!pageChainBalance || !pageChainBalance.token) {\n    return null;\n  }\n  const currency = gqlToCurrency(pageChainBalance.token);\n  return <BalanceSection>\n    <ThemedText.HeadlineSmall color=\"neutral1\"><Trans i18nKey=\"tdp.balanceSummary.title\" /></ThemedText.HeadlineSmall>\n    <Balance currency={currency} chainId={currency?.chainId} gqlBalance={pageChainBalance} alignLeft={alignLeft} />\n  </BalanceSection>;\n};\nconst OtherChainsBalanceSummary = ({\n  otherChainBalances,\n  hasPageChainBalance\n}) => {\n  const navigate = useNavigate();\n  if (!otherChainBalances.length) {\n    return null;\n  }\n  return <BalanceSection>\n    {hasPageChainBalance ? <ThemedText.SubHeaderSmall><Trans i18nKey=\"tdp.balanceSummary.otherNetworks\">On other networks</Trans></ThemedText.SubHeaderSmall> : <ThemedText.HeadlineSmall><Trans i18nKey=\"tdp.balanceSummary.otherNetworksBalance\">Balance on other networks</Trans></ThemedText.HeadlineSmall>}\n    {otherChainBalances.map((balance) => {\n      const currency = balance.token && gqlToCurrency(balance.token);\n      const chainId = (balance.token && supportedChainIdFromGQLChain(balance.token.chain)) ?? UniverseChainId.Mainnet;\n      return <Balance\n        key={balance.id}\n        currency={currency}\n        chainId={chainId}\n        gqlBalance={balance}\n        onClick={() => navigate(\n          getTokenDetailsURL({\n            address: balance.token?.address,\n            chain: balance.token?.chain ?? Chain.Ethereum\n          })\n        )}\n      />;\n    })}\n  </BalanceSection>;\n};\nexport default function BalanceSummary() {\n  const account = useAccount();\n  const { currencyChain, multiChainMap } = useTDPContext();\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const otherChainBalances = [];\n  for (const [key, value] of Object.entries(multiChainMap)) {\n    if (key !== currencyChain && value?.balance !== void 0) {\n      otherChainBalances.push(value.balance);\n    }\n  }\n  const hasBalances = pageChainBalance || Boolean(otherChainBalances.length);\n  if (!account.isConnected || !hasBalances) {\n    return null;\n  }\n  return <BalancesCard>\n    <PageChainBalanceSummary pageChainBalance={pageChainBalance} />\n    <OtherChainsBalanceSummary otherChainBalances={otherChainBalances} hasPageChainBalance={!!pageChainBalance} />\n  </BalancesCard>;\n}\n","\"use strict\";\nexport const Globe = (props) => <svg\n  width=\"18\"\n  height=\"18\"\n  viewBox=\"0 0 18 18\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  stroke=\"transparent\"\n  {...props}\n><path\n  d=\"M5.12245 9.5625C5.23495 11.8725 6.01495 14.2275 7.37245 16.32C4.19245 15.615 1.76996 12.8925 1.52246 9.5625H5.12245ZM7.37245 1.67999C4.19245 2.38499 1.76996 5.1075 1.52246 8.4375H5.12245C5.23495 6.1275 6.01495 3.77249 7.37245 1.67999ZM9.14997 1.5H8.84995L8.62496 1.82249C7.19996 3.84749 6.36745 6.1725 6.24745 8.4375H11.7525C11.6325 6.1725 10.8 3.84749 9.37496 1.82249L9.14997 1.5ZM6.24745 9.5625C6.36745 11.8275 7.19996 14.1525 8.62496 16.1775L8.84995 16.5H9.14997L9.37496 16.1775C10.8 14.1525 11.6325 11.8275 11.7525 9.5625H6.24745ZM12.8775 9.5625C12.765 11.8725 11.985 14.2275 10.6275 16.32C13.8075 15.615 16.23 12.8925 16.4775 9.5625H12.8775ZM16.4775 8.4375C16.23 5.1075 13.8075 2.38499 10.6275 1.67999C11.985 3.77249 12.765 6.1275 12.8775 8.4375H16.4775Z\"\n  fill={props.fill ?? \"#607BEE\"}\n/></svg>;\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport { FOTTooltipContent } from \"components/swap/SwapLineItem\";\nimport { NoInfoAvailable, truncateDescription, TruncateDescriptionButton } from \"components/Tokens/TokenDetails/shared\";\nimport Tooltip, { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useSwapTaxes } from \"hooks/useSwapTaxes\";\nimport { useTheme } from \"lib/styled-components\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useReducer } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { ClickableTamaguiStyle, EllipsisTamaguiStyle, ExternalLink, ThemedText } from \"theme/components\";\nimport { Flex, Paragraph, styled, Text } from \"ui/src\";\nimport { t, Trans } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst TokenInfoSection = styled(Flex, {\n  gap: \"$gap16\",\n  width: \"100%\",\n  $xl: {\n    gap: 24\n  }\n});\nconst InfoSectionHeader = styled(Text, {\n  variant: \"subheading1\"\n});\nconst TokenNameRow = styled(Flex, {\n  row: true,\n  gap: \"$gap8\",\n  width: \"100%\"\n});\nconst TokenButtonRow = styled(TokenNameRow, {\n  flexWrap: \"wrap\"\n});\nconst TokenInfoButton = styled(Text, {\n  variant: \"buttonLabel3\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  gap: \"$gap8\",\n  py: \"$padding8\",\n  px: \"$padding12\",\n  borderRadius: \"$rounded20\",\n  backgroundColor: \"$surface2\",\n  width: \"max-content\",\n  ...ClickableTamaguiStyle,\n  color: \"$neutral1\"\n});\nconst TokenDescriptionContainer = styled(Text, {\n  variant: \"body1\",\n  color: \"$neutral1\",\n  maxWidth: \"100%\",\n  maxHeight: \"fit-content\",\n  ...EllipsisTamaguiStyle,\n  whiteSpace: \"pre-wrap\",\n  lineHeight: 24\n});\nconst DescriptionVisibilityWrapper = styled(Paragraph, {\n  fontWeight: \"$book\",\n  variants: {\n    visible: {\n      true: {\n        display: \"inline\"\n      },\n      false: {\n        display: \"none\"\n      }\n    }\n  }\n});\nconst TRUNCATE_CHARACTER_COUNT = 200;\nexport function TokenDescription() {\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { neutral2 } = useTheme();\n  const { description, homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address);\n  }, [address, setCopied]);\n  const [isDescriptionTruncated, toggleIsDescriptionTruncated] = useReducer((x) => !x, true);\n  const truncatedDescription = truncateDescription(description ?? \"\", TRUNCATE_CHARACTER_COUNT);\n  const shouldTruncate = !!description && description.length > TRUNCATE_CHARACTER_COUNT;\n  const showTruncatedDescription = shouldTruncate && isDescriptionTruncated;\n  const { inputTax: sellFee, outputTax: buyFee } = useSwapTaxes(address, address, currency.chainId);\n  const { formatPercent } = useFormatter();\n  const { sellFeeString, buyFeeString } = {\n    sellFeeString: formatPercent(sellFee),\n    buyFeeString: formatPercent(buyFee)\n  };\n  const hasFee = Boolean(parseFloat(sellFeeString)) || Boolean(parseFloat(buyFee.toFixed(2)));\n  const sameFee = sellFeeString === buyFeeString;\n  return <TokenInfoSection data-testid=\"token-details-info-section\">\n    <InfoSectionHeader><Trans i18nKey=\"common.info.label\" /></InfoSectionHeader>\n    <TokenButtonRow data-testid=\"token-details-info-links\">\n      {!currency.isNative && <Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t(\"common.copied\")}><TokenInfoButton onPress={copy}>\n        <Copy width=\"18px\" height=\"18px\" color={neutral2} />\n        {shortenAddress(currency.address)}\n      </TokenInfoButton></Tooltip>}\n      <ExternalLink href={explorerUrl}><TokenInfoButton>\n        <EtherscanLogo width=\"18px\" height=\"18px\" fill={neutral2} />\n        {currency.chainId === UniverseChainId.Mainnet ? <Trans i18nKey=\"common.etherscan\" /> : <Trans i18nKey=\"common.explorer\" />}\n      </TokenInfoButton></ExternalLink>\n      {homepageUrl && <ExternalLink href={homepageUrl}><TokenInfoButton>\n        <Globe width=\"18px\" height=\"18px\" fill={neutral2} />\n        <Trans i18nKey=\"common.website\" />\n      </TokenInfoButton></ExternalLink>}\n      {twitterName && <ExternalLink href={`https://x.com/${twitterName}`}><TokenInfoButton>\n        <TwitterXLogo width=\"18px\" height=\"18px\" fill={neutral2} />\n        <Trans i18nKey=\"common.twitter\" />\n      </TokenInfoButton></ExternalLink>}\n    </TokenButtonRow>\n    <TokenDescriptionContainer>\n      {!description && <NoInfoAvailable><Trans i18nKey=\"tdp.noInfoAvailable\" /></NoInfoAvailable>}\n      {description && <>\n        <DescriptionVisibilityWrapper data-testid=\"token-description-full\" visible={!showTruncatedDescription}>{description}</DescriptionVisibilityWrapper>\n        <DescriptionVisibilityWrapper data-testid=\"token-description-truncated\" visible={showTruncatedDescription}>{truncatedDescription}</DescriptionVisibilityWrapper>\n      </>}\n      {shouldTruncate && <TruncateDescriptionButton\n        onClick={toggleIsDescriptionTruncated}\n        data-testid=\"token-description-show-more-button\"\n      >{isDescriptionTruncated ? <Trans i18nKey=\"common.showMore.button\" /> : <Trans i18nKey=\"common.hide.button\" />}</TruncateDescriptionButton>}\n    </TokenDescriptionContainer>\n    {hasFee && <MouseoverTooltip\n      placement=\"left\"\n      size={TooltipSize.Small}\n      text={<ThemedText.Caption color=\"neutral2\"><FOTTooltipContent /></ThemedText.Caption>}\n    ><Flex gap=\"$gap8\">{sameFee ? <ThemedText.BodyPrimary>\n      {currency.symbol}\n      {\"\\xA0\"}\n      <Trans i18nKey=\"token.fee.label\" />\n      {\":\\xA0\"}\n      {sellFeeString}\n    </ThemedText.BodyPrimary> : <>\n      <ThemedText.BodyPrimary>\n        {currency.symbol}\n        {\"\\xA0\"}\n        <Trans i18nKey=\"token.fee.buy.label\" />\n        {\":\\xA0\"}\n        {buyFeeString}\n      </ThemedText.BodyPrimary>\n      {\" \"}\n      <ThemedText.BodyPrimary>\n        {currency.symbol}\n        {\"\\xA0\"}\n        <Trans i18nKey=\"token.fee.sell.label\" />\n        {\":\\xA0\"}\n        {sellFeeString}\n      </ThemedText.BodyPrimary>\n      {\" \"}\n    </>}</Flex></MouseoverTooltip>}\n  </TokenInfoSection>;\n}\n","\"use strict\";\nimport { PortfolioLogo } from \"components/AccountDrawer/MiniPortfolio/PortfolioLogo\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport { Globe } from \"components/Icons/Globe\";\nimport { Share as ShareIcon } from \"components/Icons/Share\";\nimport { TwitterXLogo } from \"components/Icons/TwitterX\";\nimport ShareButton, { openShareTweetWindow } from \"components/Tokens/TokenDetails/ShareButton\";\nimport { TokenNameCell } from \"components/Tokens/TokenDetails/Skeleton\";\nimport { ActionButtonStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { MouseoverTooltip, TooltipSize } from \"components/Tooltip\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useMemo, useState } from \"react\";\nimport { Link, MoreHorizontal } from \"react-feather\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { EllipsisTamaguiStyle } from \"theme/components\";\nimport { Flex, Text, WebBottomSheet, useMedia, useSporeColors } from \"ui/src\";\nimport { Check } from \"ui/src/components/icons/Check\";\nimport { iconSizes } from \"ui/src/theme\";\nimport { useTranslation } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { isMobileWeb } from \"utilities/src/platform\";\nexport const TokenDetailsHeader = () => {\n  const { address, currency, tokenQuery } = useTDPContext();\n  const { t } = useTranslation();\n  const colors = useSporeColors();\n  const media = useMedia();\n  const isMobileScreen = media.sm;\n  const [mobileSheetOpen, toggleMobileSheet] = useState(false);\n  const tokenSymbolName = currency.symbol ?? t(\"tdp.symbolNotFound\");\n  const explorerUrl = getExplorerLink(\n    currency.chainId,\n    address,\n    currency.isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  );\n  const { homepageUrl, twitterName } = tokenQuery.data?.token?.project ?? {};\n  const twitterUrl = twitterName && `https://x.com/${twitterName}`;\n  const [searchParams] = useSearchParams();\n  const utmTag = `${searchParams.size > 0 ? \"&\" : \"?\"}utm_source=share-tdp&utm_medium=${isMobileWeb ? \"mobile\" : \"web\"}`;\n  const currentLocation = window.location.href + utmTag;\n  const twitterShareName = currency.name && currency.symbol ? `${currency.name} (${currency.symbol})` : currency?.name || currency?.symbol || \"\";\n  const [isCopied, setCopied] = useCopyClipboard();\n  const HeaderActions = useMemo(() => {\n    return [\n      {\n        title: t(\"common.explorer\"),\n        icon: currency.chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(explorerUrl, \"_blank\"),\n        show: !!explorerUrl\n      },\n      {\n        title: t(\"common.website\"),\n        icon: <Globe width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(homepageUrl, \"_blank\"),\n        show: !!homepageUrl\n      },\n      {\n        title: t(\"common.twitter\"),\n        icon: <TwitterXLogo width=\"18px\" height=\"18px\" fill={colors.neutral1.val} />,\n        onPress: () => window.open(twitterUrl, \"_blank\"),\n        show: !!twitterUrl\n      },\n      {\n        title: isCopied ? t(\"common.copied\") : t(\"common.copyLink.button\"),\n        icon: isCopied ? <Check size={16} p={1} color={colors.statusSuccess.val} /> : <Link size={18} color={colors.neutral1.val} />,\n        onPress: () => setCopied(currentLocation),\n        show: isMobileScreen\n      },\n      {\n        title: t(\"common.share.shareToTwitter\"),\n        icon: <ShareIcon fill={colors.neutral1.val} width={18} height={18} />,\n        onPress: () => openShareTweetWindow(twitterShareName),\n        show: isMobileScreen\n      }\n    ];\n  }, [\n    explorerUrl,\n    homepageUrl,\n    twitterUrl,\n    currency.chainId,\n    colors,\n    t,\n    isCopied,\n    setCopied,\n    currentLocation,\n    isMobileScreen,\n    twitterShareName\n  ]);\n  return <>\n    <TokenNameCell>\n      <PortfolioLogo currencies={[currency]} chainId={currency.chainId} size={32} />\n      <Flex row gap=\"$gap8\" alignItems=\"center\" overflow=\"hidden\">\n        <Text variant=\"heading3\" minWidth={40} {...EllipsisTamaguiStyle}>{currency.name ?? t(\"tdp.nameNotFound\")}</Text>\n        <Text variant=\"heading3\" textTransform=\"uppercase\" color=\"$neutral2\" $sm={{ display: \"none\" }}>{tokenSymbolName}</Text>\n      </Flex>\n    </TokenNameCell>\n    {isMobileScreen ? <Flex>\n      <Text onPress={() => toggleMobileSheet(true)} {...ActionButtonStyle}><MoreHorizontal size={iconSizes.icon20} color={colors.neutral2.val} /></Text>\n      <WebBottomSheet isOpen={isMobileScreen && mobileSheetOpen} onClose={() => toggleMobileSheet(false)}><Flex gap=\"$spacing8\" mb=\"$spacing16\">{HeaderActions.map(\n        (action) => action.show && <Flex\n          row\n          key={action.title}\n          width=\"100%\"\n          gap=\"$spacing12\"\n          px=\"$spacing8\"\n          py={10}\n          alignItems=\"center\"\n          hoverStyle={{ backgroundColor: \"$surface3\" }}\n          cursor=\"pointer\"\n          borderRadius=\"$rounded8\"\n          onPress={() => {\n            toggleMobileSheet(false);\n            action.onPress();\n          }}\n        >\n          {action.icon}\n          <Text variant=\"body2\">{action.title}</Text>\n        </Flex>\n      )}</Flex></WebBottomSheet>\n    </Flex> : <Flex row gap=\"$gap8\" alignItems=\"center\">\n      {HeaderActions.map(\n        (action) => action.show && <MouseoverTooltip key={action.title} text={action.title} placement=\"top\" size={TooltipSize.Max}><Text onPress={action.onPress} {...ActionButtonStyle}>{action.icon}</Text></MouseoverTooltip>\n      )}\n      <ShareButton name={twitterShareName} utmSource=\"share-tdp\" />\n    </Flex>}\n  </>;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { MobileBottomBar, TDPActionTabs } from \"components/NavBar/MobileBottomBar\";\nimport TokenSafetyMessage from \"components/TokenSafety/TokenSafetyMessage\";\nimport { ActivitySection } from \"components/Tokens/TokenDetails/ActivitySection\";\nimport BalanceSummary, { PageChainBalanceSummary } from \"components/Tokens/TokenDetails/BalanceSummary\";\nimport ChartSection from \"components/Tokens/TokenDetails/ChartSection\";\nimport { LeftPanel, RightPanel, TokenDetailsLayout, TokenInfoContainer } from \"components/Tokens/TokenDetails/Skeleton\";\nimport StatsSection from \"components/Tokens/TokenDetails/StatsSection\";\nimport { TokenDescription } from \"components/Tokens/TokenDetails/TokenDescription\";\nimport { TokenDetailsHeader } from \"components/Tokens/TokenDetails/TokenDetailsHeader\";\nimport { Hr } from \"components/Tokens/TokenDetails/shared\";\nimport { CHAIN_ID_TO_BACKEND_NAME, isSupportedChainId } from \"constants/chains\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useParsedQueryString from \"hooks/useParsedQueryString\";\nimport { ScrollDirection, useScroll } from \"hooks/useScroll\";\nimport deprecatedStyled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useTDPContext } from \"pages/TokenDetails/TDPContext\";\nimport { useCallback, useMemo } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Flex, useIsTouchDevice } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { addressesAreEquivalent } from \"utils/addressesAreEquivalent\";\nimport { getInitialLogoUrl } from \"utils/getInitialLogoURL\";\nconst DividerLine = deprecatedStyled(Hr)`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    opacity: 0;\n    margin-bottom: 0;\n  }\n`;\nfunction TDPBreadcrumb() {\n  const { address, currency, currencyChain } = useTDPContext();\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\n    <BreadcrumbNavLink to={`/explore/${currencyChain.toLowerCase()}`}>\n      <Trans i18nKey=\"common.explore\" />\n      {\" \"}\n      <ChevronRight size={14} />\n    </BreadcrumbNavLink>\n    <BreadcrumbNavLink to={`/explore/tokens/${currencyChain.toLowerCase()}`}>\n      <Trans i18nKey=\"common.tokens\" />\n      {\" \"}\n      <ChevronRight size={14} />\n    </BreadcrumbNavLink>\n    <CurrentPageBreadcrumb address={address} currency={currency} />\n  </BreadcrumbNavContainer>;\n}\nfunction getCurrencyURLAddress(currency) {\n  if (!currency) {\n    return \"\";\n  }\n  if (currency.isToken) {\n    return currency.address;\n  }\n  return NATIVE_CHAIN_ID;\n}\nfunction useSwapInitialInputCurrency() {\n  const { currency } = useTDPContext();\n  const parsedQs = useParsedQueryString();\n  const inputTokenAddress = useMemo(() => {\n    return typeof parsedQs.inputCurrency === \"string\" ? parsedQs.inputCurrency : void 0;\n  }, [parsedQs]);\n  return useCurrency(inputTokenAddress, currency.chainId);\n}\nfunction TDPSwapComponent() {\n  const { address, currency, currencyChainId, warning } = useTDPContext();\n  const account = useAccount();\n  const navigate = useNavigate();\n  const handleCurrencyChange = useCallback(\n    (tokens) => {\n      const inputCurrencyURLAddress = getCurrencyURLAddress(tokens.inputCurrency);\n      const outputCurrencyURLAddress = getCurrencyURLAddress(tokens.outputCurrency);\n      if (addressesAreEquivalent(inputCurrencyURLAddress, address) || addressesAreEquivalent(outputCurrencyURLAddress, address)) {\n        return;\n      }\n      const newDefaultToken = tokens.outputCurrency ?? tokens.inputCurrency;\n      if (!newDefaultToken) {\n        return;\n      }\n      const preloadedLogoSrc = getInitialLogoUrl(\n        newDefaultToken.wrapped.address,\n        newDefaultToken.chainId,\n        newDefaultToken.isNative\n      );\n      const url = getTokenDetailsURL({\n        // The function falls back to \"NATIVE\" if the address is null\n        address: newDefaultToken.isNative ? null : newDefaultToken.address,\n        chain: CHAIN_ID_TO_BACKEND_NAME[isSupportedChainId(newDefaultToken.chainId) ? newDefaultToken.chainId : currencyChainId],\n        inputAddress: (\n          // If only one token was selected before we navigate, then it was the default token and it's being replaced.\n          // On the new page, the *new* default token becomes the output, and we don't have another option to set as the input token.\n          tokens.inputCurrency && tokens.inputCurrency !== newDefaultToken ? inputCurrencyURLAddress : null\n        )\n      });\n      navigate(url, { state: { preloadedLogoSrc } });\n    },\n    [address, currencyChainId, navigate]\n  );\n  const initialInputCurrency = useSwapInitialInputCurrency();\n  return <>\n    <Swap\n      syncTabToUrl={false}\n      chainId={currency.chainId}\n      initialInputCurrency={initialInputCurrency}\n      initialOutputCurrency={currency}\n      onCurrencyChange={handleCurrencyChange}\n      disableTokenInputs={account.isConnected && currency.chainId !== account.chainId}\n      compact\n    />\n    {warning && <TokenSafetyMessage tokenAddress={address} warning={warning} />}\n  </>;\n}\nfunction TDPAnalytics({ children }) {\n  const { address, currency } = useTDPContext();\n  return <Trace\n    logImpression\n    page={InterfacePageName.TOKEN_DETAILS_PAGE}\n    properties={{\n      tokenAddress: address,\n      tokenSymbol: currency.symbol,\n      tokenName: currency.name,\n      chainId: currency.chainId\n    }}\n  >{children}</Trace>;\n}\nexport default function TokenDetails() {\n  const { address, currency, tokenQuery, currencyChain, multiChainMap } = useTDPContext();\n  const tokenQueryData = tokenQuery.data?.token;\n  const pageChainBalance = multiChainMap[currencyChain]?.balance;\n  const { lg: showRightPanel } = useScreenSize();\n  const { direction: scrollDirection } = useScroll();\n  const isTouchDevice = useIsTouchDevice();\n  return <TDPAnalytics><TokenDetailsLayout>\n    <LeftPanel>\n      <TDPBreadcrumb />\n      <TokenInfoContainer data-testid=\"token-info-container\"><TokenDetailsHeader /></TokenInfoContainer>\n      <ChartSection />\n      {!showRightPanel && !!pageChainBalance && <Flex mt=\"$spacing40\"><PageChainBalanceSummary pageChainBalance={pageChainBalance} alignLeft /></Flex>}\n      <StatsSection chainId={currency.chainId} address={address} tokenQueryData={tokenQueryData} />\n      <DividerLine />\n      <ActivitySection />\n    </LeftPanel>\n    <RightPanel>\n      {showRightPanel && <>\n        <TDPSwapComponent />\n        <BalanceSummary />\n      </>}\n      <TokenDescription />\n    </RightPanel>\n    <MobileBottomBar hide={isTouchDevice && scrollDirection === ScrollDirection.DOWN}>\n      {\n        /* TODO(WEB-4800): data-testid is not passed to ui/src elements when animation is set */\n      }\n      {\n        /* Remove this extra div when WEB-4800 is fixed */\n      }\n      <div data-testid=\"tdp-mobile-bottom-bar\"><TDPActionTabs /></div>\n    </MobileBottomBar>\n  </TokenDetailsLayout></TDPAnalytics>;\n}\n","\"use strict\";\nimport { getChain, isSupportedChainId } from \"constants/chains\";\nimport { CELO_LOGO } from \"ui/src/assets\";\nimport { isCelo, nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { isAddress } from \"utilities/src/addresses\";\nexport function getInitialLogoUrl(address, chainId, isNative, backupImg) {\n  const networkName = isSupportedChainId(chainId) ? getChain({ chainId }).assetRepoNetworkName ?? \"ethereum\" : \"ethereum\";\n  const checksummedAddress = isAddress(address);\n  if (chainId && isCelo(chainId) && address === nativeOnChain(chainId).wrapped.address) {\n    return CELO_LOGO;\n  }\n  if (checksummedAddress) {\n    return `https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/${networkName}/assets/${checksummedAddress}/logo.png`;\n  } else {\n    return backupImg ?? void 0;\n  }\n}\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEye(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.75 12C14.75 13.517 13.517 14.75 12 14.75C10.483 14.75 9.25004 13.517 9.25004 12C9.25004 11.651 9.32196 11.32 9.44096 11.012C9.63496 11.166 9.86903 11.272 10.136 11.272C10.763 11.272 11.272 10.763 11.272 10.136C11.272 9.86899 11.166 9.63492 11.012 9.44092C11.32 9.32192 11.651 9.25 12 9.25C13.517 9.25 14.75 10.483 14.75 12ZM20.5921 13.4771C19.3651 15.5311 16.609 19 12 19C7.39104 19 4.635 15.5311 3.408 13.4771C2.864 12.5671 2.864 11.4329 3.408 10.5229C4.635 8.46895 7.39104 5 12 5C16.609 5 19.3651 8.46895 20.5921 10.5229C21.1361 11.4329 21.1361 12.5671 20.5921 13.4771ZM16.25 12C16.25 9.657 14.344 7.75 12 7.75C9.65604 7.75 7.75004 9.657 7.75004 12C7.75004 14.343 9.65604 16.25 12 16.25C14.344 16.25 16.25 14.343 16.25 12Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.0b7e1ea0bf8a719e75d97cfc5cd4e72d.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\nimport { ReactComponent as EyeIcon } from \"assets/svg/eye.svg\";\nimport { ButtonPrimary } from \"components/Button/buttons\";\nimport { useIsSupportedChainId } from \"constants/chains\";\nimport { useAccount } from \"hooks/useAccount\";\nimport useSelectChain from \"hooks/useSelectChain\";\nimport styled from \"lib/styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { UNIVERSE_CHAIN_INFO } from \"uniswap/src/constants/chains\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst InvalidDetailsContainer = styled.div`\n  padding-top: 128px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst InvalidDetailsText = styled.span`\n  margin-top: 28px;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 20px;\n  font-weight: 535;\n  line-height: 28px;\n`;\nconst TokenExploreButton = styled(ButtonPrimary)`\n  width: fit-content;\n  padding: 12px 16px;\n  border-radius: 12px;\n\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 16px;\n  font-weight: 535;\n`;\nexport default function InvalidTokenDetails({\n  pageChainId,\n  isInvalidAddress\n}) {\n  const { chainId } = useAccount();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  const pageChainIsSupported = useIsSupportedChainId(pageChainId);\n  const navigate = useNavigate();\n  const selectChain = useSelectChain();\n  const isNonExistentToken = !isInvalidAddress && pageChainId === chainId;\n  const connectedChainLabel = isSupportedChain ? UNIVERSE_CHAIN_INFO[chainId].label : void 0;\n  return <InvalidDetailsContainer>\n    <EyeIcon />\n    {isInvalidAddress || isNonExistentToken ? <>\n      <InvalidDetailsText><Trans i18nKey=\"tdp.invalidTokenPage.title\" /></InvalidDetailsText>\n      <TokenExploreButton onClick={() => navigate(\"/tokens\")}><ThemedText.SubHeader><Trans i18nKey=\"common.exploreTokens\" /></ThemedText.SubHeader></TokenExploreButton>\n    </> : <>\n      {connectedChainLabel && <InvalidDetailsText><Trans i18nKey=\"tdp.invalidTokenPage.titleWithChain\" values={{ network: connectedChainLabel }} /></InvalidDetailsText>}\n      <TokenExploreButton onClick={() => selectChain(pageChainId)}><ThemedText.SubHeader><Trans\n        i18nKey=\"tdp.invalidTokenPage.switchChainPrompt\"\n        values={{ network: pageChainIsSupported ? UNIVERSE_CHAIN_INFO[pageChainId].label : \"\" }}\n      /></ThemedText.SubHeader></TokenExploreButton>\n    </>}\n  </InvalidDetailsContainer>;\n}\n","\"use strict\";\nimport { UNIVERSE_CHAIN_INFO } from \"uniswap/src/constants/chains\";\nimport { t } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nexport const getTokenPageTitle = (currency, chainId) => {\n  const tokenName = currency?.name;\n  const tokenSymbol = currency?.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!tokenName && !tokenSymbol) {\n    return baseTitle;\n  }\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${UNIVERSE_CHAIN_INFO[chainId].label}` : \"\";\n  if (!tokenName && tokenSymbol) {\n    return `${tokenSymbol}${chainSuffix}: ${baseTitle}`;\n  }\n  if (tokenName && !tokenSymbol) {\n    return `${tokenName}${chainSuffix}: ${baseTitle}`;\n  }\n  return `${tokenName} (${tokenSymbol})${chainSuffix}: ${baseTitle}`;\n};\nexport const getTokenPageDescription = (currency, chainId) => {\n  const tokenPageName = currency?.name && currency?.symbol ? `${currency?.name} (${currency?.symbol})` : currency?.name ?? currency?.symbol ?? \"tokens\";\n  const chainSuffix = chainId && chainId !== UniverseChainId.Mainnet ? ` on ${UNIVERSE_CHAIN_INFO[chainId].label}` : \"\";\n  return `Buy, sell, and swap ${tokenPageName}${chainSuffix}. Real-time prices, charts, transaction data, and more.`;\n};\n","\"use strict\";\nimport TokenDetails from \"components/Tokens/TokenDetails\";\nimport { useCreateTDPChartState } from \"components/Tokens/TokenDetails/ChartSection\";\nimport InvalidTokenDetails from \"components/Tokens/TokenDetails/InvalidTokenDetails\";\nimport { TokenDetailsPageSkeleton } from \"components/Tokens/TokenDetails/Skeleton\";\nimport { useChainFromUrlParam } from \"constants/chains\";\nimport { useTokenWarning } from \"constants/deprecatedTokenSafety\";\nimport { NATIVE_CHAIN_ID, UNKNOWN_TOKEN_SYMBOL } from \"constants/tokens\";\nimport { useTokenBalancesQuery } from \"graphql/data/apollo/AdaptiveTokenBalancesProvider\";\nimport { getSupportedGraphQlChain, gqlToCurrency } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSrcColor } from \"hooks/useColor\";\nimport { useTheme } from \"lib/styled-components\";\nimport { TDPProvider } from \"pages/TokenDetails/TDPContext\";\nimport { getTokenPageDescription, getTokenPageTitle } from \"pages/TokenDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { formatTokenMetatagTitleName } from \"shared-cloud/metatags\";\nimport { ThemeProvider } from \"theme\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { useTokenWebQuery } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { isAddress } from \"utilities/src/addresses\";\nimport { getNativeTokenDBAddress } from \"utils/nativeTokens\";\nfunction useOnChainToken(address, chainId, skip) {\n  const token = useCurrency(!skip ? address : void 0, chainId);\n  if (skip || !address || token && token?.symbol === UNKNOWN_TOKEN_SYMBOL) {\n    return void 0;\n  } else {\n    return token;\n  }\n}\nfunction useTDPCurrency(tokenQuery, tokenAddress, currencyChainId, isNative) {\n  const { chainId } = useAccount();\n  const appChainId = chainId ?? UniverseChainId.Mainnet;\n  const queryCurrency = useMemo(() => {\n    if (isNative) {\n      return nativeOnChain(currencyChainId);\n    }\n    if (tokenQuery.data?.token) {\n      return gqlToCurrency(tokenQuery.data.token);\n    }\n    return void 0;\n  }, [isNative, currencyChainId, tokenQuery.data?.token]);\n  const skipOnChainFetch = Boolean(queryCurrency) || currencyChainId !== appChainId;\n  const onChainToken = useOnChainToken(tokenAddress, currencyChainId, skipOnChainFetch);\n  const currency = queryCurrency ?? onChainToken;\n  const currencyWasFetchedOnChain = !queryCurrency;\n  return { currency, currencyWasFetchedOnChain };\n}\nfunction useMultiChainMap(tokenQuery) {\n  const { data: balanceQuery } = useTokenBalancesQuery();\n  return useMemo(() => {\n    const tokenBalances = balanceQuery?.portfolios?.[0]?.tokenBalances;\n    const tokensAcrossChains = tokenQuery.data?.token?.project?.tokens;\n    if (!tokensAcrossChains) {\n      return {};\n    }\n    return tokensAcrossChains.reduce((map, current) => {\n      if (current) {\n        if (!map[current.chain]) {\n          map[current.chain] = {};\n        }\n        const update = map[current.chain] ?? {};\n        update.address = current.address;\n        update.balance = tokenBalances?.find((tokenBalance) => tokenBalance?.token?.id === current.id);\n        map[current.chain] = update;\n      }\n      return map;\n    }, {});\n  }, [balanceQuery?.portfolios, tokenQuery.data?.token?.project?.tokens]);\n}\nfunction useCreateTDPContext() {\n  const { tokenAddress } = useParams();\n  if (!tokenAddress) {\n    throw new Error(\"Invalid token details route: token address URL param is undefined\");\n  }\n  const currencyChainInfo = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true });\n  const isNative = tokenAddress === NATIVE_CHAIN_ID;\n  const tokenDBAddress = isNative ? getNativeTokenDBAddress(currencyChainInfo.backendChain.chain) : tokenAddress;\n  const tokenQuery = useTokenWebQuery({\n    variables: { address: tokenDBAddress, chain: currencyChainInfo.backendChain.chain },\n    errorPolicy: \"all\"\n  });\n  const chartState = useCreateTDPChartState(tokenDBAddress, currencyChainInfo.backendChain.chain);\n  const multiChainMap = useMultiChainMap(tokenQuery);\n  const { currency, currencyWasFetchedOnChain } = useTDPCurrency(\n    tokenQuery,\n    tokenAddress,\n    currencyChainInfo.id,\n    isNative\n  );\n  const warning = useTokenWarning(tokenAddress, currencyChainInfo.id);\n  const theme = useTheme();\n  const { preloadedLogoSrc } = useLocation().state ?? {};\n  const extractedColorSrc = tokenQuery.data?.token?.project?.logoUrl ?? preloadedLogoSrc;\n  const tokenColor = useSrcColor(\n    extractedColorSrc,\n    tokenQuery.data?.token?.name ?? tokenQuery.data?.token?.project?.name,\n    theme.surface2\n  ).tokenColor ?? void 0;\n  return useMemo(() => {\n    return {\n      currency,\n      currencyChain: currencyChainInfo.backendChain.chain,\n      currencyChainId: currencyChainInfo.id,\n      // `currency.address` is checksummed, whereas the `tokenAddress` url param may not be\n      address: (currency?.isNative ? NATIVE_CHAIN_ID : currency?.address) ?? tokenAddress,\n      currencyWasFetchedOnChain,\n      tokenQuery,\n      chartState,\n      warning,\n      multiChainMap,\n      tokenColor\n    };\n  }, [\n    currency,\n    currencyChainInfo.backendChain.chain,\n    currencyChainInfo.id,\n    tokenAddress,\n    currencyWasFetchedOnChain,\n    tokenQuery,\n    chartState,\n    warning,\n    multiChainMap,\n    tokenColor\n  ]);\n}\nexport default function TokenDetailsPage() {\n  const account = useAccount();\n  const pageChainId = account.chainId ?? UniverseChainId.Mainnet;\n  const contextValue = useCreateTDPContext();\n  const { tokenColor, address, currency, currencyChain, currencyChainId, tokenQuery } = contextValue;\n  const tokenQueryData = tokenQuery.data?.token;\n  const metatagProperties = useMemo(() => {\n    return {\n      title: formatTokenMetatagTitleName(tokenQueryData?.symbol, tokenQueryData?.name),\n      image: window.location.origin + \"/api/image/tokens/\" + currencyChain.toLowerCase() + \"/\" + (currency?.isNative ? getNativeTokenDBAddress(currencyChain) : address),\n      url: window.location.href,\n      description: getTokenPageDescription(currency, currencyChainId)\n    };\n  }, [address, currency, currencyChain, currencyChainId, tokenQueryData?.name, tokenQueryData?.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  return <ThemeProvider accent1={tokenColor ?? void 0}>\n    <Helmet>\n      <title>{getTokenPageTitle(currency, currencyChainId)}</title>\n      {metatags.map((tag, index) => <meta key={index} {...tag} />)}\n    </Helmet>\n    {(() => {\n      if (currency) {\n        return <TDPProvider contextValue={contextValue}><TokenDetails /></TDPProvider>;\n      }\n      if (tokenQuery.loading) {\n        return <TokenDetailsPageSkeleton />;\n      } else {\n        return <InvalidTokenDetails pageChainId={pageChainId} isInvalidAddress={!isAddress(address)} />;\n      }\n    })()}\n  </ThemeProvider>;\n}\n","\"use strict\";\nexport function formatTokenMetatagTitleName(symbol, name) {\n  if (symbol) {\n    return \"Get \" + symbol + \" on Uniswap\";\n  }\n  if (name) {\n    return \"Get \" + name + \" on Uniswap\";\n  }\n  return \"View Token on Uniswap\";\n}\nexport function formatNFTAssetMetatagTitleName(name, collectionName, tokenId) {\n  if (name) {\n    return name;\n  }\n  if (collectionName && tokenId) {\n    return collectionName + \" #\" + tokenId;\n  }\n  if (tokenId) {\n    return \"Asset #\" + tokenId;\n  }\n  return \"View NFT on Uniswap\";\n}\n"],"names":["MobileBottomBar","styled","Flex","zIndex","Z_INDEX","dropdown","position","bottom","right","left","justifyContent","gap","width","maxHeight","backdropFilter","mask","py","px","animation","display","$xl","variants","hide","true","false","Sell","props","svg","height","viewBox","fill","xmlns","path","fillRule","clipRule","d","TDPActionPill","button","$color","theme","neutral2","neutralContrast","ClickableStyle","TDPActionTabs","currencyChain","currencyChainId","address","tokenColor","useTDPContext","switchChain","useSwitchChain","navigate","useNavigate","account","useAccount","chainUrlParam","toLowerCase","addressUrlParam","NATIVE_CHAIN_ID","toActionLink","useCallback","href","chainId","tabs","label","t","icon","CreditCardIcon","Send","row","map","tab","onClick","DEFAULT_QUERY_SIZE","HIDDEN_COLUMNS","PoolSortFields","VolOverTvl","TokenDetailsPoolsTable","referenceToken","sortMethod","useAtomValue","sortMethodAtom","sortAscending","sortAscendingAtom","sortState","useMemo","sortBy","sortDirection","OrderDirection","Asc","Desc","pools","loading","errorV2","errorV3","loadMore","tokenAddress","dataV2","dataV3","loadingV3","error","data","fetchMore","fetchMoreV3","useTopV3PoolsQuery","variables","first","chain","chainIdToBackendChain","withFallback","loadingV2","fetchMoreV2","useTopV2PairsQuery","skip","loadingMoreV3","useRef","loadingMoreV2","sizeRef","onComplete","current","cursor","topV3Pools","length","totalLiquidity","value","updateQuery","prev","fetchMoreResult","Object","keys","mergedData","slice","topV2Pairs","pool","hash","token0","token1","tvl","volume24h","volumeWeek","volOverTvl","calculate1DVolOverTvl","apr","calculateApr","feeTier","protocolVersion","V2_BIPS","sortPools","usePoolsFromTokenAddress","combinedError","ApolloError","errorMessage","allDataStillLoading","useUpdateManualOutage","resetSortMethod","useResetAtom","resetSortAscending","useEffect","div","data-testid","PoolsTable","hiddenColumns","TokenTransactionType","TokenTransactionType2","TokenTransactionDefaultQuerySize","StyledSwapAmount","Text","maxWidth","variant","color","EllipsisTamaguiStyle","TableWrapper","minHeight","TransactionsTable","activeLocalCurrency","useActiveLocalCurrency","formatNumber","formatFiatPrice","useFormatter","filterModalIsOpen","toggleFilterModal","useReducer","s","filterAnchorRef","filter","setFilters","useState","BUY","SELL","transactions","useV3TokenTransactionsQuery","useV2TokenTransactionsQuery","querySizeRef","token","v3Transactions","timestamp","id","Chain","Ethereum","v2Transactions","tx","tokenBeingSold","isSell","parseFloat","token0Quantity","type","PoolTransactionType","Swap","includes","sort","a","b","useTokenTransactions","unwrappedReferenceToken","unwrapToken","transaction","swapLeg0","symbol","amount","swapLeg1","token1Quantity","token0IsBeingSold","input","output","usdValue","makerAddress","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","header","Cell","minWidth","grow","alignItems","HeaderArrow","direction","HeaderSortText","active","Trans","i18nKey","cell","TimestampCell","Number","getValue","link","getExplorerLink","ExplorerDataType","TRANSACTION","FilterHeaderRow","clickable","onPress","ref","Filter","allFilters","values","activeFilter","isOpen","anchorRef","outputTokenAddress","isBuy","String","inputTokenAmount","Math","abs","nonReferenceSwapLeg","TokenLinkCell","swapOutput","fiat","price","StyledExternalLink","ADDRESS","shortenAddress","Table","Container","Tab","ClickableTamaguiStyle","ActivitySection","wrapped","currency","activityInView","setActivityInView","mb","BalancesCard","neutral1","BalanceSection","BalanceRow","BalanceItem","BalanceAmountsContainer","$alignLeft","Balance","UniverseChainId","Mainnet","gqlBalance","alignLeft","currencies","formattedGqlBalance","quantity","NumberType","TokenNonTx","formattedUsdGqlValue","denominatedValue","PortfolioBalance","PortfolioLogo","images","project","logoUrl","size","ThemedText","BodyPrimary","BodySecondary","PageChainBalanceSummary","pageChainBalance","gqlToCurrency","HeadlineSmall","OtherChainsBalanceSummary","otherChainBalances","hasPageChainBalance","SubHeaderSmall","balance","supportedChainIdFromGQLChain","getTokenDetailsURL","BalanceSummary","multiChainMap","key","entries","push","hasBalances","Boolean","isConnected","Globe","stroke","TokenInfoSection","InfoSectionHeader","TokenNameRow","TokenButtonRow","flexWrap","TokenInfoButton","flexDirection","borderRadius","backgroundColor","TokenDescriptionContainer","whiteSpace","lineHeight","DescriptionVisibilityWrapper","Paragraph","fontWeight","visible","TRUNCATE_CHARACTER_COUNT","TokenDescription","tokenQuery","useTheme","description","homepageUrl","twitterName","explorerUrl","isNative","NATIVE","TOKEN","isCopied","setCopied","useCopyClipboard","copy","isDescriptionTruncated","toggleIsDescriptionTruncated","x","truncatedDescription","truncateDescription","shouldTruncate","showTruncatedDescription","inputTax","sellFee","outputTax","buyFee","useSwapTaxes","formatPercent","sellFeeString","buyFeeString","hasFee","toFixed","sameFee","Tooltip","placement","TooltipSize","Max","show","text","Copy","ExternalLink","EtherscanLogo","TwitterXLogo","NoInfoAvailable","TruncateDescriptionButton","MouseoverTooltip","Small","Caption","FOTTooltipContent","TokenDetailsHeader","useTranslation","colors","useSporeColors","isMobileScreen","useMedia","sm","mobileSheetOpen","toggleMobileSheet","tokenSymbolName","twitterUrl","searchParams","useSearchParams","utmTag","isMobileWeb","currentLocation","window","location","twitterShareName","name","HeaderActions","title","val","ExplorerIcon","open","Check","p","statusSuccess","Link","ShareIcon","openShareTweetWindow","TokenNameCell","overflow","textTransform","$sm","ActionButtonStyle","MoreHorizontal","iconSizes","icon20","WebBottomSheet","onClose","action","hoverStyle","ShareButton","utmSource","DividerLine","deprecatedStyled","Hr","breakpoint","TDPBreadcrumb","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","to","ChevronRight","CurrentPageBreadcrumb","getCurrencyURLAddress","isToken","TDPSwapComponent","warning","handleCurrencyChange","tokens","inputCurrencyURLAddress","inputCurrency","outputCurrencyURLAddress","outputCurrency","addressesAreEquivalent","newDefaultToken","preloadedLogoSrc","backupImg","networkName","isSupportedChainId","getChain","assetRepoNetworkName","checksummedAddress","isAddress","isCelo","nativeOnChain","CELO_LOGO","getInitialLogoUrl","url","CHAIN_ID_TO_BACKEND_NAME","inputAddress","state","initialInputCurrency","parsedQs","useParsedQueryString","inputTokenAddress","useCurrency","useSwapInitialInputCurrency","syncTabToUrl","initialOutputCurrency","onCurrencyChange","disableTokenInputs","compact","TokenSafetyMessage","TDPAnalytics","children","Trace","logImpression","page","InterfacePageName","TOKEN_DETAILS_PAGE","properties","tokenSymbol","tokenName","TokenDetails","tokenQueryData","lg","showRightPanel","useScreenSize","scrollDirection","useScroll","isTouchDevice","useIsTouchDevice","TokenDetailsLayout","LeftPanel","TokenInfoContainer","ChartSection","mt","StatsSection","RightPanel","ScrollDirection","DOWN","_path","_extends","assign","bind","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","SvgEye","_ref","svgRef","titleId","ForwardRef","InvalidDetailsContainer","InvalidDetailsText","span","TokenExploreButton","ButtonPrimary","InvalidTokenDetails","pageChainId","isInvalidAddress","isSupportedChain","useIsSupportedChainId","pageChainIsSupported","selectChain","useSelectChain","isNonExistentToken","connectedChainLabel","UNIVERSE_CHAIN_INFO","EyeIcon","SubHeader","network","getTokenPageTitle","baseTitle","chainSuffix","getTokenPageDescription","useTDPCurrency","appChainId","queryCurrency","skipOnChainFetch","onChainToken","UNKNOWN_TOKEN_SYMBOL","useOnChainToken","currencyWasFetchedOnChain","useCreateTDPContext","useParams","Error","currencyChainInfo","getSupportedGraphQlChain","useChainFromUrlParam","fallbackToEthereum","tokenDBAddress","getNativeTokenDBAddress","backendChain","useTokenWebQuery","errorPolicy","chartState","useCreateTDPChartState","balanceQuery","useTokenBalancesQuery","tokenBalances","portfolios","tokensAcrossChains","reduce","update","find","tokenBalance","useMultiChainMap","useTokenWarning","useLocation","extractedColorSrc","useSrcColor","surface2","TokenDetailsPage","contextValue","metatagProperties","formatTokenMetatagTitleName","image","origin","metatags","useDynamicMetatags","ThemeProvider","accent1","Helmet","tag","index","meta","TDPProvider","TokenDetailsPageSkeleton","formatNFTAssetMetatagTitleName","collectionName","tokenId"],"sourceRoot":""}