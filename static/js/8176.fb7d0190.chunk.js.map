{"version":3,"file":"static/js/8176.fb7d0190.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/chevron-up.js","components/Slider.tsx","hooks/useDebouncedChangeHandler.tsx","hooks/useIsArgentWallet.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","state/burn/hooks.tsx","pages/RemoveLiquidity/index.tsx","utils/calculateSlippageAmount.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ChevronUp=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"18 15 12 9 6 15\"}))}));ChevronUp.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ChevronUp.displayName=\"ChevronUp\";export default ChevronUp;","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { useCallback } from \"react\";\nconst StyledRangeInput = styled.input`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: ${({ theme }) => theme.accent1};\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow:\n        0px 0px 1px rgba(0, 0, 0, 0.1),\n        0px 4px 8px rgba(0, 0, 0, 0.08),\n        0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow:\n        0px 0px 1px rgba(0, 0, 0, 0.1),\n        0px 4px 8px rgba(0, 0, 0, 0.08),\n        0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.surface1};\n\n    &:hover,\n    &:focus {\n      box-shadow:\n        0px 0px 1px rgba(0, 0, 0, 0.1),\n        0px 4px 8px rgba(0, 0, 0, 0.08),\n        0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent1});\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(90deg, ${({ theme }) => theme.surface4}, ${({ theme }) => theme.surface2});\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.surface4};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.surface4};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.surface2};\n  }\n`;\nexport default function Slider({\n  value,\n  onChange,\n  min = 0,\n  step = 1,\n  max = 100,\n  size = 28,\n  ...rest\n}) {\n  const changeCallback = useCallback(\n    (e) => {\n      onChange(parseInt(e.target.value));\n    },\n    [onChange]\n  );\n  return <StyledRangeInput\n    size={size}\n    {...rest}\n    type=\"range\"\n    value={value}\n    style={{ padding: \"15px 0\" }}\n    onChange={changeCallback}\n    aria-labelledby=\"input slider\"\n    step={step}\n    min={min}\n    max={max}\n  />;\n}\n","\"use strict\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nexport default function useDebouncedChangeHandler(value, onChange, debouncedMs = 100) {\n  const [inner, setInner] = useState(() => value);\n  const timer = useRef();\n  const onChangeInner = useCallback(\n    (newValue) => {\n      setInner(newValue);\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue);\n        timer.current = void 0;\n      }, debouncedMs);\n    },\n    [debouncedMs, onChange]\n  );\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = void 0;\n    }\n    setInner(value);\n  }, [value]);\n  return [inner, onChangeInner];\n}\n","\"use strict\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useArgentWalletDetectorContract } from \"hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nexport default function useIsArgentWallet() {\n  const account = useAccount();\n  const argentWalletDetector = useArgentWalletDetectorContract();\n  const inputs = useMemo(() => [account.address], [account.address]);\n  const call = useSingleCallResult(argentWalletDetector, \"isArgentWallet\", inputs, NEVER_RELOAD);\n  return Boolean(call?.result?.[0]);\n}\n","\"use strict\";\nimport { splitSignature } from \"@ethersproject/bytes\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useEIP2612Contract } from \"hooks/useContract\";\nimport { useEthersWeb3Provider } from \"hooks/useEthersProvider\";\nimport useIsArgentWallet from \"hooks/useIsArgentWallet\";\nimport JSBI from \"jsbi\";\nimport { useSingleCallResult } from \"lib/hooks/multicall\";\nimport { useMemo, useState } from \"react\";\nimport { DAI, UNI, USDC_MAINNET } from \"uniswap/src/constants/tokens\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nexport var PermitType = /* @__PURE__ */ ((PermitType2) => {\n  PermitType2[PermitType2[\"AMOUNT\"] = 1] = \"AMOUNT\";\n  PermitType2[PermitType2[\"ALLOWED\"] = 2] = \"ALLOWED\";\n  return PermitType2;\n})(PermitType || {});\nconst PERMIT_VALIDITY_BUFFER = 20 * 60;\nconst PERMITTABLE_TOKENS = {\n  [UniverseChainId.Mainnet]: {\n    [USDC_MAINNET.address]: { type: 1 /* AMOUNT */, name: \"USD Coin\", version: \"2\" },\n    [DAI.address]: { type: 2 /* ALLOWED */, name: \"Dai Stablecoin\", version: \"1\" },\n    [UNI[UniverseChainId.Mainnet].address]: { type: 1 /* AMOUNT */, name: \"Uniswap\" }\n  },\n  [UniverseChainId.Goerli]: {\n    [UNI[UniverseChainId.Goerli].address]: { type: 1 /* AMOUNT */, name: \"Uniswap\" }\n  },\n  [UniverseChainId.Sepolia]: {\n    [UNI[UniverseChainId.Sepolia].address]: { type: 1 /* AMOUNT */, name: \"Uniswap\" }\n  }\n};\nvar UseERC20PermitState = /* @__PURE__ */ ((UseERC20PermitState2) => {\n  UseERC20PermitState2[UseERC20PermitState2[\"NOT_APPLICABLE\"] = 0] = \"NOT_APPLICABLE\";\n  UseERC20PermitState2[UseERC20PermitState2[\"LOADING\"] = 1] = \"LOADING\";\n  UseERC20PermitState2[UseERC20PermitState2[\"NOT_SIGNED\"] = 2] = \"NOT_SIGNED\";\n  UseERC20PermitState2[UseERC20PermitState2[\"SIGNED\"] = 3] = \"SIGNED\";\n  return UseERC20PermitState2;\n})(UseERC20PermitState || {});\nconst EIP712_DOMAIN_TYPE = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" }\n];\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: \"name\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" }\n];\nconst EIP2612_TYPE = [\n  { name: \"owner\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"deadline\", type: \"uint256\" }\n];\nconst PERMIT_ALLOWED_TYPE = [\n  { name: \"holder\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"expiry\", type: \"uint256\" },\n  { name: \"allowed\", type: \"bool\" }\n];\nexport function useERC20Permit(currencyAmount, spender, transactionDeadline, overridePermitInfo) {\n  const account = useAccount();\n  const provider = useEthersWeb3Provider();\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : void 0;\n  const eip2612Contract = useEIP2612Contract(tokenAddress);\n  const isArgentWallet = useIsArgentWallet();\n  const nonceInputs = useMemo(() => [account.address ?? void 0], [account.address]);\n  const tokenNonceState = useSingleCallResult(eip2612Contract, \"nonces\", nonceInputs);\n  const permitInfo = overridePermitInfo ?? (status === \"connected\" && account.chainId && tokenAddress ? PERMITTABLE_TOKENS[account.chainId]?.[tokenAddress] : void 0);\n  const [signatureData, setSignatureData] = useState(null);\n  return useMemo(() => {\n    if (isArgentWallet || !currencyAmount || !eip2612Contract || !account.chainId || !account.address || !transactionDeadline || !provider || !tokenNonceState.valid || !tokenAddress || !spender || !permitInfo) {\n      return {\n        state: 0 /* NOT_APPLICABLE */,\n        signatureData: null,\n        gatherPermitSignature: null\n      };\n    }\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber();\n    if (tokenNonceState.loading || typeof nonceNumber !== \"number\") {\n      return {\n        state: 1 /* LOADING */,\n        signatureData: null,\n        gatherPermitSignature: null\n      };\n    }\n    const isSignatureDataValid = signatureData && signatureData.owner === account.address && signatureData.deadline >= transactionDeadline.toNumber() && signatureData.tokenAddress === tokenAddress && signatureData.nonce === nonceNumber && signatureData.spender === spender && (\"allowed\" in signatureData || JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient));\n    return {\n      state: isSignatureDataValid ? 3 /* SIGNED */ : 2 /* NOT_SIGNED */,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === 2 /* ALLOWED */;\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER;\n        const value = currencyAmount.quotient.toString();\n        const message = allowed ? {\n          holder: account.address,\n          spender,\n          allowed,\n          nonce: nonceNumber,\n          expiry: signatureDeadline\n        } : {\n          owner: account.address,\n          spender,\n          value,\n          nonce: nonceNumber,\n          deadline: signatureDeadline\n        };\n        const domain = permitInfo.version ? {\n          name: permitInfo.name,\n          version: permitInfo.version,\n          verifyingContract: tokenAddress,\n          chainId: account.chainId\n        } : {\n          name: permitInfo.name,\n          verifyingContract: tokenAddress,\n          chainId: account.chainId\n        };\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE\n          },\n          domain,\n          primaryType: \"Permit\",\n          message\n        });\n        return provider.send(\"eth_signTypedData_v4\", [account.address, data]).then(splitSignature).then((signature) => {\n          setSignatureData({\n            v: signature.v,\n            r: signature.r,\n            s: signature.s,\n            deadline: signatureDeadline,\n            ...allowed ? { allowed } : { amount: value },\n            nonce: nonceNumber,\n            chainId: account.chainId,\n            owner: account.address,\n            spender,\n            tokenAddress,\n            permitType: permitInfo.type\n          });\n        });\n      }\n    };\n  }, [\n    isArgentWallet,\n    currencyAmount,\n    eip2612Contract,\n    account.chainId,\n    account.address,\n    transactionDeadline,\n    provider,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenNonceState.loading,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData\n  ]);\n}\n","\"use strict\";\nimport { PermitType, useERC20Permit } from \"hooks/useERC20Permit\";\nimport useTransactionDeadline from \"hooks/useTransactionDeadline\";\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO = {\n  version: \"1\",\n  name: \"Uniswap V2\",\n  type: PermitType.AMOUNT\n};\nexport function useV2LiquidityTokenPermit(liquidityAmount, spender) {\n  const transactionDeadline = useTransactionDeadline();\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO);\n}\n","\"use strict\";\nimport { CurrencyAmount, Percent } from \"@uniswap/sdk-core\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useTotalSupply } from \"hooks/useTotalSupply\";\nimport { useV2Pair } from \"hooks/useV2Pairs\";\nimport JSBI from \"jsbi\";\nimport useCurrencyBalance from \"lib/hooks/useCurrencyBalance\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { useCallback } from \"react\";\nimport { Field, typeInput } from \"state/burn/actions\";\nimport { useAppDispatch, useAppSelector } from \"state/hooks\";\nimport { Trans } from \"uniswap/src/i18n\";\nexport function useBurnState() {\n  return useAppSelector((state) => state.burn);\n}\nexport function useDerivedBurnInfo(currencyA, currencyB) {\n  const account = useAccount();\n  const { independentField, typedValue } = useBurnState();\n  const [, pair] = useV2Pair(currencyA, currencyB);\n  const userLiquidity = useCurrencyBalance(account.address, pair?.liquidityToken);\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped];\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken\n  };\n  const totalSupply = useTotalSupply(pair?.liquidityToken);\n  const liquidityValueA = pair && totalSupply && userLiquidity && tokenA && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient) ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient) : void 0;\n  const liquidityValueB = pair && totalSupply && userLiquidity && tokenB && // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient) ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient) : void 0;\n  const liquidityValues = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB\n  };\n  let percentToRemove = new Percent(\"0\", \"100\");\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, \"100\");\n  } else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken);\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient);\n      }\n    }\n  } else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField]);\n      const liquidityValue = liquidityValues[independentField];\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient);\n      }\n    }\n  }\n  const parsedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]: userLiquidity && percentToRemove && percentToRemove.greaterThan(\"0\") ? CurrencyAmount.fromRawAmount(\n      userLiquidity.currency,\n      percentToRemove.multiply(userLiquidity.quotient).quotient\n    ) : void 0,\n    [Field.CURRENCY_A]: tokenA && percentToRemove && percentToRemove.greaterThan(\"0\") && liquidityValueA ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient) : void 0,\n    [Field.CURRENCY_B]: tokenB && percentToRemove && percentToRemove.greaterThan(\"0\") && liquidityValueB ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient) : void 0\n  };\n  let error;\n  if (!account.isConnected) {\n    error = <ConnectWalletButtonText />;\n  }\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans i18nKey=\"common.noAmount.error\" />;\n  }\n  return { pair, parsedAmounts, error };\n}\nexport function useBurnActionHandlers() {\n  const dispatch = useAppDispatch();\n  const onUserInput = useCallback(\n    (field, typedValue) => {\n      dispatch(typeInput({ field, typedValue }));\n    },\n    [dispatch]\n  );\n  return {\n    onUserInput\n  };\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport {\n  InterfaceElementName,\n  InterfaceEventName,\n  LiquidityEventName,\n  LiquiditySource\n} from \"@uniswap/analytics-events\";\nimport { Percent, V2_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { computePairAddress } from \"@uniswap/v2-sdk\";\nimport { useAccountDrawer } from \"components/AccountDrawer/MiniPortfolio/hooks\";\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from \"components/Button/buttons\";\nimport { BlueCard, LightCard } from \"components/Card/cards\";\nimport CurrencyInputPanel from \"components/CurrencyInputPanel\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { ConnectWalletButtonText } from \"components/NavBar/accountCTAsExperimentUtils\";\nimport { AddRemoveTabs } from \"components/NavigationTabs\";\nimport { MinimalPositionCard } from \"components/PositionCard\";\nimport Slider from \"components/Slider\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { V2Unsupported } from \"components/V2Unsupported\";\nimport { AutoColumn, ColumnCenter } from \"components/deprecated/Column\";\nimport Row, { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { Dots } from \"components/swap/styled\";\nimport { useIsSupportedChainId } from \"constants/chains\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { ApprovalState, useApproveCallback } from \"hooks/useApproveCallback\";\nimport { usePairContract, useV2RouterContract } from \"hooks/useContract\";\nimport useDebouncedChangeHandler from \"hooks/useDebouncedChangeHandler\";\nimport { useEthersSigner } from \"hooks/useEthersSigner\";\nimport { useNetworkSupportsV2 } from \"hooks/useNetworkSupportsV2\";\nimport { useGetTransactionDeadline } from \"hooks/useTransactionDeadline\";\nimport { useV2LiquidityTokenPermit } from \"hooks/useV2LiquidityTokenPermit\";\nimport { useTheme } from \"lib/styled-components\";\nimport AppBody from \"pages/App/AppBody\";\nimport { PositionPageUnsupportedContent } from \"pages/LegacyPool/PositionPage\";\nimport { ClickableText, MaxButton, Wrapper } from \"pages/LegacyPool/styled\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { ArrowDown, Plus } from \"react-feather\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Field } from \"state/burn/actions\";\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from \"state/burn/hooks\";\nimport { useTransactionAdder } from \"state/transactions/hooks\";\nimport { TransactionType } from \"state/transactions/types\";\nimport { useUserSlippageToleranceWithDefault } from \"state/user/hooks\";\nimport { StyledInternalLink, ThemedText } from \"theme/components\";\nimport { Text } from \"ui/src\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { calculateSlippageAmount } from \"utils/calculateSlippageAmount\";\nimport { currencyId } from \"utils/currencyId\";\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(50, 1e4);\nexport default function RemoveLiquidityWrapper() {\n  const { chainId } = useAccount();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  const { currencyIdA, currencyIdB } = useParams();\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? void 0, useCurrency(currencyIdB) ?? void 0];\n  if (isSupportedChain && currencyA !== currencyB) {\n    return <RemoveLiquidity />;\n  } else {\n    return <PositionPageUnsupportedContent />;\n  }\n}\nfunction RemoveLiquidity() {\n  const navigate = useNavigate();\n  const { currencyIdA, currencyIdB } = useParams();\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? void 0, useCurrency(currencyIdB) ?? void 0];\n  const account = useAccount();\n  const signer = useEthersSigner();\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB]);\n  const theme = useTheme();\n  const trace = useTrace();\n  const accountDrawer = useAccountDrawer();\n  const { independentField, typedValue } = useBurnState();\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? void 0, currencyB ?? void 0);\n  const { onUserInput: _onUserInput } = useBurnActionHandlers();\n  const isValid = !error;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const getDeadline = useGetTransactionDeadline();\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE);\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo(\"0\") ? \"0\" : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent(\"1\", \"100\")) ? \"<1\" : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? \"\",\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? \"\",\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? \"\"\n  };\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent(\"1\"));\n  const pairContract = usePairContract(pair?.liquidityToken?.address);\n  const router = useV2RouterContract();\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\n    parsedAmounts[Field.LIQUIDITY],\n    router?.address\n  );\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router?.address);\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !signer) {\n      throw new Error(\"missing dependencies\");\n    }\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) {\n      throw new Error(\"missing liquidity amount\");\n    }\n    if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature();\n      } catch (error2) {\n        if (error2?.code !== 4001) {\n          await approveCallback();\n        }\n      }\n    } else {\n      await approveCallback();\n    }\n  }\n  const onUserInput = useCallback(\n    (field, typedValue2) => {\n      return _onUserInput(field, typedValue2);\n    },\n    [_onUserInput]\n  );\n  const onLiquidityInput = useCallback(\n    (typedValue2) => onUserInput(Field.LIQUIDITY, typedValue2),\n    [onUserInput]\n  );\n  const onCurrencyAInput = useCallback(\n    (typedValue2) => onUserInput(Field.CURRENCY_A, typedValue2),\n    [onUserInput]\n  );\n  const onCurrencyBInput = useCallback(\n    (typedValue2) => onUserInput(Field.CURRENCY_B, typedValue2),\n    [onUserInput]\n  );\n  const addTransaction = useTransactionAdder();\n  const networkSupportsV2 = useNetworkSupportsV2();\n  async function onRemove() {\n    if (account.status !== \"connected\" || !signer || !router || !networkSupportsV2) {\n      throw new Error(\"missing dependencies\");\n    }\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts;\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error(\"missing currency amounts\");\n    }\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    if (!currencyA || !currencyB) {\n      throw new Error(\"missing tokens\");\n    }\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) {\n      throw new Error(\"missing liquidity amount\");\n    }\n    const currencyBIsETH = currencyB.isNative;\n    const oneCurrencyIsETH2 = currencyA.isNative || currencyBIsETH;\n    if (!tokenA || !tokenB) {\n      throw new Error(\"could not wrap\");\n    }\n    const deadline = await getDeadline();\n    if (!deadline) {\n      throw new Error(\"could not get deadline\");\n    }\n    let methodNames, args;\n    if (approval === ApprovalState.APPROVED) {\n      if (oneCurrencyIsETH2) {\n        methodNames = [\"removeLiquidityETH\", \"removeLiquidityETHSupportingFeeOnTransferTokens\"];\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account.address,\n          deadline.toHexString()\n        ];\n      } else {\n        methodNames = [\"removeLiquidity\"];\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account.address,\n          deadline.toHexString()\n        ];\n      }\n    } else if (signatureData !== null) {\n      if (oneCurrencyIsETH2) {\n        methodNames = [\"removeLiquidityETHWithPermit\", \"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\"];\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account.address,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ];\n      } else {\n        methodNames = [\"removeLiquidityWithPermit\"];\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account.address,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ];\n      }\n    } else {\n      throw new Error(\"Attempting to confirm without approval or a signature. Please contact support.\");\n    }\n    const safeGasEstimates = await Promise.all(\n      methodNames.map(\n        (methodName) => router.estimateGas[methodName](...args).then((estimateGas) => calculateGasMargin(estimateGas)).catch((error2) => {\n          logger.info(\"RemoveLiquidity\", \"onRemove\", \"estimateGas failed\", {\n            message: error2.message,\n            methodName,\n            args\n          });\n          return void 0;\n        })\n      )\n    );\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(\n      (safeGasEstimate) => BigNumber.isBigNumber(safeGasEstimate)\n    );\n    if (indexOfSuccessfulEstimation === -1) {\n      logger.warn(\"RemoveLiquidity\", \"onRemove\", \"This transaction would fail. Please contact support.\");\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then((response) => {\n        setAttemptingTxn(false);\n        addTransaction(response, {\n          type: TransactionType.REMOVE_LIQUIDITY_V3,\n          baseCurrencyId: currencyId(currencyA),\n          quoteCurrencyId: currencyId(currencyB),\n          expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? \"0\",\n          expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? \"0\"\n        });\n        setTxHash(response.hash);\n        sendAnalyticsEvent(LiquidityEventName.REMOVE_LIQUIDITY_SUBMITTED, {\n          label: [currencyA.symbol, currencyB.symbol].join(\"/\"),\n          source: LiquiditySource.V2,\n          ...trace,\n          type: LiquiditySource.V2,\n          transaction_hash: response.hash,\n          pool_address: computePairAddress({\n            factoryAddress: V2_FACTORY_ADDRESSES[currencyA.chainId],\n            tokenA: currencyA.wrapped,\n            tokenB: currencyB.wrapped\n          })\n        });\n      }).catch((error2) => {\n        setAttemptingTxn(false);\n        logger.error(error2, {\n          tags: {\n            file: \"RemoveLiquidity\",\n            function: \"onRemove\"\n          }\n        });\n      });\n    }\n  }\n  function modalHeader() {\n    return <AutoColumn gap=\"md\" style={{ marginTop: \"20px\" }}>\n      <RowBetween align=\"flex-end\">\n        <Text fontSize={24} fontWeight=\"$medium\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={currencyA} size={24} />\n          <Text fontSize={24} fontWeight=\"$medium\" ml={10}>{currencyA?.symbol}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed><Plus size=\"16\" color={theme.neutral2} /></RowFixed>\n      <RowBetween align=\"flex-end\">\n        <Text fontSize={24} fontWeight=\"$medium\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        <RowFixed gap=\"4px\">\n          <CurrencyLogo currency={currencyB} size={24} />\n          <Text fontSize={24} fontWeight=\"$medium\" ml={10}>{currencyB?.symbol}</Text>\n        </RowFixed>\n      </RowBetween>\n      <Text fontSize={12} fontStyle=\"italic\" color=\"neutral2\" textAlign=\"left\" pt={12}><Trans\n        i18nKey=\"removeLiquidity.outputEstimated\"\n        values={{\n          allowed: allowedSlippage.toSignificant(4)\n        }}\n      /></Text>\n    </AutoColumn>;\n  }\n  function modalBottom() {\n    return <>\n      <RowBetween>\n        <Text color=\"$neutral2\" fontWeight=\"$medium\" fontSize={16}><Trans\n          i18nKey=\"removeLiquidity.uniBurned\"\n          values={{\n            a: currencyA?.symbol,\n            b: currencyB?.symbol\n          }}\n        /></Text>\n        <RowFixed>\n          <DoubleCurrencyLogo currencies={[currencyA, currencyB]} />\n          <Text fontWeight=\"$medium\" fontSize={16}>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      {pair && <>\n        <RowBetween>\n          <Text color=\"$neutral2\" fontWeight=\"$medium\" fontSize={16}><Trans i18nKey=\"common.price\" /></Text>\n          <Text fontWeight=\"$medium\" fontSize={16} color=\"$neutral1\">\n            {\"1 \"}\n            {currencyA?.symbol}\n            {\" = \"}\n            {tokenA ? pair.priceOf(tokenA).toSignificant(6) : \"-\"}\n            {\" \"}\n            {currencyB?.symbol}\n          </Text>\n        </RowBetween>\n        <RowBetween>\n          <div />\n          <Text fontWeight=\"$medium\" fontSize={16} color=\"$neutral1\">\n            {\"1 \"}\n            {currencyB?.symbol}\n            {\" = \"}\n            {tokenB ? pair.priceOf(tokenB).toSignificant(6) : \"-\"}\n            {\" \"}\n            {currencyA?.symbol}\n          </Text>\n        </RowBetween>\n      </>}\n      <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}><Text fontWeight=\"$medium\" fontSize={20}><Trans i18nKey=\"common.confirm\" /></Text></ButtonPrimary>\n    </>;\n  }\n  const pendingText = <Trans\n    i18nKey=\"removeLiquidity.pendingText\"\n    values={{\n      amtA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6),\n      symA: currencyA?.symbol,\n      amtB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6),\n      symB: currencyB?.symbol\n    }}\n  />;\n  const liquidityPercentChangeCallback = useCallback(\n    (value) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n    },\n    [onUserInput]\n  );\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative;\n  const oneCurrencyIsWETH = Boolean(\n    account.status === \"connected\" && account.chainId && WRAPPED_NATIVE_CURRENCY[account.chainId] && (currencyA && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyA) || currencyB && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyB))\n  );\n  const handleSelectCurrencyA = useCallback(\n    (currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdA}`);\n      } else {\n        navigate(`/remove/v2/${currencyId(currency)}/${currencyIdB}`);\n      }\n    },\n    [currencyIdA, currencyIdB, navigate]\n  );\n  const handleSelectCurrencyB = useCallback(\n    (currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        navigate(`/remove/v2/${currencyIdB}/${currencyId(currency)}`);\n      } else {\n        navigate(`/remove/v2/${currencyIdA}/${currencyId(currency)}`);\n      }\n    },\n    [currencyIdA, currencyIdB, navigate]\n  );\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, \"0\");\n    }\n    setTxHash(\"\");\n  }, [onUserInput, txHash]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  );\n  if (!networkSupportsV2) {\n    return <V2Unsupported />;\n  }\n  return <>\n    <AppBody>\n      <AddRemoveTabs creating={false} adding={false} autoSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE} />\n      <Wrapper>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash ? txHash : \"\"}\n          reviewContent={() => <ConfirmationModalContent\n            title={<Trans i18nKey=\"common.youWillReceive\" />}\n            onDismiss={handleDismissConfirmation}\n            topContent={modalHeader}\n            bottomContent={modalBottom}\n          />}\n          pendingText={pendingText}\n        />\n        <AutoColumn gap=\"md\">\n          <BlueCard><AutoColumn gap=\"10px\"><ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\"><Trans i18nKey=\"removeLiquidity.removingTokensTip\" /></ThemedText.DeprecatedLink></AutoColumn></BlueCard>\n          <LightCard><AutoColumn gap=\"20px\">\n            <RowBetween>\n              <Text fontWeight=\"$medium\"><Trans i18nKey=\"common.removeAmount\" /></Text>\n              <ClickableText\n                fontWeight={535}\n                onClick={() => {\n                  setShowDetailed(!showDetailed);\n                }}\n              >{showDetailed ? <Trans i18nKey=\"common.simple.label\" /> : <Trans i18nKey=\"common.detailed.label\" />}</ClickableText>\n            </RowBetween>\n            <Row style={{ alignItems: \"flex-end\" }}><Text fontSize={72} fontWeight=\"$medium\">\n              {formattedAmounts[Field.LIQUIDITY_PERCENT]}\n              {\"%\"}\n            </Text></Row>\n            {!showDetailed && <>\n              <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n              <RowBetween>\n                <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, \"25\")} width=\"20%\">25%</MaxButton>\n                <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, \"50\")} width=\"20%\">50%</MaxButton>\n                <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, \"75\")} width=\"20%\">75%</MaxButton>\n                <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, \"100\")} width=\"20%\"><Trans i18nKey=\"common.max\" /></MaxButton>\n              </RowBetween>\n            </>}\n          </AutoColumn></LightCard>\n          {!showDetailed && <>\n            <ColumnCenter><ArrowDown size=\"16\" color={theme.neutral2} /></ColumnCenter>\n            <LightCard><AutoColumn gap=\"10px\">\n              <RowBetween>\n                <Text fontSize={24} fontWeight=\"$medium\">{formattedAmounts[Field.CURRENCY_A] || \"-\"}</Text>\n                <RowFixed>\n                  <CurrencyLogo currency={currencyA} style={{ marginRight: \"12px\" }} />\n                  <Text fontSize={24} fontWeight=\"$medium\" id=\"remove-liquidity-tokena-symbol\">{currencyA?.symbol}</Text>\n                </RowFixed>\n              </RowBetween>\n              <RowBetween>\n                <Text fontSize={24} fontWeight=\"$medium\">{formattedAmounts[Field.CURRENCY_B] || \"-\"}</Text>\n                <RowFixed>\n                  <CurrencyLogo currency={currencyB} style={{ marginRight: \"12px\" }} />\n                  <Text fontSize={24} fontWeight=\"$medium\" id=\"remove-liquidity-tokenb-symbol\">{currencyB?.symbol}</Text>\n                </RowFixed>\n              </RowBetween>\n              {account.status === \"connected\" && account.chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? <RowBetween style={{ justifyContent: \"flex-end\" }}>{oneCurrencyIsETH ? <StyledInternalLink\n                to={`/remove/v2/${currencyA?.isNative && WRAPPED_NATIVE_CURRENCY[account.chainId] ? WRAPPED_NATIVE_CURRENCY[account.chainId]?.address : currencyIdA}/${currencyB?.isNative && WRAPPED_NATIVE_CURRENCY[account.chainId] ? WRAPPED_NATIVE_CURRENCY[account.chainId]?.address : currencyIdB}`}\n              >Receive WETH</StyledInternalLink> : oneCurrencyIsWETH ? <StyledInternalLink\n                to={`/remove/v2/${currencyA && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyA) ? \"ETH\" : currencyIdA}/${currencyB && WRAPPED_NATIVE_CURRENCY[account.chainId]?.equals(currencyB) ? \"ETH\" : currencyIdB}`}\n              >Receive ETH</StyledInternalLink> : null}</RowBetween> : null}\n            </AutoColumn></LightCard>\n          </>}\n          {showDetailed && <>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.LIQUIDITY]}\n              onUserInput={onLiquidityInput}\n              onMax={() => {\n                onUserInput(Field.LIQUIDITY_PERCENT, \"100\");\n              }}\n              showMaxButton={!atMaxAmount}\n              currency={pair?.liquidityToken}\n              pair={pair}\n              id=\"liquidity-amount\"\n            />\n            <ColumnCenter><ArrowDown size=\"16\" color={theme.neutral2} /></ColumnCenter>\n            <CurrencyInputPanel\n              hideBalance={true}\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onCurrencyAInput}\n              onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, \"100\")}\n              showMaxButton={!atMaxAmount}\n              currency={currencyA}\n              label=\"Output\"\n              onCurrencySelect={handleSelectCurrencyA}\n              id=\"remove-liquidity-tokena\"\n            />\n            <ColumnCenter><Plus size=\"16\" color={theme.neutral2} /></ColumnCenter>\n            <CurrencyInputPanel\n              hideBalance={true}\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onCurrencyBInput}\n              onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, \"100\")}\n              showMaxButton={!atMaxAmount}\n              currency={currencyB}\n              label=\"Output\"\n              onCurrencySelect={handleSelectCurrencyB}\n              id=\"remove-liquidity-tokenb\"\n            />\n          </>}\n          {pair && <div style={{ padding: \"10px 20px\" }}>\n            <RowBetween>\n              <Trans i18nKey=\"common.price\" />\n              {\":\"}\n              <div>\n                {\"1 \"}\n                {currencyA?.symbol}\n                {\" = \"}\n                {tokenA ? pair.priceOf(tokenA).toSignificant(6) : \"-\"}\n                {\" \"}\n                {currencyB?.symbol}\n              </div>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <div>\n                {\"1 \"}\n                {currencyB?.symbol}\n                {\" = \"}\n                {tokenB ? pair.priceOf(tokenB).toSignificant(6) : \"-\"}\n                {\" \"}\n                {currencyA?.symbol}\n              </div>\n            </RowBetween>\n          </div>}\n          <div style={{ position: \"relative\" }}>{account.status !== \"connected\" ? <Trace\n            logPress\n            eventOnTrigger={InterfaceEventName.CONNECT_WALLET_BUTTON_CLICKED}\n            properties={{ received_swap_quote: false }}\n            element={InterfaceElementName.CONNECT_WALLET_BUTTON}\n          ><ButtonLight onClick={accountDrawer.open}><ConnectWalletButtonText /></ButtonLight></Trace> : <RowBetween>\n            <ButtonConfirmed\n              onClick={onAttemptToApprove}\n              confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n              disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n              mr=\"0.5rem\"\n              fontWeight={535}\n              fontSize={16}\n            >{approval === ApprovalState.PENDING ? <Dots><Trans i18nKey=\"common.approving\" /></Dots> : approval === ApprovalState.APPROVED || signatureData !== null ? <Trans i18nKey=\"common.approved\" /> : <Trans i18nKey=\"common.approve\" />}</ButtonConfirmed>\n            <ButtonError\n              onClick={() => {\n                setShowConfirm(true);\n              }}\n              disabled={!isValid || signatureData === null && approval !== ApprovalState.APPROVED}\n              error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n            ><Text fontSize={16} fontWeight=\"$medium\">{error || <Trans i18nKey=\"common.remove.label\" />}</Text></ButtonError>\n          </RowBetween>}</div>\n        </AutoColumn>\n      </Wrapper>\n    </AppBody>\n    {pair ? <AutoColumn style={{ minWidth: \"20rem\", width: \"100%\", maxWidth: \"400px\", marginTop: \"1rem\" }}><MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} /></AutoColumn> : null}\n  </>;\n}\n","\"use strict\";\nimport { Fraction } from \"@uniswap/sdk-core\";\nconst ONE = new Fraction(1, 1);\nexport function calculateSlippageAmount(value, slippage) {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) {\n    throw new Error(\"Unexpected slippage\");\n  }\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient];\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName","StyledRangeInput","styled","input","theme","accent1","surface1","surface4","surface2","Slider","value","onChange","min","step","max","changeCallback","useCallback","e","parseInt","type","style","padding","aria-labelledby","useDebouncedChangeHandler","debouncedMs","inner","setInner","useState","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","useIsArgentWallet","account","useAccount","argentWalletDetector","useArgentWalletDetectorContract","inputs","useMemo","address","useSingleCallResult","NEVER_RELOAD","Boolean","result","PermitType","PermitType2","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","UniverseChainId","Mainnet","USDC_MAINNET","name","version","DAI","UNI","Goerli","Sepolia","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","useERC20Permit","currencyAmount","spender","transactionDeadline","overridePermitInfo","provider","useEthersWeb3Provider","tokenAddress","currency","isToken","eip2612Contract","useEIP2612Contract","isArgentWallet","nonceInputs","tokenNonceState","permitInfo","status","chainId","signatureData","setSignatureData","valid","state","gatherPermitSignature","nonceNumber","toNumber","loading","isSignatureDataValid","owner","deadline","nonce","JSBI","amount","quotient","allowed","signatureDeadline","toString","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","r","s","permitType","REMOVE_V2_LIQUIDITY_PERMIT_INFO","AMOUNT","useV2LiquidityTokenPermit","liquidityAmount","useTransactionDeadline","useBurnState","useAppSelector","burn","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","Percent","RemoveLiquidityWrapper","isSupportedChain","useIsSupportedChainId","currencyIdA","currencyIdB","useParams","currencyA","currencyB","useCurrency","RemoveLiquidity","PositionPageUnsupportedContent","parsedAmounts","pair","router","WRAPPED_NATIVE_CURRENCY","navigate","useNavigate","signer","useEthersSigner","tokenA","tokenB","wrapped","useTheme","trace","useTrace","accountDrawer","useAccountDrawer","independentField","typedValue","error","useV2Pair","userLiquidity","useCurrencyBalance","liquidityToken","tokens","Field","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","useTotalSupply","liquidityValueA","CurrencyAmount","fromRawAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","tryParseCurrencyAmount","greaterThan","liquidityValue","multiply","isConnected","ConnectWalletButtonText","Trans","i18nKey","useDerivedBurnInfo","onUserInput","_onUserInput","dispatch","useAppDispatch","field","typeInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","formattedAmounts","equalTo","lessThan","toFixed","toSignificant","atMaxAmount","pairContract","usePairContract","useV2RouterContract","approval","approveCallback","useApproveCallback","onAttemptToApprove","Error","error2","code","typedValue2","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","useTransactionAdder","networkSupportsV2","useNetworkSupportsV2","onRemove","currencyAmountA","currencyAmountB","amountsMin","calculateSlippageAmount","currencyBIsETH","isNative","oneCurrencyIsETH2","methodNames","args","ApprovalState","APPROVED","toHexString","safeGasEstimates","Promise","all","map","methodName","estimateGas","calculateGasMargin","catch","logger","info","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","warn","gasLimit","response","TransactionType","REMOVE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","sendAnalyticsEvent","LiquidityEventName","REMOVE_LIQUIDITY_SUBMITTED","label","symbol","join","LiquiditySource","V2","transaction_hash","pool_address","computePairAddress","factoryAddress","V2_FACTORY_ADDRESSES","tags","file","function","modalHeader","AutoColumn","gap","marginTop","RowBetween","align","Text","fontSize","fontWeight","RowFixed","CurrencyLogo","ml","Plus","neutral2","fontStyle","textAlign","pt","values","modalBottom","a","b","DoubleCurrencyLogo","currencies","priceOf","div","ButtonPrimary","disabled","onClick","pendingText","amtA","symA","amtB","symB","liquidityPercentChangeCallback","oneCurrencyIsETH","oneCurrencyIsWETH","equals","handleSelectCurrencyA","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","AppBody","AddRemoveTabs","creating","adding","autoSlippage","Wrapper","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","BlueCard","ThemedText","DeprecatedLink","LightCard","ClickableText","Row","alignItems","MaxButton","ColumnCenter","ArrowDown","marginRight","id","justifyContent","StyledInternalLink","to","CurrencyInputPanel","onMax","showMaxButton","hideBalance","onCurrencySelect","position","Trace","logPress","eventOnTrigger","InterfaceEventName","CONNECT_WALLET_BUTTON_CLICKED","properties","received_swap_quote","element","InterfaceElementName","CONNECT_WALLET_BUTTON","ButtonLight","open","ButtonConfirmed","confirmed","NOT_APPROVED","mr","PENDING","Dots","ButtonError","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","ONE","Fraction","slippage","subtract","add"],"sourceRoot":""}