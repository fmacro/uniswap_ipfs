{"version":3,"file":"static/js/997.bf4b8c54.chunk.js","mappings":"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","sources":["utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","pages/NotFound/index.tsx","components/Charts/LiquidityChart/renderer.tsx","components/Charts/LiquidityChart/liquidity-bar-series.tsx","components/Charts/LiquidityChart/index.tsx","components/Pools/PoolDetails/ChartSection/index.tsx","components/Pools/PoolDetails/ChartSection/hooks.ts","components/Pools/PoolDetails/shared.ts","components/Pools/PoolDetails/PoolDetailsHeader.tsx","components/Pools/PoolDetails/PoolDetailsLink.tsx","components/Pools/PoolDetails/PoolDetailsStats.tsx","components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx","components/Pools/PoolDetails/icons.tsx","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","graphql/data/pools/usePoolTransactions.ts","components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx","components/Pools/PoolDetails/PoolDetailsTable.tsx","graphql/data/pools/usePoolData.ts","pages/PoolDetails/utils.ts","pages/PoolDetails/index.tsx"],"sourcesContent":["\"use strict\";\nimport { tickToPrice } from \"@uniswap/v3-sdk\";\nimport JSBI from \"jsbi\";\nconst PRICE_FIXED_DIGITS = 8;\nexport default function computeSurroundingTicks(token0, token1, activeTickProcessed, sortedTickData, pivot, ascending) {\n  let previousTickProcessed = {\n    ...activeTickProcessed\n  };\n  let processedTicks = [];\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i]?.tick);\n    const sdkPrice = tickToPrice(token0, token1, tick);\n    const currentTickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i]?.liquidityNet ?? \"\"),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice\n    };\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i]?.liquidityNet ?? 0)\n      );\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      );\n    }\n    processedTicks.push(currentTickProcessed);\n    previousTickProcessed = currentTickProcessed;\n  }\n  if (!ascending) {\n    processedTicks = processedTicks.reverse();\n  }\n  return processedTicks;\n}\n","\"use strict\";\nimport { V3_CORE_FACTORY_ADDRESSES } from \"@uniswap/sdk-core\";\nimport { Pool, TICK_SPACINGS, tickToPrice } from \"@uniswap/v3-sdk\";\nimport { chainIdToBackendChain, useSupportedChainId } from \"constants/chains\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { PoolState, usePoolMultichain } from \"hooks/usePools\";\nimport JSBI from \"jsbi\";\nimport ms from \"ms\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useAllV3TicksQuery } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport computeSurroundingTicks from \"utils/computeSurroundingTicks\";\nconst PRICE_FIXED_DIGITS = 8;\nconst getActiveTick = (tickCurrent, feeAmount) => tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : void 0;\nconst MAX_TICK_FETCH_VALUE = 1e3;\nfunction useTicksFromSubgraph(currencyA, currencyB, feeAmount, skip = 0, chainId) {\n  const poolAddress = currencyA && currencyB && feeAmount ? Pool.getAddress(\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    feeAmount,\n    void 0,\n    chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : void 0\n  ) : void 0;\n  const supportedChainId = useSupportedChainId(chainId);\n  return useAllV3TicksQuery({\n    variables: {\n      address: poolAddress?.toLowerCase() ?? \"\",\n      chain: chainIdToBackendChain({ chainId: supportedChainId, withFallback: true }),\n      skip,\n      first: MAX_TICK_FETCH_VALUE\n    },\n    skip: !poolAddress,\n    pollInterval: ms(`30s`)\n  });\n}\nfunction useAllV3Ticks(currencyA, currencyB, feeAmount, chainId) {\n  const [skipNumber, setSkipNumber] = useState(0);\n  const [subgraphTickData, setSubgraphTickData] = useState([]);\n  const { data, error, loading: isLoading } = useTicksFromSubgraph(currencyA, currencyB, feeAmount, skipNumber, chainId);\n  const ticks = data?.v3Pool?.ticks;\n  useEffect(() => {\n    if (ticks?.length) {\n      setSubgraphTickData((tickData) => [...tickData, ...ticks]);\n      if (ticks?.length === MAX_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber2) => skipNumber2 + MAX_TICK_FETCH_VALUE);\n      }\n    }\n  }, [ticks]);\n  return {\n    isLoading: isLoading || ticks?.length === MAX_TICK_FETCH_VALUE,\n    error,\n    ticks: subgraphTickData\n  };\n}\nexport function usePoolActiveLiquidity(currencyA, currencyB, feeAmount, chainId) {\n  const account = useAccount();\n  const defaultChainId = account.chainId ?? UniverseChainId.Mainnet;\n  const pool = usePoolMultichain(currencyA?.wrapped, currencyB?.wrapped, feeAmount, chainId ?? defaultChainId);\n  const liquidity = pool[1]?.liquidity;\n  const sqrtPriceX96 = pool[1]?.sqrtRatioX96;\n  const currentTick = pool[1]?.tickCurrent;\n  const activeTick = useMemo(() => getActiveTick(currentTick, feeAmount), [currentTick, feeAmount]);\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount, chainId ?? defaultChainId);\n  return useMemo(() => {\n    if (!currencyA || !currencyB || activeTick === void 0 || pool[0] !== PoolState.EXISTS || !ticks || ticks.length === 0 || isLoading) {\n      return {\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    const token0 = currencyA?.wrapped;\n    const token1 = currencyB?.wrapped;\n    const pivot = ticks.findIndex((tickData) => tickData?.tick && tickData.tick > activeTick) - 1;\n    if (pivot < 0) {\n      logger.debug(\"usePoolTickData\", \"usePoolActiveLiquidity\", \"TickData pivot not found\", {\n        token0: token0.address,\n        token1: token1.address,\n        chainId: token0.chainId\n      });\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: void 0\n      };\n    }\n    const sdkPrice = tickToPrice(token0, token1, activeTick);\n    const activeTickProcessed = {\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot]?.tick) === activeTick ? JSBI.BigInt(ticks[pivot]?.liquidityNet ?? 0) : JSBI.BigInt(0),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice\n    };\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true);\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false);\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks);\n    return {\n      isLoading,\n      error,\n      currentTick,\n      activeTick,\n      liquidity,\n      sqrtPriceX96,\n      data: ticksProcessed\n    };\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error, currentTick, liquidity, sqrtPriceX96]);\n}\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport darkImage from \"assets/images/404-page-dark.png\";\nimport lightImage from \"assets/images/404-page-light.png\";\nimport { SmallButtonPrimary } from \"components/Button/buttons\";\nimport { useIsMobile } from \"hooks/screenSize/useIsMobile\";\nimport styled from \"lib/styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { ThemedText } from \"theme/components\";\nimport { useIsDarkMode } from \"theme/components/ThemeToggle\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { Trans } from \"uniswap/src/i18n\";\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled(Container)`\n  gap: 30px;\n`;\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`;\nexport default function NotFound() {\n  const isDarkMode = useIsDarkMode();\n  const isMobile = useIsMobile();\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero;\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge;\n  return <PageWrapper><Trace logImpression page={InterfacePageName.NOT_FOUND}>\n    <Header>\n      <Container>\n        <Title>404</Title>\n        <Paragraph color=\"neutral2\"><Trans i18nKey=\"common.pageNotFound\" /></Paragraph>\n      </Container>\n      <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\n    </Header>\n    <SmallButtonPrimary as={Link} to=\"/\"><Trans i18nKey=\"notFound.oops\" /></SmallButtonPrimary>\n  </Trace></PageWrapper>;\n}\n","\"use strict\";\nimport { calculateColumnPositionsInPlace, positionsBox } from \"components/Charts/VolumeChart/utils\";\nexport class LiquidityBarSeriesRenderer {\n  _data = null;\n  _options;\n  constructor(props) {\n    this._options = props;\n    this._options.hoveredTick = props.activeTick;\n  }\n  draw(target, priceConverter) {\n    target.useBitmapCoordinateSpace((scope) => this._drawImpl(scope, priceConverter));\n  }\n  update(data, options) {\n    this._data = data;\n    this._options = { ...this._options, ...options };\n  }\n  _drawImpl(renderingScope, priceToCoordinate) {\n    if (this._data === null || this._data.bars.length === 0 || this._data.visibleRange === null || this._options === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    const bars = this._data.bars.map((bar) => {\n      return {\n        x: bar.x,\n        y: priceToCoordinate(bar.originalData.liquidity) ?? 0,\n        tick: bar.originalData.tick\n      };\n    });\n    calculateColumnPositionsInPlace(\n      bars,\n      this._data.barSpacing,\n      renderingScope.horizontalPixelRatio,\n      this._data.visibleRange.from,\n      this._data.visibleRange.to\n    );\n    const zeroY = priceToCoordinate(0) ?? 0;\n    ctx.fillStyle = this._options.tokenAColor;\n    for (let i = this._data.visibleRange.from; i < this._data.visibleRange.to; i++) {\n      const stack = bars[i];\n      const column = stack.column;\n      const isCurrentTick = this._options.activeTick === stack.tick;\n      const isHoveredTick = this._options.hoveredTick === stack.tick;\n      if (!column) {\n        return;\n      }\n      const width = Math.min(\n        Math.max(renderingScope.horizontalPixelRatio, column.right - column.left),\n        this._data.barSpacing * renderingScope.horizontalPixelRatio\n      );\n      const margin = 0.3 * width;\n      const widthWithMargin = width - margin * 2;\n      const totalBox = positionsBox(zeroY, stack.y, renderingScope.verticalPixelRatio);\n      if (isHoveredTick) {\n        const highlightOffset = 0.3 * ctx.canvas.height;\n        const highlightLength = ctx.canvas.height - highlightOffset;\n        ctx.fillStyle = this._options.highlightColor;\n        ctx.beginPath();\n        ctx.roundRect(column.left + margin, highlightOffset, widthWithMargin, highlightLength, 8);\n        ctx.fill();\n        ctx.globalAlpha = 1;\n      } else {\n        ctx.globalAlpha = 0.4;\n      }\n      if (isCurrentTick) {\n        ctx.fillStyle = this._options.tokenBColor;\n      } else if (this._options.activeTick === void 0) {\n        ctx.fillStyle = this._options.color ?? \"white\";\n      } else if (this._options.activeTick > stack.tick) {\n        ctx.fillStyle = this._options.tokenBColor;\n      } else if (this._options.activeTick < stack.tick) {\n        ctx.fillStyle = this._options.tokenAColor;\n      }\n      ctx.beginPath();\n      ctx.roundRect(column.left + margin, totalBox.position, widthWithMargin, totalBox.length, 8);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n      if (isCurrentTick && this._options.activeTickProgress) {\n        ctx.globalCompositeOperation = \"source-atop\";\n        const activeRangeAdjustedHeight = totalBox.length * this._options.activeTickProgress;\n        const activeRangeAdjustedPosition = totalBox.position + (totalBox.length - activeRangeAdjustedHeight);\n        ctx.fillStyle = this._options.tokenAColor;\n        ctx.beginPath();\n        ctx.fillRect(column.left, activeRangeAdjustedPosition, width, activeRangeAdjustedHeight);\n        ctx.globalCompositeOperation = \"source-over\";\n      }\n    }\n  }\n}\n","\"use strict\";\nimport {\n  LiquidityBarSeriesRenderer\n} from \"components/Charts/LiquidityChart/renderer\";\nimport {\n  customSeriesDefaultOptions\n} from \"lightweight-charts\";\nexport class LiquidityBarSeries {\n  _renderer;\n  _tokenAColor;\n  _tokenBColor;\n  _highlightColor;\n  constructor(props) {\n    this._tokenAColor = props.tokenAColor;\n    this._renderer = new LiquidityBarSeriesRenderer(props);\n    this._tokenBColor = props.tokenBColor;\n    this._highlightColor = props.highlightColor;\n  }\n  priceValueBuilder(plotRow) {\n    return [0, plotRow.liquidity];\n  }\n  isWhitespace(data) {\n    return !data.liquidity;\n  }\n  renderer() {\n    return this._renderer;\n  }\n  update(data, options) {\n    this._renderer.update(data, options);\n  }\n  defaultOptions() {\n    return {\n      ...customSeriesDefaultOptions,\n      tokenAColor: this._tokenAColor,\n      tokenBColor: this._tokenBColor,\n      highlightColor: this._highlightColor\n    };\n  }\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { Pool, TICK_SPACINGS, TickMath, tickToPrice } from \"@uniswap/v3-sdk\";\nimport { ChartModel } from \"components/Charts/ChartModel\";\nimport { LiquidityBarSeries } from \"components/Charts/LiquidityChart/liquidity-bar-series\";\nimport { BigNumber } from \"ethers/lib/ethers\";\nimport { usePoolActiveLiquidity } from \"hooks/usePoolTickData\";\nimport JSBI from \"jsbi\";\nimport { useEffect, useState } from \"react\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nexport class LiquidityBarChartModel extends ChartModel {\n  series;\n  activeTick;\n  constructor(chartDiv, params) {\n    super(chartDiv, params);\n    this.series = this.api.addCustomSeries(new LiquidityBarSeries(params));\n    this.series.setData(this.data);\n    this.updateOptions(params);\n    this.fitContent();\n  }\n  updateOptions(params) {\n    super.updateOptions(params, {\n      localization: {\n        locale: params.locale\n      },\n      rightPriceScale: {\n        visible: false,\n        borderVisible: false,\n        scaleMargins: {\n          top: 0.35,\n          bottom: 0\n        },\n        autoScale: true\n      },\n      timeScale: {\n        visible: false,\n        fixLeftEdge: true,\n        fixRightEdge: true,\n        borderVisible: false\n      },\n      crosshair: {\n        horzLine: {\n          visible: false,\n          labelVisible: false\n        },\n        vertLine: {\n          visible: false,\n          labelVisible: false\n        }\n      },\n      grid: {\n        vertLines: {\n          visible: false\n        },\n        horzLines: {\n          visible: false\n        }\n      }\n    });\n    const { data, activeTick } = params;\n    this.activeTick = activeTick;\n    if (this.data !== data) {\n      this.data = data;\n      this.series.setData(data);\n      this.fitContent();\n    }\n    this.series.applyOptions({\n      priceFormat: {\n        type: \"volume\"\n      },\n      priceLineVisible: false,\n      lastValueVisible: false\n    });\n    this.series.applyOptions(params);\n  }\n  onSeriesHover(hoverData) {\n    super.onSeriesHover(hoverData);\n    const updatedOptions = { hoveredTick: hoverData?.item.tick ?? this.activeTick };\n    this.series.applyOptions(updatedOptions);\n  }\n  activeTickIndex() {\n    return this.data.findIndex((bar) => bar.tick === this.activeTick);\n  }\n  fitContent() {\n    const length = this.data.length;\n    const activeTickIndex = this.data.findIndex((bar) => bar.tick === this.activeTick);\n    const midPoint = activeTickIndex !== -1 ? activeTickIndex : length / 2;\n    this.api.timeScale().setVisibleLogicalRange({ from: Math.max(midPoint - 50, 0), to: Math.min(midPoint + 50, this.data.length) });\n  }\n}\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1);\nfunction maxAmount(token) {\n  return CurrencyAmount.fromRawAmount(token, MAX_UINT128.toString());\n}\nasync function calculateActiveRangeTokensLocked(token0, token1, feeTier, tick, poolData) {\n  if (!poolData.currentTick || !poolData.sqrtPriceX96 || !poolData.liquidity) {\n    return void 0;\n  }\n  try {\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool1 = new Pool(\n      token0,\n      token1,\n      feeTier,\n      poolData.sqrtPriceX96,\n      tick.liquidityActive,\n      poolData.currentTick,\n      mockTicks\n    );\n    const bottomOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[0].index);\n    const token1Amount = (await pool1.getOutputAmount(maxAmount(token0), bottomOfRangePrice))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const topOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[1].index);\n    const token0Amount = (await pool1.getOutputAmount(maxAmount(token1), topOfRangePrice))[0];\n    const amount1Locked = parseFloat(tick.sdkPrice.quote(token0Amount).toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nasync function calculateTokensLocked(token0, token1, feeTier, tick) {\n  try {\n    const tickSpacing = TICK_SPACINGS[feeTier];\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0)) ? tick.liquidityNet : JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"));\n    const sqrtPriceX96 = TickMath.getSqrtRatioAtTick(tick.tick);\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt(\"-1\"))\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet\n      }\n    ];\n    const pool = new Pool(token0, token1, Number(feeTier), sqrtPriceX96, tick.liquidityActive, tick.tick, mockTicks);\n    const nextSqrtX96 = TickMath.getSqrtRatioAtTick(tick.tick - tickSpacing);\n    const maxAmountToken0 = CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString());\n    const token1Amount = (await pool.getOutputAmount(maxAmountToken0, nextSqrtX96))[0];\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact());\n    const amount1Locked = parseFloat(token1Amount.toExact());\n    return { amount0Locked, amount1Locked };\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 };\n  }\n}\nexport function useLiquidityBarData({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId\n}) {\n  const { formatNumber, formatPrice } = useFormatter();\n  const activePoolData = usePoolActiveLiquidity(tokenA, tokenB, feeTier, chainId);\n  const [tickData, setTickData] = useState();\n  useEffect(() => {\n    async function formatData() {\n      const ticksProcessed = activePoolData.data;\n      if (!ticksProcessed) {\n        return;\n      }\n      let activeRangePercentage = void 0;\n      let activeRangeIndex = void 0;\n      const barData = [];\n      for (let index = 0; index < ticksProcessed.length; index++) {\n        const t = ticksProcessed[index];\n        const fakeTime = isReversed ? index * 1e3 : (ticksProcessed.length - index) * 1e3;\n        const isActive = activePoolData.activeTick === t.tick;\n        let price0 = t.sdkPrice;\n        let price1 = t.sdkPrice.invert();\n        if (isActive && activePoolData.activeTick && activePoolData.currentTick) {\n          activeRangeIndex = index;\n          activeRangePercentage = (activePoolData.currentTick - t.tick) / TICK_SPACINGS[feeTier];\n          price0 = tickToPrice(tokenA, tokenB, t.tick);\n          price1 = price0.invert();\n        }\n        const { amount0Locked, amount1Locked } = await calculateTokensLocked(tokenA, tokenB, feeTier, t);\n        barData.push({\n          tick: t.tick,\n          liquidity: parseFloat(t.liquidityActive.toString()),\n          price0: formatPrice({ price: price0, type: NumberType.SwapDetailsAmount }),\n          price1: formatPrice({ price: price1, type: NumberType.SwapDetailsAmount }),\n          time: fakeTime,\n          amount0Locked,\n          amount1Locked\n        });\n      }\n      barData?.map((entry, i) => {\n        if (i > 0) {\n          barData[i - 1].amount0Locked = entry.amount0Locked;\n          barData[i - 1].amount1Locked = entry.amount1Locked;\n        }\n      });\n      const activeRangeData = activeRangeIndex !== void 0 ? barData[activeRangeIndex] : void 0;\n      if (activeRangeIndex !== void 0 && activeRangeData) {\n        const activeTickTvl = await calculateActiveRangeTokensLocked(\n          tokenA,\n          tokenB,\n          feeTier,\n          ticksProcessed[activeRangeIndex],\n          activePoolData\n        );\n        barData[activeRangeIndex] = { ...activeRangeData, ...activeTickTvl };\n      }\n      if (!isReversed) {\n        barData.reverse();\n      }\n      setTickData({ barData: barData.filter((t) => t.liquidity > 0), activeRangeData, activeRangePercentage });\n    }\n    formatData();\n  }, [activePoolData, tokenA, tokenB, formatNumber, formatPrice, isReversed, feeTier]);\n  return { tickData, activeTick: activePoolData.activeTick, loading: activePoolData.isLoading || !tickData };\n}\n","\"use strict\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { FeeAmount } from \"@uniswap/v3-sdk\";\nimport { ChartHeader } from \"components/Charts/ChartHeader\";\nimport { Chart, refitChartContentAtom } from \"components/Charts/ChartModel\";\nimport { LiquidityBarChartModel, useLiquidityBarData } from \"components/Charts/LiquidityChart\";\nimport { ChartSkeleton } from \"components/Charts/LoadingState\";\nimport { PriceChartDelta, PriceChartModel } from \"components/Charts/PriceChart\";\nimport { VolumeChart } from \"components/Charts/VolumeChart\";\nimport { ChartType, PriceChartType } from \"components/Charts/utils\";\nimport { usePDPPriceChartData, usePDPVolumeChartData } from \"components/Pools/PoolDetails/ChartSection/hooks\";\nimport { ChartActionsContainer, DEFAULT_PILL_TIME_SELECTOR_OPTIONS } from \"components/Tokens/TokenDetails/ChartSection\";\nimport { ChartTypeDropdown } from \"components/Tokens/TokenDetails/ChartSection/ChartTypeSelector\";\nimport { DataQuality } from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { LoadingChart } from \"components/Tokens/TokenDetails/Skeleton\";\nimport {\n  DISPLAYS,\n  TimePeriodDisplay,\n  getTimePeriodFromDisplay\n} from \"components/Tokens/TokenTable/VolumeTimeFrameSelector\";\nimport { TimePeriod, gqlToCurrency, supportedChainIdFromGQLChain, toHistoryDuration } from \"graphql/data/util\";\nimport useStablecoinPrice from \"hooks/useStablecoinPrice\";\nimport { useAtomValue } from \"jotai/utils\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { EllipsisStyle, ThemedText } from \"theme/components\";\nimport { textFadeIn } from \"theme/styles\";\nimport { SegmentedControl } from \"ui/src\";\nimport { Chain, ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { Trans, t } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst PDP_CHART_HEIGHT_PX = 356;\nconst PDP_CHART_SELECTOR_OPTIONS = [ChartType.VOLUME, ChartType.PRICE, ChartType.LIQUIDITY];\nconst TimePeriodSelectorContainer = styled.div`\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`;\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`;\nconst PDPChartTypeSelector = ({\n  chartType,\n  onChartTypeChange,\n  disabledOption\n}) => <ChartTypeSelectorContainer><ChartTypeDropdown\n  options={PDP_CHART_SELECTOR_OPTIONS}\n  currentChartType={chartType}\n  onSelectOption={onChartTypeChange}\n  disabledOption={disabledOption}\n/></ChartTypeSelectorContainer>;\nfunction usePDPChartState(poolData, tokenA, tokenB, isReversed, chain, protocolVersion) {\n  const [timePeriod, setTimePeriod] = useState(TimePeriod.DAY);\n  const [chartType, setChartType] = useState(ChartType.VOLUME);\n  const isV2 = protocolVersion === ProtocolVersion.V2;\n  const isV3 = protocolVersion === ProtocolVersion.V3;\n  const isV4 = protocolVersion === ProtocolVersion.V4;\n  const variables = {\n    addressOrId: poolData?.address ?? \"\",\n    chain,\n    duration: toHistoryDuration(timePeriod),\n    isV4,\n    isV3,\n    isV2\n  };\n  const priceQuery = usePDPPriceChartData(variables, poolData, tokenA, tokenB, isReversed);\n  const volumeQuery = usePDPVolumeChartData(variables);\n  return useMemo(() => {\n    const activeQuery = (() => {\n      switch (chartType) {\n        case ChartType.PRICE:\n          return priceQuery;\n        case ChartType.VOLUME:\n          return volumeQuery;\n        case ChartType.LIQUIDITY:\n          return {\n            chartType: ChartType.LIQUIDITY,\n            entries: [],\n            loading: false,\n            dataQuality: DataQuality.VALID\n          };\n      }\n    })();\n    return {\n      timePeriod,\n      setTimePeriod,\n      setChartType,\n      activeQuery\n    };\n  }, [chartType, volumeQuery, priceQuery, timePeriod]);\n}\nexport default function ChartSection(props) {\n  const [currencyA, currencyB] = [\n    props.poolData?.token0 && gqlToCurrency(props.poolData.token0),\n    props.poolData?.token1 && gqlToCurrency(props.poolData.token1)\n  ];\n  const { setChartType, timePeriod, setTimePeriod, activeQuery } = usePDPChartState(\n    props.poolData,\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    props.isReversed,\n    props.chain ?? Chain.Ethereum,\n    props.poolData?.protocolVersion ?? ProtocolVersion.V3\n  );\n  const refitChartContent = useAtomValue(refitChartContentAtom);\n  const loading = props.loading || (activeQuery.chartType !== ChartType.LIQUIDITY ? activeQuery?.loading : false);\n  const ChartBody = (() => {\n    if (!currencyA || !currencyB || !props.poolData || !props.chain) {\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} />;\n    }\n    const selectedChartProps = {\n      ...props,\n      feeTier: Number(props.poolData.feeTier),\n      height: PDP_CHART_HEIGHT_PX,\n      timePeriod,\n      tokenA: currencyA.wrapped,\n      tokenB: currencyB.wrapped,\n      chainId: supportedChainIdFromGQLChain(props.chain) ?? UniverseChainId.Mainnet\n    };\n    if (activeQuery.chartType === ChartType.LIQUIDITY) {\n      return <LiquidityChart {...selectedChartProps} />;\n    }\n    if (activeQuery.dataQuality === DataQuality.INVALID || !currencyA || !currencyB) {\n      const errorText = loading ? void 0 : <Trans i18nKey=\"chart.error.pools\" />;\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} errorText={errorText} />;\n    }\n    const stale = activeQuery.dataQuality === DataQuality.STALE;\n    switch (activeQuery.chartType) {\n      case ChartType.PRICE:\n        return <PriceChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n      case ChartType.VOLUME:\n        return <VolumeChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />;\n    }\n  })();\n  const filteredTimeOptions = useMemo(() => {\n    if (activeQuery.chartType === ChartType.PRICE) {\n      const filtered = DEFAULT_PILL_TIME_SELECTOR_OPTIONS.filter((option) => option.value !== TimePeriodDisplay.HOUR);\n      if (timePeriod === TimePeriod.HOUR) {\n        setTimePeriod(TimePeriod.DAY);\n      }\n      return {\n        options: filtered,\n        selected: DISPLAYS[timePeriod]\n      };\n    }\n    return {\n      options: DEFAULT_PILL_TIME_SELECTOR_OPTIONS,\n      selected: DISPLAYS[timePeriod]\n    };\n  }, [activeQuery.chartType, timePeriod, setTimePeriod]);\n  const disabledChartOption = props.poolData?.protocolVersion === ProtocolVersion.V2 ? ChartType.LIQUIDITY : void 0;\n  return <div data-testid=\"pdp-chart-container\">\n    {ChartBody}\n    <ChartActionsContainer>\n      <PDPChartTypeSelector\n        chartType={activeQuery.chartType}\n        onChartTypeChange={setChartType}\n        disabledOption={disabledChartOption}\n      />\n      {activeQuery.chartType !== ChartType.LIQUIDITY && <TimePeriodSelectorContainer><SegmentedControl\n        options={filteredTimeOptions.options}\n        selectedOption={filteredTimeOptions.selected}\n        onSelectOption={(option) => {\n          const time = getTimePeriodFromDisplay(option);\n          if (time === timePeriod) {\n            refitChartContent?.();\n          } else {\n            setTimePeriod(time);\n          }\n        }}\n      /></TimePeriodSelectorContainer>}\n    </ChartActionsContainer>\n  </div>;\n}\nconst PriceDisplayContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 4px;\n`;\nconst ChartPriceText = styled(ThemedText.HeadlineMedium)`\n  ${EllipsisStyle}\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 24px !important;\n    line-height: 32px !important;\n  }\n`;\nfunction PriceChart({\n  tokenA,\n  tokenB,\n  isReversed,\n  data,\n  stale\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter();\n  const [primaryToken, referenceToken] = isReversed ? [tokenB, tokenA] : [tokenA, tokenB];\n  const params = useMemo(() => ({ data, stale, type: PriceChartType.LINE }), [data, stale]);\n  const { price: stablecoinPrice } = useStablecoinPrice(primaryToken);\n  const lastPrice = data[data.length - 1];\n  return <Chart height={PDP_CHART_HEIGHT_PX} Model={PriceChartModel} params={params}>{(crosshairData) => {\n    const displayValue = crosshairData ?? lastPrice;\n    const currencyBAmountRaw = Math.floor(\n      (displayValue.value ?? displayValue.close) * 10 ** referenceToken.decimals\n    );\n    const priceDisplay = <PriceDisplayContainer>\n      <ChartPriceText>{`1 ${primaryToken.symbol} = ${formatCurrencyAmount({\n        amount: CurrencyAmount.fromRawAmount(referenceToken, currencyBAmountRaw)\n      })} \n            ${referenceToken.symbol}`}</ChartPriceText>\n      <ChartPriceText color=\"neutral2\">{stablecoinPrice ? \"(\" + formatPrice({ price: stablecoinPrice }) + \")\" : \"\"}</ChartPriceText>\n    </PriceDisplayContainer>;\n    return <ChartHeader\n      value={priceDisplay}\n      additionalFields={<PriceChartDelta startingPrice={data[0]} endingPrice={displayValue} />}\n      valueFormatterType={NumberType.FiatTokenPrice}\n      time={crosshairData?.time}\n    />;\n  }}</Chart>;\n}\nconst FadeInHeading = styled(ThemedText.H1Medium)`\n  ${textFadeIn};\n  line-height: 32px;\n`;\nconst FadeInSubheader = styled(ThemedText.SubHeader)`\n  ${textFadeIn}\n`;\nfunction LiquidityTooltipDisplay({\n  data,\n  tokenADescriptor,\n  tokenBDescriptor,\n  currentTick\n}) {\n  const { formatNumber } = useFormatter();\n  if (!currentTick) {\n    return null;\n  }\n  const displayValue0 = data.tick >= currentTick ? formatNumber({\n    input: data.amount0Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  const displayValue1 = data.tick <= currentTick ? formatNumber({\n    input: data.amount1Locked,\n    type: NumberType.TokenQuantityStats\n  }) : 0;\n  return <>\n    <ThemedText.BodySmall>{t(\"liquidityPool.chart.tooltip.amount\", { token: tokenADescriptor, amount: displayValue0 })}</ThemedText.BodySmall>\n    <ThemedText.BodySmall>{t(\"liquidityPool.chart.tooltip.amount\", { token: tokenBDescriptor, amount: displayValue1 })}</ThemedText.BodySmall>\n  </>;\n}\nfunction LiquidityChart({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId\n}) {\n  const tokenADescriptor = tokenA.symbol ?? tokenA.name ?? t(\"common.tokenA\");\n  const tokenBDescriptor = tokenB.symbol ?? tokenB.name ?? t(\"common.tokenB\");\n  const { tickData, activeTick, loading } = useLiquidityBarData({\n    tokenA,\n    tokenB,\n    feeTier,\n    isReversed,\n    chainId\n  });\n  const theme = useTheme();\n  const params = useMemo(() => {\n    return {\n      data: tickData?.barData ?? [],\n      tokenAColor: isReversed ? theme.token1 : theme.token0,\n      tokenBColor: isReversed ? theme.token0 : theme.token1,\n      highlightColor: theme.surface3,\n      activeTick,\n      activeTickProgress: tickData?.activeRangePercentage\n    };\n  }, [activeTick, isReversed, theme, tickData]);\n  if (loading) {\n    return <LoadingChart />;\n  }\n  return <Chart\n    height={PDP_CHART_HEIGHT_PX}\n    Model={LiquidityBarChartModel}\n    params={params}\n    TooltipBody={\n      // TODO(WEB-3628): investigate potential off-by-one or subgraph issues causing calculated TVL issues on 1 bip pools\n      feeTier !== FeeAmount.LOWEST ? ({ data }) => <LiquidityTooltipDisplay\n        data={data}\n        tokenADescriptor={tokenADescriptor}\n        tokenBDescriptor={tokenBDescriptor}\n        currentTick={tickData?.activeRangeData?.tick}\n      /> : void 0\n    }\n  >{(crosshair) => {\n    const displayPoint = crosshair ?? tickData?.activeRangeData;\n    const display = <div>\n      <FadeInHeading>{`1 ${tokenADescriptor} = ${displayPoint?.price0} ${tokenBDescriptor}`}</FadeInHeading>\n      <FadeInHeading>{`1 ${tokenBDescriptor} = ${displayPoint?.price1} ${tokenADescriptor}`}</FadeInHeading>\n      {displayPoint && displayPoint.tick === activeTick && <FadeInSubheader color=\"neutral2\" paddingTop=\"4px\"><Trans i18nKey=\"pool.activeRange\" /></FadeInSubheader>}\n    </div>;\n    return <ChartHeader value={display} />;\n  }}</Chart>;\n}\n","\"use strict\";\nimport { ChartType } from \"components/Charts/utils\";\nimport {\n  DataQuality,\n  checkDataQuality,\n  withUTCTimestamp\n} from \"components/Tokens/TokenDetails/ChartSection/util\";\nimport { useMemo } from \"react\";\nimport {\n  usePoolPriceHistoryQuery,\n  usePoolVolumeHistoryQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport function usePDPPriceChartData(variables, poolData, tokenA, tokenB, isReversed) {\n  const { data, loading } = usePoolPriceHistoryQuery({ variables });\n  return useMemo(() => {\n    const { priceHistory } = data?.v2Pair ?? data?.v3Pool ?? {};\n    const referenceToken = isReversed ? tokenA : tokenB;\n    const entries = priceHistory?.filter((price) => price !== null).map((price) => {\n      const value = poolData?.token0.address === referenceToken?.address.toLowerCase() ? price?.token0Price : price?.token1Price;\n      return {\n        time: price.timestamp,\n        value,\n        open: value,\n        high: value,\n        low: value,\n        close: value\n      };\n    }) ?? [];\n    const dataQuality = loading || !priceHistory || !priceHistory.length ? DataQuality.INVALID : DataQuality.VALID;\n    return { chartType: ChartType.PRICE, entries, loading, dataQuality };\n  }, [data?.v2Pair, data?.v3Pool, isReversed, loading, poolData?.token0.address, tokenA, tokenB]);\n}\nexport function usePDPVolumeChartData(variables) {\n  const { data, loading } = usePoolVolumeHistoryQuery({ variables });\n  return useMemo(() => {\n    const { historicalVolume } = data?.v2Pair ?? data?.v3Pool ?? {};\n    const entries = historicalVolume?.filter((amt) => amt !== null).map(withUTCTimestamp) ?? [];\n    const dataQuality = checkDataQuality(entries, ChartType.VOLUME, variables.duration);\n    return { chartType: ChartType.VOLUME, entries, loading, dataQuality };\n  }, [data?.v2Pair, data?.v3Pool, loading, variables.duration]);\n}\n","\"use strict\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport styled from \"lib/styled-components\";\nexport const DetailBubble = styled(LoadingBubble)`\n  height: ${({ $height }) => $height ? `${$height}px` : \"16px\"};\n  width: ${({ $width }) => $width ? `${$width}px` : \"80px\"};\n`;\nexport const SmallDetailBubble = styled(LoadingBubble)`\n  height: 20px;\n  width: 20px;\n  border-radius: 100px;\n`;\n","\"use strict\";\nimport { Percent } from \"@uniswap/sdk-core\";\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from \"components/BreadcrumbNav\";\nimport { DropdownSelector } from \"components/DropdownSelector\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport { ReverseArrow } from \"components/Icons/ReverseArrow\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport ShareButton from \"components/Tokens/TokenDetails/ShareButton\";\nimport { ActionButtonStyle, ActionMenuFlyoutStyle } from \"components/Tokens/TokenDetails/shared\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { ChevronRight, ExternalLink as ExternalLinkIcon } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from \"theme/components\";\nimport { textFadeIn } from \"theme/styles\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { ProtocolVersion } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { Trans, t } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  &:hover {\n    // Override hover behavior from ExternalLink\n    opacity: 1;\n  }\n`;\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: 'flex-start';\n  width: 100%;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`;\nconst Badge = styled(ThemedText.LabelMicro)`\n  background: ${({ theme }) => theme.surface2};\n  padding: 2px 6px;\n  border-radius: 4px;\n`;\nconst ToggleReverseArrows = styled(ReverseArrow)`\n  ${ClickableStyle}\n  fill: ${({ theme }) => theme.neutral2};\n`;\nconst IconBubble = styled(LoadingBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nexport function PoolDetailsBreadcrumb({ chainId, poolAddress, token0, token1, loading }) {\n  const chainName = chainIdToBackendChain({ chainId, withFallback: true });\n  const exploreOrigin = `/explore/${chainName.toLowerCase()}`;\n  const poolsOrigin = `/explore/pools/${chainName.toLowerCase()}`;\n  return <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\n    <BreadcrumbNavLink to={exploreOrigin}>\n      <Trans i18nKey=\"common.explore\" />\n      {\" \"}\n      <ChevronRight size={14} />\n    </BreadcrumbNavLink>\n    <BreadcrumbNavLink to={poolsOrigin}>\n      <Trans i18nKey=\"common.pools\" />\n      {\" \"}\n      <ChevronRight size={14} />\n    </BreadcrumbNavLink>\n    {loading || !poolAddress ? <DetailBubble $width={200} /> : <CurrentPageBreadcrumb address={poolAddress} poolName={`${token0?.symbol} / ${token1?.symbol}`} />}\n  </BreadcrumbNavContainer>;\n}\nconst StyledPoolDetailsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  width: max-content;\n  align-items: center;\n`;\nconst PoolName = styled(ThemedText.HeadlineMedium)`\n  font-size: 24px !important;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 18px !important;\n    line-height: 24px !important;\n  }\n`;\nconst PoolDetailsTitle = ({\n  token0,\n  token1,\n  chainId,\n  feeTier,\n  protocolVersion,\n  toggleReversed\n}) => {\n  const { formatPercent } = useFormatter();\n  const feePercent = feeTier && formatPercent(new Percent(feeTier, BIPS_BASE * 100));\n  return <StyledPoolDetailsTitle>\n    <div><PoolName>\n      <StyledLink\n        to={getTokenDetailsURL({\n          address: token0?.address,\n          chain: chainIdToBackendChain({ chainId, withFallback: true })\n        })}\n      >{token0?.symbol}</StyledLink>\n      {\"\\xA0/\\xA0\"}\n      <StyledLink\n        to={getTokenDetailsURL({\n          address: token1?.address,\n          chain: chainIdToBackendChain({ chainId, withFallback: true })\n        })}\n      >{token1?.symbol}</StyledLink>\n    </PoolName></div>\n    {protocolVersion === ProtocolVersion.V2 && <Badge>v2</Badge>}\n    {!!feePercent && <Badge>{feePercent}</Badge>}\n    <ToggleReverseArrows data-testid=\"toggle-tokens-reverse-arrows\" onClick={toggleReversed} />\n  </StyledPoolDetailsTitle>;\n};\nconst ContractsDropdownRowContainer = styled(Row)`\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  ${EllipsisStyle}\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`;\nconst ContractsDropdownRow = ({\n  address,\n  chainId,\n  tokens\n}) => {\n  const theme = useTheme();\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const isPool = tokens.length === 2;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const isNative = address === NATIVE_CHAIN_ID;\n  const explorerUrl = chainId && address && getExplorerLink(\n    chainId,\n    address,\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  if (!chainId || !explorerUrl) {\n    return <ContractsDropdownRowContainer><DetailBubble $width={117} /></ContractsDropdownRowContainer>;\n  }\n  return <StyledExternalLink href={explorerUrl}><ContractsDropdownRowContainer>\n    <Row gap=\"sm\">\n      {isPool ? <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={24} /> : <CurrencyLogo currency={currency} size={24} />}\n      <ThemedText.BodyPrimary>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.symbol}</ThemedText.BodyPrimary>\n      <ThemedText.BodySecondary>{shortenAddress(address)}</ThemedText.BodySecondary>\n    </Row>\n    <ExternalLinkIcon size=\"16px\" stroke={theme.neutral2} />\n  </ContractsDropdownRowContainer></StyledExternalLink>;\n};\nconst ContractsModalContainer = {\n  ...ActionMenuFlyoutStyle,\n  minWidth: 235,\n  borderRadius: \"$rounded16\"\n};\nconst PoolDetailsHeaderActions = ({\n  chainId,\n  poolAddress,\n  poolName,\n  token0,\n  token1\n}) => {\n  const theme = useTheme();\n  const [contractsModalIsOpen, toggleContractsModal] = useState(false);\n  return <Row width=\"max-content\" justify=\"flex-end\" gap=\"sm\">\n    <DropdownSelector\n      isOpen={contractsModalIsOpen}\n      toggleOpen={toggleContractsModal}\n      menuLabel={chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"18px\" height=\"18px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"18px\" height=\"18px\" fill={theme.neutral1} />}\n      internalMenuItems={<>\n        <ContractsDropdownRow address={poolAddress} chainId={chainId} tokens={[token0, token1]} />\n        <ContractsDropdownRow address={token0?.address} chainId={chainId} tokens={[token0]} />\n        <ContractsDropdownRow address={token1?.address} chainId={chainId} tokens={[token1]} />\n      </>}\n      tooltipText={t(\"pool.explorers\")}\n      hideChevron\n      buttonStyle={ActionButtonStyle}\n      dropdownStyle={ContractsModalContainer}\n      adaptToSheet={false}\n    />\n    <ShareButton name={poolName} utmSource=\"share-pool\" />\n  </Row>;\n};\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${ClickableStyle}\n`;\nexport function PoolDetailsHeader({\n  chainId,\n  poolAddress,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n  loading\n}) {\n  const screenSize = useScreenSize();\n  const shouldColumnBreak = !screenSize[\"sm\"];\n  const poolName = `${token0?.symbol} / ${token1?.symbol}`;\n  const currencies = useMemo(\n    () => token0 && token1 ? [gqlToCurrency(token0), gqlToCurrency(token1)] : [],\n    [token0, token1]\n  );\n  if (loading) {\n    return <HeaderContainer data-testid=\"pdp-header-loading-skeleton\">{shouldColumnBreak ? <Column gap=\"sm\" style={{ width: \"100%\" }}>\n      <IconBubble />\n      <DetailBubble $height={40} $width={137} />\n    </Column> : <Row gap=\"sm\">\n      <IconBubble />\n      <DetailBubble $height={40} $width={137} />\n    </Row>}</HeaderContainer>;\n  }\n  return <HeaderContainer>{shouldColumnBreak ? <Column gap=\"sm\" style={{ width: \"100%\" }}>\n    <Row gap=\"md\" justify=\"space-between\">\n      {chainId && <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />}\n      <PoolDetailsHeaderActions\n        chainId={chainId}\n        poolAddress={poolAddress}\n        poolName={poolName}\n        token0={token0}\n        token1={token1}\n      />\n    </Row>\n    <PoolDetailsTitle\n      token0={token0}\n      token1={token1}\n      chainId={chainId}\n      feeTier={feeTier}\n      protocolVersion={protocolVersion}\n      toggleReversed={toggleReversed}\n    />\n  </Column> : <>\n    <Row gap=\"md\">\n      {chainId && <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />}\n      <PoolDetailsTitle\n        token0={token0}\n        token1={token1}\n        chainId={chainId}\n        feeTier={feeTier}\n        protocolVersion={protocolVersion}\n        toggleReversed={toggleReversed}\n      />\n    </Row>\n    <PoolDetailsHeaderActions\n      chainId={chainId}\n      poolAddress={poolAddress}\n      poolName={poolName}\n      token0={token0}\n      token1={token1}\n    />\n  </>}</HeaderContainer>;\n}\n","\"use strict\";\nimport { EtherscanLogo } from \"components/Icons/Etherscan\";\nimport { ExplorerIcon } from \"components/Icons/ExplorerIcon\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyAndChainLogo } from \"components/Logo/DoubleLogo\";\nimport { DetailBubble, SmallDetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport Tooltip, { TooltipSize } from \"components/Tooltip\";\nimport Row from \"components/deprecated/Row\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, gqlToCurrency } from \"graphql/data/util\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback, useState } from \"react\";\nimport { ChevronRight, Copy } from \"react-feather\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from \"theme/components\";\nimport { Trans, t } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { isAddress, shortenAddress } from \"utilities/src/addresses\";\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`;\nconst TokenTextWrapper = styled(Row)`\n  gap: 8px;\n  margin-right: 12px;\n  ${EllipsisStyle}\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`;\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`;\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`;\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`;\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`;\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`;\nexport function PoolDetailsLink({ address, chainId, tokens, loading }) {\n  const theme = useTheme();\n  const isNative = address === NATIVE_CHAIN_ID;\n  const currency = tokens[0] && gqlToCurrency(tokens[0]);\n  const [isCopied, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    const checksummedAddress = isAddress(address);\n    checksummedAddress && setCopied(checksummedAddress);\n  }, [address, setCopied]);\n  const isPool = tokens.length === 2;\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency];\n  const explorerUrl = address && chainId && getExplorerLink(\n    chainId,\n    address,\n    isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n  );\n  const navigate = useNavigate();\n  const chainName = chainIdToBackendChain({ chainId, withFallback: true });\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.address, chain: chainName }));\n    }\n  }, [navigate, tokens, isPool, chainName]);\n  const [truncateAddress, setTruncateAddress] = useState(false);\n  const onTextRender = useCallback(\n    (textRef) => {\n      if (textRef) {\n        const hasOverflow = textRef.clientWidth < textRef.scrollWidth;\n        if (hasOverflow) {\n          setTruncateAddress((prev) => prev ? \"both\" : \"start\");\n        }\n      }\n    },\n    // This callback must run after it sets truncateAddress to 'start' to see if it needs to 'both'.\n    // It checks if the textRef has overflow, and sets truncateAddress accordingly to avoid it.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [truncateAddress]\n  );\n  if (loading || !address || !chainId) {\n    return <Row gap=\"8px\" padding=\"6px 0px\">\n      <SmallDetailBubble />\n      <DetailBubble $width={117} />\n    </Row>;\n  }\n  return <Row align=\"space-between\">\n    <TokenTextWrapper\n      data-testid={isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`}\n      isClickable={!isPool}\n      onClick={handleTokenTextClick}\n      ref={onTextRender}\n    >\n      {isPool ? <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={20} /> : <CurrencyLogo currency={currency} size={20} />}\n      <TokenName>{isPool ? <Trans i18nKey=\"common.pool\" /> : tokens[0]?.name}</TokenName>\n      <SymbolText>{isPool ? `${tokens[0]?.symbol} / ${tokens[1]?.symbol}` : <Row gap=\"4px\">\n        {tokens[0]?.symbol}\n        {\" \"}\n        <ChevronRight size={16} color={theme.neutral2} />\n      </Row>}</SymbolText>\n    </TokenTextWrapper>\n    <ButtonsRow>\n      {!isNative && <Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t(\"common.copied\")}><CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>\n        {shortenAddress(address, truncateAddress ? 2 : void 0, truncateAddress === \"both\" ? 2 : void 0)}\n        <StyledCopyIcon />\n      </CopyAddress></Tooltip>}\n      {explorerUrl && <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}><ExplorerWrapper>{chainId === UniverseChainId.Mainnet ? <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral1} /> : <ExplorerIcon width=\"16px\" height=\"16px\" fill={theme.neutral1} />}</ExplorerWrapper></ExternalLink>}\n    </ButtonsRow>\n  </Row>;\n}\n","\"use strict\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DetailBubble } from \"components/Pools/PoolDetails/shared\";\nimport { DeltaArrow } from \"components/Tokens/TokenDetails/Delta\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { getTokenDetailsURL, unwrapToken } from \"graphql/data/util\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport styled, { css, useTheme } from \"lib/styled-components\";\nimport { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { nativeOnChain } from \"uniswap/src/constants/tokens\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n  }\n`;\nconst StatsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && \"-24px\"};\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`;\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    min-width: 150px;\n  }\n`;\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n  }\n`;\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`;\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`;\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`;\nconst BalanceChartSide = styled.div`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => isLeft ? leftBarChartStyles : rightBarChartStyles}\n`;\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`;\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`;\nconst PoolBalanceTokenNames = ({ token, chainId }) => {\n  const isScreenSize = useScreenSize();\n  const screenIsNotLarge = isScreenSize[\"lg\"];\n  const { formatNumber } = useFormatter();\n  const unwrappedToken = chainId ? unwrapToken(chainId, token) : token;\n  const isNative = unwrappedToken?.address === NATIVE_CHAIN_ID;\n  const currency = isNative && chainId ? nativeOnChain(chainId) : token.currency;\n  return <PoolBalanceTokenNamesContainer>\n    {!screenIsNotLarge && <CurrencyLogo currency={currency} size={20} style={{ marginRight: \"8px\" }} />}\n    {formatNumber({\n      input: token.tvl,\n      type: NumberType.TokenQuantityStats\n    })}\n    {\"\\xA0\"}\n    <StyledLink\n      to={getTokenDetailsURL({\n        address: unwrappedToken.address,\n        chain: chainIdToBackendChain({ chainId, withFallback: true })\n      })}\n    >\n      {screenIsNotLarge && <CurrencyLogo currency={currency} size={16} style={{ marginRight: \"4px\", marginLeft: \"4px\" }} />}\n      {unwrappedToken.symbol}\n    </StyledLink>\n  </PoolBalanceTokenNamesContainer>;\n};\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }) {\n  const isScreenSize = useScreenSize();\n  const screenIsNotLarge = isScreenSize[\"lg\"];\n  const theme = useTheme();\n  const currency0 = useCurrency(poolData?.token0?.address, chainId);\n  const currency1 = useCurrency(poolData?.token1?.address, chainId);\n  const [token0, token1] = useMemo(() => {\n    if (poolData && poolData.tvlToken0 && poolData.token0Price && poolData.tvlToken1 && poolData.token1Price) {\n      const fullWidth = poolData?.tvlToken0 * poolData?.token0Price + poolData?.tvlToken1 * poolData?.token1Price;\n      const token0FullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        percent: poolData?.tvlToken0 * poolData?.token0Price / fullWidth,\n        currency: currency0\n      };\n      const token1FullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        percent: poolData?.tvlToken1 * poolData?.token1Price / fullWidth,\n        currency: currency1\n      };\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData];\n    } else {\n      return [void 0, void 0];\n    }\n  }, [currency0, currency1, isReversed, poolData]);\n  if (loading || !token0 || !token1 || !poolData) {\n    return <StatsWrapper>\n      <HeaderText><StatHeaderBubble /></HeaderText>\n      {Array.from({ length: 4 }).map((_, i) => <Column gap=\"md\" key={`loading-info-row-${i}`}>\n        <DetailBubble />\n        <StatSectionBubble />\n      </Column>)}\n    </StatsWrapper>;\n  }\n  return <StatsWrapper loaded>\n    <HeaderText><Trans i18nKey=\"common.stats\" /></HeaderText>\n    <StatItemColumn>\n      <ThemedText.BodySecondary><Trans i18nKey=\"pool.balances\" /></ThemedText.BodySecondary>\n      <PoolBalanceSymbols>\n        <PoolBalanceTokenNames token={token0} chainId={chainId} />\n        <PoolBalanceTokenNames token={token1} chainId={chainId} />\n      </PoolBalanceSymbols>\n      {screenIsNotLarge && <Row data-testid=\"pool-balance-chart\">\n        <BalanceChartSide percent={token0.percent} $color={theme.token0} isLeft={true} />\n        <BalanceChartSide percent={token1.percent} $color={theme.token1} isLeft={false} />\n      </Row>}\n    </StatItemColumn>\n    {poolData?.tvlUSD && <StatItem\n      title={<Trans i18nKey=\"common.totalValueLocked\" />}\n      value={poolData.tvlUSD}\n      delta={poolData.tvlUSDChange}\n    />}\n    {poolData?.volumeUSD24H !== void 0 && <StatItem\n      title={<Trans i18nKey=\"stats.24volume\" />}\n      value={poolData.volumeUSD24H}\n      delta={poolData.volumeUSD24HChange}\n    />}\n    {poolData?.volumeUSD24H !== void 0 && poolData?.feeTier !== void 0 && <StatItem\n      title={<Trans i18nKey=\"stats.24fees\" />}\n      value={poolData.volumeUSD24H * (poolData.feeTier / 1e6)}\n    />}\n  </StatsWrapper>;\n}\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`;\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`;\nfunction StatItem({ title, value, delta }) {\n  const { formatNumber, formatDelta } = useFormatter();\n  return <StatItemColumn>\n    <ThemedText.BodySecondary>{title}</ThemedText.BodySecondary>\n    <StatsTextContainer>\n      <StatItemText>{formatNumber({\n        input: value,\n        type: NumberType.FiatTokenStats\n      })}</StatItemText>\n      {!!delta && <Row width=\"max-content\" padding=\"4px 0px\">\n        <DeltaArrow delta={delta} />\n        <ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary>\n      </Row>}\n    </StatsTextContainer>\n  </StatItemColumn>;\n}\n","\"use strict\";\nimport { Scrim } from \"components/AccountDrawer\";\nimport useMultiChainPositions from \"components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions\";\nimport { CurrencySelect } from \"components/CurrencyInputPanel/SwapCurrencyInputPanel\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { ReverseArrow } from \"components/Icons/ReverseArrow\";\nimport { SwapWrapperOuter } from \"components/swap/styled\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport TokenSafetyMessage from \"components/TokenSafety/TokenSafetyMessage\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { getPriorityWarning, StrongWarning, useTokenWarning } from \"constants/deprecatedTokenSafety\";\nimport { useTokenBalancesQuery } from \"graphql/data/apollo/AdaptiveTokenBalancesProvider\";\nimport { gqlToCurrency } from \"graphql/data/util\";\nimport { useScreenSize } from \"hooks/screenSize/useScreenSize\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport styled from \"lib/styled-components\";\nimport { Swap } from \"pages/Swap\";\nimport { useMemo, useReducer } from \"react\";\nimport { Plus, X } from \"react-feather\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { opacify } from \"theme/utils\";\nimport { Z_INDEX } from \"theme/zIndex\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { currencyId } from \"utils/currencyId\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    gap: 8px;\n    position: fixed;\n    bottom: 0px;\n    left: 0;\n    margin: 8px;\n    width: calc(100% - 16px);\n    background: ${({ theme }) => theme.surface1};\n    padding: 12px 32px;\n    border: 1px solid ${({ theme }) => theme.surface3};\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    & > :first-child {\n      margin-right: auto;\n    }\n    z-index: ${Z_INDEX.sticky};\n  }\n  @media (max-width: ${BREAKPOINTS.md}px) {\n    bottom: 56px;\n  }\n`;\nconst PoolButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 16px 12px 12px;\n  border: unset;\n  border-radius: 900px;\n  width: ${({ $open }) => $open ? \"100px\" : \"50%\"};\n  gap: 8px;\n  color: ${({ theme, $open }) => $open ? theme.neutral1 : theme.accent1};\n  background-color: ${({ theme, $open }) => $open ? theme.surface1 : opacify(12, theme.accent1)};\n  justify-content: center;\n  transition: ${({ theme }) => `width ${theme.transition.duration.medium} ${theme.transition.timing.inOut}`};\n  border: ${({ theme, $open }) => $open && `1px solid ${theme.surface3}`};\n  ${ClickableStyle}\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: ${({ $fixedWidth }) => $fixedWidth && \"120px\"};\n  }\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    display: ${({ $hideOnMobile }) => $hideOnMobile && \"none\"};\n    width: ${({ $fixedWidth }) => !$fixedWidth && \"100%\"};\n  }\n`;\nconst SwapIcon = styled(ReverseArrow)`\n  fill: ${({ theme }) => theme.accent1};\n  rotate: 90deg;\n`;\nconst ButtonBubble = styled(LoadingBubble)`\n  height: 44px;\n  width: 175px;\n  border-radius: 900px;\n`;\nconst SwapModalWrapper = styled(Column)`\n  z-index: 0;\n  gap: 24px;\n  visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  opacity: ${({ open }) => open ? \"1\" : \"0\"};\n  max-height: ${({ open }) => open ? \"100vh\" : \"0\"};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => open ? \"24px\" : \"0\"};\n\n  ${SwapWrapperOuter} {\n    &:before {\n      background-color: unset;\n    }\n  }\n\n  // Need to override the default visibility to properly hide\n  ${CurrencySelect} {\n    visibility: ${({ open }) => open ? \"visible\" : \"hidden\"};\n  }\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    position: fixed;\n    width: calc(100% - 16px);\n    padding: 0px 12px 12px;\n    border-radius: 24px;\n    max-width: 480px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${Z_INDEX.fixed};\n    background: ${({ theme }) => theme.surface1};\n    transition: ${({ theme }) => `opacity ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  }\n`;\nconst MobileBalance = styled(Column)`\n  gap: 2px;\n  display: none;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`;\nfunction findMatchingPosition(positions, token0, token1, feeTier) {\n  return positions?.find(\n    (position) => (position?.details.token0.toLowerCase() === token0?.address || position?.details.token0.toLowerCase() === token1?.address) && (position?.details.token1.toLowerCase() === token0?.address || position?.details.token1.toLowerCase() === token1?.address) && position?.details.fee == feeTier && !position.closed\n  );\n}\nexport function PoolDetailsStatsButtons({ chainId, token0, token1, feeTier, loading }) {\n  const account = useAccount();\n  const { positions: userOwnedPositions } = useMultiChainPositions(\n    account.address ?? \"\",\n    chainId ? [chainId] : void 0\n  );\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier);\n  const tokenId = position?.details.tokenId;\n  const switchChain = useSwitchChain();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const currency0 = token0 && gqlToCurrency(token0);\n  const currency1 = token1 && gqlToCurrency(token1);\n  const { data: balanceQuery } = useTokenBalancesQuery();\n  const { balance0, balance1, balance0Fiat, balance1Fiat } = useMemo(() => {\n    const filteredBalances = balanceQuery?.portfolios?.[0]?.tokenBalances?.filter(\n      (tokenBalance) => tokenBalance?.token?.chain === chainIdToBackendChain({ chainId, withFallback: true })\n    );\n    const tokenBalance0 = filteredBalances?.find((tokenBalance) => tokenBalance?.token?.address === token0?.address);\n    const tokenBalance1 = filteredBalances?.find((tokenBalance) => tokenBalance?.token?.address === token1?.address);\n    return {\n      balance0: tokenBalance0?.quantity ?? 0,\n      balance1: tokenBalance1?.quantity ?? 0,\n      balance0Fiat: tokenBalance0?.denominatedValue?.value ?? 0,\n      balance1Fiat: tokenBalance1?.denominatedValue?.value ?? 0\n    };\n  }, [balanceQuery?.portfolios, chainId, token0?.address, token1?.address]);\n  const { formatNumber } = useFormatter();\n  const formattedBalance0 = formatNumber({\n    input: balance0,\n    type: NumberType.TokenNonTx\n  });\n  const formattedBalance1 = formatNumber({\n    input: balance1,\n    type: NumberType.TokenNonTx\n  });\n  const totalFiatValue = balance0Fiat + balance1Fiat;\n  const formattedFiatValue = formatNumber({\n    input: totalFiatValue,\n    type: NumberType.PortfolioBalance\n  });\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      if (account.chainId !== chainId && chainId) {\n        await switchChain(chainId);\n      }\n      navigate(`/add/${currencyId(currency0)}/${currencyId(currency1)}/${feeTier}${tokenId ? `/${tokenId}` : \"\"}`, {\n        state: { from: location.pathname }\n      });\n    }\n  };\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false);\n  const isScreenSize = useScreenSize();\n  const screenSizeLargerThanTablet = isScreenSize[\"lg\"];\n  const isMobile = !isScreenSize[\"sm\"];\n  const token0Warning = useTokenWarning(token0?.address, chainId);\n  const token1Warning = useTokenWarning(token1?.address, chainId);\n  const priorityWarning = getPriorityWarning(token0Warning, token1Warning);\n  if (loading || !currency0 || !currency1) {\n    return <PoolDetailsStatsButtonsRow data-testid=\"pdp-buttons-loading-skeleton\">\n      <MobileBalance><ButtonBubble /></MobileBalance>\n      <ButtonBubble />\n      <ButtonBubble />\n    </PoolDetailsStatsButtonsRow>;\n  }\n  return <Column gap=\"lg\">\n    <PoolDetailsStatsButtonsRow>\n      {account.address && <MobileBalance>\n        <ThemedText.SubHeaderSmall><Trans i18nKey=\"pool.yourBalances\" /></ThemedText.SubHeaderSmall>\n        <Row gap=\"8px\">\n          <ThemedText.HeadlineSmall>\n            {formattedBalance0}\n            {\" \"}\n            {currency0.symbol}\n          </ThemedText.HeadlineSmall>\n          <ThemedText.HeadlineSmall color=\"neutral3\">|</ThemedText.HeadlineSmall>\n          <ThemedText.HeadlineSmall>\n            {formattedBalance1}\n            {\" \"}\n            {currency1.symbol}\n          </ThemedText.HeadlineSmall>\n          {Boolean(totalFiatValue) && !isMobile && <ThemedText.Caption>\n            {\"(\"}\n            {formattedFiatValue}\n            {\")\"}\n          </ThemedText.Caption>}\n        </Row>\n      </MobileBalance>}\n      <PoolButton\n        onClick={toggleSwapModalOpen}\n        $open={swapModalOpen}\n        $fixedWidth={Boolean(account.address)}\n        data-testid={`pool-details-${swapModalOpen ? \"close\" : \"swap\"}-button`}\n      >{swapModalOpen ? <>\n        {screenSizeLargerThanTablet && <X size={20} />}\n        <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\"><Trans i18nKey=\"common.close\" /></ThemedText.BodyPrimary>\n      </> : <>\n        {screenSizeLargerThanTablet && <SwapIcon />}\n        <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\"><Trans i18nKey=\"common.swap\" /></ThemedText.BodyPrimary>\n      </>}</PoolButton>\n      <PoolButton\n        onClick={handleAddLiquidity}\n        data-testid=\"pool-details-add-liquidity-button\"\n        $fixedWidth={Boolean(account.address)}\n        $hideOnMobile\n      >\n        {screenSizeLargerThanTablet && <Plus size={20} />}\n        <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\"><Trans i18nKey=\"common.addLiquidity\" /></ThemedText.BodyPrimary>\n      </PoolButton>\n    </PoolDetailsStatsButtonsRow>\n    <SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\">\n      <Swap\n        syncTabToUrl={false}\n        chainId={chainId}\n        initialInputCurrency={currency0}\n        initialOutputCurrency={currency1}\n        compact\n        disableTokenInputs={chainId !== account.chainId}\n      />\n      {Boolean(priorityWarning) && <TokenSafetyMessage\n        tokenAddress={(priorityWarning === token0Warning ? token0?.address : token1?.address) ?? \"\"}\n        warning={priorityWarning ?? StrongWarning}\n        plural={Boolean(token0Warning && token1Warning)}\n        tokenSymbol={priorityWarning === token0Warning ? token0?.symbol : token1?.symbol}\n      />}\n    </SwapModalWrapper>\n    <Scrim\n      $open={swapModalOpen && !screenSizeLargerThanTablet}\n      $maxWidth={BREAKPOINTS.lg}\n      $zIndex={Z_INDEX.sticky}\n      onClick={toggleSwapModalOpen}\n    />\n  </Column>;\n}\n","\"use strict\";\nexport const ClosedCircle = (props) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n  <g clipPath=\"url(#clip0_2958_135280)\">\n    <path\n      d=\"M6 11C8.76142 11 11 8.76142 11 6C11 3.23858 8.76142 1 6 1C3.23858 1 1 3.23858 1 6C1 8.76142 3.23858 11 6 11Z\"\n      stroke=\"#9B9B9B\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path d=\"M2.46484 2.46509L9.53484 9.53509\" stroke=\"#9B9B9B\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </g>\n  <defs><clipPath id=\"clip0_2958_135280\"><rect width=\"12\" height=\"12\" fill=\"white\" /></clipPath></defs>\n</svg>;\nexport const DoubleArrow = (props) => <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path\n  d=\"M4.00284 8.5L0.184659 4.68182L4.00284 0.863636L4.65909 1.51136L1.95739 4.21307H12.1335L9.43182 1.51136L10.0881 0.863636L13.9062 4.68182L10.0881 8.5L9.43182 7.84375L12.1335 5.15057H1.95739L4.65909 7.84375L4.00284 8.5Z\"\n  fill=\"#5E5E5E\"\n/></svg>;\n","\"use strict\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { ClosedCircle, DoubleArrow } from \"components/Pools/PoolDetails/icons\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { useCurrency } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useSwitchChain } from \"hooks/useSwitchChain\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { useCallback } from \"react\";\nimport { AlertTriangle } from \"react-feather\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { BREAKPOINTS } from \"theme\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { BIPS_BASE } from \"uniswap/src/constants/misc\";\nimport { Trans, useTranslation } from \"uniswap/src/i18n\";\nimport { useFormatter } from \"utils/formatNumbers\";\nconst PositionTableWrapper = styled(Column)`\n  gap: 24px;\n  margin-top: 24px;\n  width: 100%;\n`;\nconst PositionWrapper = styled(Column)`\n  gap: 4px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 12px;\n  width: 100%;\n  ${ClickableStyle}\n  padding: 16px;\n`;\nconst FeeTier = styled(ThemedText.LabelMicro)`\n  padding: 4px 6px;\n  background: ${({ theme }) => theme.surface2};\n`;\nconst StatusWrapper = styled(Row)`\n  gap: 8px;\n  width: max-content;\n  margin-right: 0;\n  margin-left: auto;\n  color: ${({ theme, status }) => status === \"In range\" /* IN_RANGE */ ? theme.success : status === \"Out of range\" /* OUT_OF_RANGE */ ? theme.deprecated_accentWarning : theme.neutral2};\n`;\nconst RangeWrapper = styled(Row)`\n  gap: 10px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: column;\n    gap: 4px;\n    align-items: flex-start;\n  }\n`;\nconst StyledDoubleArrow = styled(DoubleArrow)`\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`;\nconst RangeText = styled(ThemedText.Caption)`\n  width: max-content;\n  white-space: nowrap;\n`;\nconst StyledDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.success};\n`;\nvar PositionStatus = /* @__PURE__ */ ((PositionStatus2) => {\n  PositionStatus2[\"IN_RANGE\"] = \"In range\";\n  PositionStatus2[\"OUT_OF_RANGE\"] = \"Out of range\";\n  PositionStatus2[\"CLOSED\"] = \"Closed\";\n  return PositionStatus2;\n})(PositionStatus || {});\nfunction PositionRow({ positionInfo }) {\n  const { t } = useTranslation();\n  const tokens = [\n    useCurrency(positionInfo.details.token0, positionInfo.chainId),\n    useCurrency(positionInfo.details.token1, positionInfo.chainId)\n  ];\n  const account = useAccount();\n  const navigate = useNavigate();\n  const switchChain = useSwitchChain();\n  const theme = useTheme();\n  const { formatTickPrice } = useFormatter();\n  const onClick = useCallback(async () => {\n    if (account.chainId !== positionInfo.chainId) {\n      await switchChain(positionInfo.chainId);\n    }\n    navigate(\"/pool/\" + positionInfo.details.tokenId);\n  }, [navigate, positionInfo.chainId, positionInfo.details.tokenId, switchChain, account.chainId]);\n  const status = positionInfo.inRange ? \"In range\" /* IN_RANGE */ : positionInfo.closed ? \"Closed\" /* CLOSED */ : \"Out of range\" /* OUT_OF_RANGE */;\n  const priceUpper = positionInfo.position.token0PriceLower.invert();\n  const priceLower = positionInfo.position.token0PriceUpper.invert();\n  const ticksAtLimit = {\n    LOWER: parseFloat(priceLower.toFixed(0)) === 0,\n    UPPER: parseFloat(priceUpper.toFixed(0)) > Number.MAX_SAFE_INTEGER\n  };\n  return <PositionWrapper onClick={onClick}>\n    <Row gap=\"8px\">\n      <DoubleCurrencyLogo currencies={tokens} size={16} />\n      <ThemedText.SubHeader>\n        {positionInfo.pool.token0.symbol}\n        {\"/\"}\n        {positionInfo.pool.token1.symbol}\n      </ThemedText.SubHeader>\n      <FeeTier>\n        {positionInfo.pool.fee / BIPS_BASE}\n        {\"%\"}\n      </FeeTier>\n      <StatusWrapper status={status}>\n        <ThemedText.Caption color=\"inherit\">{status}</ThemedText.Caption>\n        {status === \"In range\" /* IN_RANGE */ && <StyledDot />}\n        {status === \"Out of range\" /* OUT_OF_RANGE */ && <AlertTriangle size={12} color={theme.deprecated_accentWarning} />}\n        {status === \"Closed\" /* CLOSED */ && <ClosedCircle />}\n      </StatusWrapper>\n    </Row>\n    <RangeWrapper>\n      <RangeText data-testid={`position-min-${priceLower.toFixed(0)}`}>\n        <Trans i18nKey=\"pool.min.label\" />\n        {\"\\xA0\"}\n        {t(\"liquidityPool.positions.price\", {\n          amountWithSymbol: `${formatTickPrice({\n            price: priceLower,\n            atLimit: ticksAtLimit,\n            direction: Bound.LOWER\n          })} ${positionInfo.pool.token0.symbol}`,\n          outputToken: positionInfo.pool.token1.symbol\n        })}\n      </RangeText>\n      <StyledDoubleArrow />\n      <RangeText data-testid={`position-max-${priceUpper.toFixed(0)}`}>\n        <Trans i18nKey=\"pool.max.label\" />\n        {\"\\xA0\"}\n        {t(\"liquidityPool.positions.price\", {\n          amountWithSymbol: `${formatTickPrice({\n            price: priceUpper,\n            atLimit: ticksAtLimit,\n            direction: Bound.UPPER\n          })} ${positionInfo.pool.token0.symbol}`,\n          outputToken: positionInfo.pool.token1.symbol\n        })}\n      </RangeText>\n    </RangeWrapper>\n  </PositionWrapper>;\n}\nexport function PoolDetailsPositionsTable({ positions }) {\n  return <PositionTableWrapper>{positions.map((position, index) => <PositionRow positionInfo={position} key={`pool-position-${index}`} />)}</PositionTableWrapper>;\n}\n","\"use strict\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport { useCallback, useMemo, useRef } from \"react\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport {\n  PoolTransactionType,\n  ProtocolVersion,\n  useV2PairTransactionsQuery,\n  useV3PoolTransactionsQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nexport var PoolTableTransactionType = /* @__PURE__ */ ((PoolTableTransactionType2) => {\n  PoolTableTransactionType2[\"BUY\"] = \"Buy\";\n  PoolTableTransactionType2[\"SELL\"] = \"Sell\";\n  PoolTableTransactionType2[\"REMOVE\"] = \"Remove\";\n  PoolTableTransactionType2[\"ADD\"] = \"Add\";\n  return PoolTableTransactionType2;\n})(PoolTableTransactionType || {});\nconst PoolTransactionDefaultQuerySize = 25;\nexport function usePoolTransactions(address, chainId, filter = [\n  \"Buy\" /* BUY */,\n  \"Sell\" /* SELL */,\n  \"Remove\" /* REMOVE */,\n  \"Add\" /* ADD */\n], token0, protocolVersion = ProtocolVersion.V3, first = PoolTransactionDefaultQuerySize) {\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3\n  } = useV3PoolTransactionsQuery({\n    variables: { first, chain: chainIdToBackendChain({ chainId, withFallback: true }), address },\n    skip: protocolVersion !== ProtocolVersion.V3\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2\n  } = useV2PairTransactionsQuery({\n    variables: { first, chain: chainIdToBackendChain({ chainId, withFallback: true }), address },\n    skip: !chainId || protocolVersion !== ProtocolVersion.V2\n  });\n  const loadingMore = useRef(false);\n  const { transactions, loading, fetchMore, error } = protocolVersion === ProtocolVersion.V3 ? { transactions: dataV3?.v3Pool?.transactions, loading: loadingV3, fetchMore: fetchMoreV3, error: errorV3 } : { transactions: dataV2?.v2Pair?.transactions, loading: loadingV2, fetchMore: fetchMoreV2, error: errorV2 };\n  const loadMore = useCallback(\n    ({ onComplete }) => {\n      if (loadingMore.current) {\n        return;\n      }\n      loadingMore.current = true;\n      fetchMore({\n        variables: {\n          cursor: transactions?.[transactions.length - 1]?.timestamp\n        },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          onComplete?.();\n          const mergedData = protocolVersion === ProtocolVersion.V3 ? {\n            v3Pool: {\n              ...fetchMoreResult.v3Pool,\n              transactions: [\n                ...prev.v3Pool?.transactions ?? [],\n                ...fetchMoreResult.v3Pool.transactions\n              ]\n            }\n          } : {\n            v2Pair: {\n              ...fetchMoreResult.v2Pair,\n              transactions: [\n                ...prev.v2Pair?.transactions ?? [],\n                ...fetchMoreResult.v2Pair.transactions\n              ]\n            }\n          };\n          loadingMore.current = false;\n          return mergedData;\n        }\n      });\n    },\n    [fetchMore, transactions, protocolVersion]\n  );\n  const filteredTransactions = useMemo(() => {\n    return (transactions ?? [])?.map((tx) => {\n      if (!tx) {\n        return void 0;\n      }\n      const tokenIn = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1;\n      const token0Address = token0?.address === NATIVE_CHAIN_ID ? WRAPPED_NATIVE_CURRENCY[chainId ?? UniverseChainId.Mainnet]?.address : token0?.address;\n      const isSell = tokenIn?.address?.toLowerCase() === token0Address?.toLowerCase();\n      const type = tx.type === PoolTransactionType.Swap ? isSell ? \"Sell\" /* SELL */ : \"Buy\" /* BUY */ : tx.type === PoolTransactionType.Remove ? \"Remove\" /* REMOVE */ : \"Add\" /* ADD */;\n      if (!filter.includes(type)) {\n        return void 0;\n      }\n      return {\n        timestamp: tx.timestamp,\n        transaction: tx.hash,\n        pool: {\n          token0: {\n            id: tx.token0.address ?? \"\",\n            symbol: tx.token0.symbol ?? \"\"\n          },\n          token1: {\n            id: tx.token1.address ?? \"\",\n            symbol: tx.token1.symbol ?? \"\"\n          }\n        },\n        maker: tx.account,\n        amount0: parseFloat(tx.token0Quantity),\n        amount1: parseFloat(tx.token1Quantity),\n        amountUSD: tx.usdValue.value,\n        type\n      };\n    }).filter((value) => value !== void 0);\n  }, [transactions, token0?.address, chainId, filter]);\n  return useMemo(() => {\n    return {\n      transactions: filteredTransactions,\n      loading,\n      loadMore,\n      error\n    };\n  }, [filteredTransactions, loading, loadMore, error]);\n}\n","\"use strict\";\nimport { createColumnHelper } from \"@tanstack/react-table\";\nimport Row from \"components/deprecated/Row\";\nimport { Table } from \"components/Table\";\nimport { Cell } from \"components/Table/Cell\";\nimport { Filter } from \"components/Table/Filter\";\nimport { FilterHeaderRow, HeaderArrow, HeaderSortText, TimestampCell } from \"components/Table/styled\";\nimport { useChainFromUrlParam } from \"constants/chains\";\nimport { NATIVE_CHAIN_ID } from \"constants/tokens\";\nimport {\n  PoolTableTransactionType,\n  usePoolTransactions\n} from \"graphql/data/pools/usePoolTransactions\";\nimport { getSupportedGraphQlChain, OrderDirection, supportedChainIdFromGQLChain } from \"graphql/data/util\";\nimport { useActiveLocalCurrency } from \"hooks/useActiveLocalCurrency\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useReducer, useRef, useState } from \"react\";\nimport { ExternalLink, ThemedText } from \"theme/components\";\nimport { WRAPPED_NATIVE_CURRENCY } from \"uniswap/src/constants/tokens\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`;\nconst TableWrapper = styled.div`\n  min-height: 256px;\n`;\nvar PoolTransactionColumn = /* @__PURE__ */ ((PoolTransactionColumn2) => {\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Timestamp\"] = 0] = \"Timestamp\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"Type\"] = 1] = \"Type\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"MakerAddress\"] = 2] = \"MakerAddress\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"FiatValue\"] = 3] = \"FiatValue\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"InputAmount\"] = 4] = \"InputAmount\";\n  PoolTransactionColumn2[PoolTransactionColumn2[\"OutputAmount\"] = 5] = \"OutputAmount\";\n  return PoolTransactionColumn2;\n})(PoolTransactionColumn || {});\nconst PoolTransactionColumnWidth = {\n  [0 /* Timestamp */]: 120,\n  [1 /* Type */]: 144,\n  [2 /* MakerAddress */]: 100,\n  [3 /* FiatValue */]: 125,\n  [4 /* InputAmount */]: 125,\n  [5 /* OutputAmount */]: 125\n};\nfunction comparePoolTokens(tokenA, tokenB) {\n  if (tokenB?.address === NATIVE_CHAIN_ID) {\n    const chainId = supportedChainIdFromGQLChain(tokenB.chain);\n    return chainId && tokenA.id.toLowerCase() === WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase();\n  }\n  return tokenA.id.toLowerCase() === tokenB?.address?.toLowerCase();\n}\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const chain = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true });\n  const activeLocalCurrency = useActiveLocalCurrency();\n  const { formatNumber, formatFiatPrice } = useFormatter();\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false);\n  const filterAnchorRef = useRef(null);\n  const [filter, setFilters] = useState([\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.REMOVE,\n    PoolTableTransactionType.ADD\n  ]);\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chain.id,\n    filter,\n    token0,\n    protocolVersion\n  );\n  const showLoadingSkeleton = loading || !!error;\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper();\n    return [\n      columnHelper.accessor((row) => row, {\n        id: \"timestamp\",\n        header: () => <Cell minWidth={PoolTransactionColumnWidth[0 /* Timestamp */]} justifyContent=\"flex-start\"><Row gap=\"4px\">\n          <HeaderArrow direction={OrderDirection.Desc} />\n          <HeaderSortText active><Trans i18nKey=\"common.time\" /></HeaderSortText>\n        </Row></Cell>,\n        cell: (row) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[0 /* Timestamp */]}\n          justifyContent=\"flex-start\"\n        ><TimestampCell\n          timestamp={Number(row.getValue?.().timestamp)}\n          link={getExplorerLink(chain.id, row.getValue?.().transaction, ExplorerDataType.TRANSACTION)}\n        /></Cell>\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text;\n          if (row.type === PoolTableTransactionType.BUY) {\n            color = \"success\";\n            text = <span>\n              <Trans i18nKey=\"common.buy.label\" />\n              {\"\\xA0\"}\n              {token0?.symbol}\n            </span>;\n          } else if (row.type === PoolTableTransactionType.SELL) {\n            color = \"critical\";\n            text = <span>\n              <Trans i18nKey=\"common.sell.label\" />\n              {\"\\xA0\"}\n              {token0?.symbol}\n            </span>;\n          } else {\n            color = row.type === PoolTableTransactionType.ADD ? \"success\" : \"critical\";\n            text = row.type === PoolTableTransactionType.ADD ? <Trans i18nKey=\"common.add.label\" /> : <Trans i18nKey=\"common.remove.label\" />;\n          }\n          return <ThemedText.BodyPrimary color={color}>{text}</ThemedText.BodyPrimary>;\n        },\n        {\n          id: \"swap-type\",\n          header: () => <Cell minWidth={PoolTransactionColumnWidth[1 /* Type */]} justifyContent=\"flex-start\"><FilterHeaderRow clickable={filterModalIsOpen} onPress={() => toggleFilterModal()} ref={filterAnchorRef}>\n            <Filter\n              allFilters={Object.values(PoolTableTransactionType)}\n              activeFilter={filter}\n              setFilters={setFilters}\n              isOpen={filterModalIsOpen}\n              toggleFilterModal={toggleFilterModal}\n              anchorRef={filterAnchorRef}\n            />\n            <ThemedText.BodySecondary><Trans i18nKey=\"common.type.label\" /></ThemedText.BodySecondary>\n          </FilterHeaderRow></Cell>,\n          cell: (PoolTransactionTableType) => <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[1 /* Type */]}\n            justifyContent=\"flex-start\"\n          >{PoolTransactionTableType.getValue?.()}</Cell>\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: \"fiat-value\",\n        header: () => <Cell minWidth={PoolTransactionColumnWidth[3 /* FiatValue */]} justifyContent=\"flex-end\" grow><ThemedText.BodySecondary>{activeLocalCurrency}</ThemedText.BodySecondary></Cell>,\n        cell: (fiat) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[3 /* FiatValue */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodyPrimary>{formatFiatPrice({ price: fiat.getValue?.() })}</ThemedText.BodyPrimary></Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount0 : row.amount1, {\n        id: \"input-amount\",\n        header: () => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[4 /* InputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodySecondary>{token0?.symbol}</ThemedText.BodySecondary></Cell>,\n        cell: (inputTokenAmount) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[4 /* InputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodyPrimary>{formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}</ThemedText.BodyPrimary></Cell>\n      }),\n      columnHelper.accessor((row) => comparePoolTokens(row.pool.token0, token0) ? row.amount1 : row.amount0, {\n        id: \"output-amount\",\n        header: () => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[5 /* OutputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodySecondary>{token1?.symbol}</ThemedText.BodySecondary></Cell>,\n        cell: (outputTokenAmount) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[5 /* OutputAmount */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodyPrimary>{formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}</ThemedText.BodyPrimary></Cell>\n      }),\n      columnHelper.accessor((row) => row.maker, {\n        id: \"maker-address\",\n        header: () => <Cell\n          minWidth={PoolTransactionColumnWidth[2 /* MakerAddress */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><ThemedText.BodySecondary><Trans i18nKey=\"common.wallet.label\" /></ThemedText.BodySecondary></Cell>,\n        cell: (makerAddress) => <Cell\n          loading={showLoadingSkeleton}\n          minWidth={PoolTransactionColumnWidth[2 /* MakerAddress */]}\n          justifyContent=\"flex-end\"\n          grow\n        ><StyledExternalLink href={getExplorerLink(chain.id, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}><ThemedText.BodyPrimary>{shortenAddress(makerAddress.getValue?.(), 0)}</ThemedText.BodyPrimary></StyledExternalLink></Cell>\n      })\n    ];\n  }, [\n    activeLocalCurrency,\n    chain.id,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    showLoadingSkeleton,\n    token0,\n    token1?.symbol\n  ]);\n  return <TableWrapper data-testid=\"pool-details-transactions-table\"><Table\n    columns={columns}\n    data={transactions}\n    loading={loading}\n    error={error}\n    loadMore={loadMore}\n    maxHeight={600}\n  /></TableWrapper>;\n}\n","\"use strict\";\nimport { Pool } from \"@uniswap/v3-sdk\";\nimport useMultiChainPositions from \"components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions\";\nimport { PoolDetailsPositionsTable } from \"components/Pools/PoolDetails/PoolDetailsPositionsTable\";\nimport { PoolDetailsTransactionsTable } from \"components/Pools/PoolDetails/PoolDetailsTransactionsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { useChainFromUrlParam } from \"constants/chains\";\nimport { getSupportedGraphQlChain } from \"graphql/data/util\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled from \"lib/styled-components\";\nimport { useMemo, useState } from \"react\";\nimport { ClickableStyle, ThemedText } from \"theme/components\";\nimport { Trans } from \"uniswap/src/i18n\";\nvar PoolDetailsTableTabs = /* @__PURE__ */ ((PoolDetailsTableTabs2) => {\n  PoolDetailsTableTabs2[\"TRANSACTIONS\"] = \"transactions\";\n  PoolDetailsTableTabs2[\"POSITIONS\"] = \"positions\";\n  return PoolDetailsTableTabs2;\n})(PoolDetailsTableTabs || {});\nconst TableHeader = styled(ThemedText.HeadlineMedium)`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`;\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion\n}) {\n  const [activeTable, setActiveTable] = useState(\"transactions\" /* TRANSACTIONS */);\n  const chain = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true });\n  const account = useAccount();\n  const { positions } = useMultiChainPositions(account.address ?? \"\", [chain.id]);\n  const positionsInThisPool = useMemo(\n    () => positions?.filter(\n      (position) => Pool.getAddress(position.pool.token0, position.pool.token1, position.pool.fee).toLowerCase() === poolAddress.toLowerCase()\n    ) ?? [],\n    [poolAddress, positions]\n  );\n  return <Column gap=\"lg\">\n    <Row gap=\"16px\">\n      <TableHeader\n        active={activeTable === \"transactions\" /* TRANSACTIONS */}\n        onClick={() => setActiveTable(\"transactions\" /* TRANSACTIONS */)}\n        disabled={!positionsInThisPool.length}\n      ><Trans i18nKey=\"common.transactions\" /></TableHeader>\n      {Boolean(positionsInThisPool.length) && <TableHeader\n        active={activeTable === \"positions\" /* POSITIONS */}\n        onClick={() => setActiveTable(\"positions\" /* POSITIONS */)}\n      >\n        <Trans i18nKey=\"pool.positions\" />\n        {` (${positionsInThisPool?.length})`}\n      </TableHeader>}\n    </Row>\n    {activeTable === \"transactions\" /* TRANSACTIONS */ ? <PoolDetailsTransactionsTable\n      poolAddress={poolAddress}\n      token0={token0}\n      token1={token1}\n      protocolVersion={protocolVersion}\n    /> : <PoolDetailsPositionsTable positions={positionsInThisPool} />}\n  </Column>;\n}\n","\"use strict\";\nimport { chainIdToBackendChain } from \"constants/chains\";\nimport { V2_BIPS } from \"graphql/data/pools/useTopPools\";\nimport ms from \"ms\";\nimport { useMemo } from \"react\";\nimport {\n  useV2PairQuery,\n  useV3PoolQuery\n} from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nfunction calc24HVolChange(historicalVolume) {\n  if (!historicalVolume) {\n    return void 0;\n  }\n  const currentTime = (/* @__PURE__ */ new Date()).getTime();\n  const dayAgo = (currentTime - ms(\"1d\")) / 1e3;\n  const twoDaysAgo = (currentTime - ms(\"2d\")) / 1e3;\n  const volume24h = historicalVolume.filter((entry) => entry?.timestamp !== void 0 && entry.timestamp >= dayAgo).reduce((acc, cur) => acc + cur.value, 0);\n  const volume48h = historicalVolume.filter(\n    (entry) => entry?.timestamp !== void 0 && entry.timestamp >= twoDaysAgo && entry.timestamp < dayAgo\n  ).reduce((acc, cur) => acc + cur.value, 0);\n  return (volume24h - volume48h) / volume48h * 100;\n}\nexport function usePoolData(poolAddress, chainId) {\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3\n  } = useV3PoolQuery({\n    variables: { chain: chainIdToBackendChain({ chainId, withFallback: true }), address: poolAddress },\n    errorPolicy: \"all\"\n  });\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2\n  } = useV2PairQuery({\n    variables: { chain: chainIdToBackendChain({ chainId, withFallback: true }), address: poolAddress },\n    skip: !chainId,\n    errorPolicy: \"all\"\n  });\n  return useMemo(() => {\n    const anyError = Boolean(errorV3 || errorV2);\n    const anyLoading = Boolean(loadingV3 || loadingV2);\n    const pool = dataV3?.v3Pool ?? dataV2?.v2Pair ?? void 0;\n    const feeTier = dataV3?.v3Pool?.feeTier ?? V2_BIPS;\n    return {\n      data: pool ? {\n        address: pool.address,\n        txCount: pool.txCount,\n        protocolVersion: pool.protocolVersion,\n        token0: pool.token0,\n        tvlToken0: pool.token0Supply,\n        token0Price: pool.token0?.project?.markets?.[0]?.price?.value,\n        token1: pool.token1,\n        tvlToken1: pool.token1Supply,\n        token1Price: pool.token1?.project?.markets?.[0]?.price?.value,\n        feeTier,\n        volumeUSD24H: pool.volume24h?.value,\n        volumeUSD24HChange: calc24HVolChange(pool.historicalVolume?.concat()),\n        tvlUSD: pool.totalLiquidity?.value,\n        tvlUSDChange: pool.totalLiquidityPercentChange24h?.value\n      } : void 0,\n      error: anyError,\n      loading: anyLoading\n    };\n  }, [dataV2?.v2Pair, dataV3?.v3Pool, errorV2, errorV3, loadingV2, loadingV3]);\n}\n","\"use strict\";\nimport { t } from \"uniswap/src/i18n\";\nexport const getPoolDetailPageTitle = (poolData) => {\n  const token0Symbol = poolData?.token0.symbol;\n  const token1Symbol = poolData?.token1.symbol;\n  const baseTitle = t(\"common.buyAndSell\");\n  if (!token0Symbol || !token1Symbol) {\n    return baseTitle;\n  }\n  return `${token0Symbol}/${token1Symbol}: ${baseTitle}`;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport ChartSection from \"components/Pools/PoolDetails/ChartSection\";\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from \"components/Pools/PoolDetails/PoolDetailsHeader\";\nimport { PoolDetailsLink } from \"components/Pools/PoolDetails/PoolDetailsLink\";\nimport { PoolDetailsStats } from \"components/Pools/PoolDetails/PoolDetailsStats\";\nimport { PoolDetailsStatsButtons } from \"components/Pools/PoolDetails/PoolDetailsStatsButtons\";\nimport { PoolDetailsTableTab } from \"components/Pools/PoolDetails/PoolDetailsTable\";\nimport Column from \"components/deprecated/Column\";\nimport Row from \"components/deprecated/Row\";\nimport { useChainFromUrlParam } from \"constants/chains\";\nimport { usePoolData } from \"graphql/data/pools/usePoolData\";\nimport { getSupportedGraphQlChain, gqlToCurrency, unwrapToken } from \"graphql/data/util\";\nimport { useColor } from \"hooks/useColor\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport NotFound from \"pages/NotFound\";\nimport { getPoolDetailPageTitle } from \"pages/PoolDetails/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { useParams } from \"react-router-dom\";\nimport { Text } from \"rebass\";\nimport { BREAKPOINTS, ThemeProvider } from \"theme\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { isAddress } from \"utilities/src/addresses\";\nconst PageWrapper = styled(Row)`\n  padding: 0 16px 52px;\n  justify-content: center;\n  width: 100%;\n  gap: 40px;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    padding: 48px 20px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    gap: 60px;\n  }\n`;\nconst LeftColumn = styled(Column)`\n  gap: 40px;\n  max-width: 780px;\n  overflow: hidden;\n  justify-content: flex-start;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n    max-width: unset;\n  }\n`;\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n`;\nconst RightColumn = styled(Column)`\n  gap: 24px;\n  width: 360px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    margin: 44px 0px;\n    width: 100%;\n    min-width: unset;\n    & > *:first-child {\n      margin-top: -24px;\n    }\n  }\n`;\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    padding: unset;\n  }\n`;\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`;\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`;\nfunction getUnwrappedPoolToken(poolData, chainId) {\n  return poolData?.token0 && poolData?.token1 && chainId ? [unwrapToken(chainId, poolData?.token0), unwrapToken(chainId, poolData?.token1)] : [void 0, void 0];\n}\nexport default function PoolDetailsPage() {\n  const { poolAddress } = useParams();\n  const chainInfo = getSupportedGraphQlChain(useChainFromUrlParam());\n  const { data: poolData, loading } = usePoolData(poolAddress?.toLowerCase() ?? \"\", chainInfo?.id);\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false);\n  const unwrappedTokens = getUnwrappedPoolToken(poolData, chainInfo?.id);\n  const [token0, token1] = isReversed ? [unwrappedTokens?.[1], unwrappedTokens?.[0]] : unwrappedTokens;\n  const { darkMode, surface2, accent1 } = useTheme();\n  const color0 = useColor(token0 && gqlToCurrency(token0), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const color1 = useColor(token1 && gqlToCurrency(token1), {\n    backgroundColor: surface2,\n    darkMode\n  });\n  const isInvalidPool = !poolAddress || !chainInfo || !isAddress(poolAddress);\n  const poolNotFound = !loading && !poolData || isInvalidPool;\n  const metatagProperties = useMemo(() => {\n    const token0Symbol = poolData?.token0.symbol;\n    const token1Symbol = poolData?.token1.symbol;\n    const poolName = `${token0Symbol}/${token1Symbol}`;\n    const chainName = chainInfo?.label ?? \"Ethereum\";\n    return {\n      title: poolName,\n      url: window.location.href,\n      description: `Swap ${poolName} on ${chainName}. Trade tokens and provide liquidity. Real-time prices, charts, transaction data, and more.`\n    };\n  }, [chainInfo?.label, poolData?.token0.symbol, poolData?.token1.symbol]);\n  const metatags = useDynamicMetatags(metatagProperties);\n  if (poolNotFound) {\n    return <NotFound />;\n  }\n  return <ThemeProvider token0={color0 !== accent1 ? color0 : void 0} token1={color1 !== accent1 ? color1 : void 0}>\n    <Helmet>\n      <title>{getPoolDetailPageTitle(poolData)}</title>\n      {metatags.map((tag, index) => <meta key={index} {...tag} />)}\n    </Helmet>\n    <Trace\n      logImpression={!loading}\n      page={InterfacePageName.POOL_DETAILS_PAGE}\n      properties={{\n        poolAddress,\n        chainId: chainInfo?.id,\n        feeTier: poolData?.feeTier,\n        token0Address: poolData?.token0.address,\n        token1Address: poolData?.token1.address,\n        token0Symbol: poolData?.token0.symbol,\n        token1Symbol: poolData?.token1.symbol,\n        token0Name: poolData?.token0.name,\n        token1Name: poolData?.token1.name\n      }}\n    ><PageWrapper>\n      <LeftColumn>\n        <Column gap=\"20px\">\n          <Column>\n            <PoolDetailsBreadcrumb\n              chainId={chainInfo?.id}\n              poolAddress={poolAddress}\n              token0={token0}\n              token1={token1}\n              loading={loading}\n            />\n            <PoolDetailsHeader\n              chainId={chainInfo?.id}\n              poolAddress={poolAddress}\n              token0={token0}\n              token1={token1}\n              feeTier={poolData?.feeTier}\n              protocolVersion={poolData?.protocolVersion}\n              toggleReversed={toggleReversed}\n              loading={loading}\n            />\n          </Column>\n          <ChartSection\n            poolData={poolData}\n            loading={loading}\n            isReversed={isReversed}\n            chain={chainInfo?.backendChain.chain}\n          />\n        </Column>\n        <HR />\n        <PoolDetailsTableTab\n          poolAddress={poolAddress}\n          token0={token0}\n          token1={token1}\n          protocolVersion={poolData?.protocolVersion}\n        />\n      </LeftColumn>\n      <RightColumn>\n        <PoolDetailsStatsButtons\n          chainId={chainInfo?.id}\n          token0={token0}\n          token1={token1}\n          feeTier={poolData?.feeTier}\n          loading={loading}\n        />\n        <PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainInfo?.id} loading={loading} />\n        <TokenDetailsWrapper>\n          <TokenDetailsHeader><Trans i18nKey=\"common.links\" /></TokenDetailsHeader>\n          <LinksContainer>\n            <PoolDetailsLink\n              address={poolAddress}\n              chainId={chainInfo?.id}\n              tokens={[token0, token1]}\n              loading={loading}\n            />\n            <PoolDetailsLink\n              address={token0?.address}\n              chainId={chainInfo?.id}\n              tokens={[token0]}\n              loading={loading}\n            />\n            <PoolDetailsLink\n              address={token1?.address}\n              chainId={chainInfo?.id}\n              tokens={[token1]}\n              loading={loading}\n            />\n          </LinksContainer>\n        </TokenDetailsWrapper>\n      </RightColumn>\n    </PageWrapper></Trace>\n  </ThemeProvider>;\n}\n"],"names":["PRICE_FIXED_DIGITS","computeSurroundingTicks","token0","token1","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","i","length","tick","Number","sdkPrice","tickToPrice","currentTickProcessed","liquidityActive","liquidityNet","JSBI","price0","toFixed","push","reverse","getActiveTick","tickCurrent","feeAmount","Math","floor","TICK_SPACINGS","MAX_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","chainId","data","ticks","skipNumber","setSkipNumber","useState","subgraphTickData","setSubgraphTickData","error","loading","isLoading","skip","poolAddress","Pool","getAddress","wrapped","V3_CORE_FACTORY_ADDRESSES","supportedChainId","useSupportedChainId","useAllV3TicksQuery","variables","address","toLowerCase","chain","chainIdToBackendChain","withFallback","first","pollInterval","ms","useTicksFromSubgraph","v3Pool","useEffect","tickData","skipNumber2","usePoolActiveLiquidity","pool","defaultChainId","useAccount","UniverseChainId","Mainnet","usePoolMultichain","liquidity","sqrtPriceX96","sqrtRatioX96","currentTick","activeTick","useMemo","PoolState","EXISTS","LOADING","findIndex","logger","debug","subsequentTicks","ticksProcessed","concat","Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","md","NotFound","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","logImpression","page","InterfacePageName","NOT_FOUND","color","Trans","i18nKey","src","darkImage","lightImage","alt","SmallButtonPrimary","as","Link","to","LiquidityBarSeriesRenderer","_data","_options","constructor","props","this","hoveredTick","draw","target","priceConverter","useBitmapCoordinateSpace","scope","_drawImpl","update","options","renderingScope","priceToCoordinate","bars","visibleRange","ctx","context","map","bar","x","y","originalData","calculateColumnPositionsInPlace","barSpacing","horizontalPixelRatio","from","zeroY","fillStyle","tokenAColor","stack","column","isCurrentTick","isHoveredTick","width","min","max","right","left","margin","widthWithMargin","totalBox","positionsBox","verticalPixelRatio","highlightOffset","canvas","height","highlightLength","highlightColor","beginPath","roundRect","fill","globalAlpha","tokenBColor","position","activeTickProgress","globalCompositeOperation","activeRangeAdjustedHeight","activeRangeAdjustedPosition","fillRect","LiquidityBarSeries","_renderer","_tokenAColor","_tokenBColor","_highlightColor","priceValueBuilder","plotRow","isWhitespace","renderer","defaultOptions","customSeriesDefaultOptions","LiquidityBarChartModel","ChartModel","series","chartDiv","params","super","api","addCustomSeries","setData","updateOptions","fitContent","localization","locale","rightPriceScale","visible","borderVisible","scaleMargins","top","bottom","autoScale","timeScale","fixLeftEdge","fixRightEdge","crosshair","horzLine","labelVisible","vertLine","grid","vertLines","horzLines","applyOptions","priceFormat","type","priceLineVisible","lastValueVisible","onSeriesHover","hoverData","updatedOptions","item","activeTickIndex","midPoint","setVisibleLogicalRange","MAX_UINT128","BigNumber","pow","sub","maxAmount","token","CurrencyAmount","fromRawAmount","toString","calculateActiveRangeTokensLocked","feeTier","poolData","liqGross","mockTicks","index","liquidityGross","pool1","bottomOfRangePrice","TickMath","getSqrtRatioAtTick","token1Amount","getOutputAmount","amount0Locked","parseFloat","invert","quote","toExact","topOfRangePrice","token0Amount","amount1Locked","calculateTokensLocked","tickSpacing","nextSqrtX96","maxAmountToken0","useLiquidityBarData","tokenA","tokenB","isReversed","formatNumber","formatPrice","useFormatter","activePoolData","setTickData","formatData","barData","activeRangePercentage","activeRangeIndex","t","fakeTime","isActive","price1","price","NumberType","SwapDetailsAmount","time","entry","activeRangeData","activeTickTvl","filter","PDP_CHART_HEIGHT_PX","PDP_CHART_SELECTOR_OPTIONS","ChartType","VOLUME","PRICE","LIQUIDITY","TimePeriodSelectorContainer","sm","ChartTypeSelectorContainer","PDPChartTypeSelector","chartType","onChartTypeChange","disabledOption","ChartTypeDropdown","currentChartType","onSelectOption","usePDPChartState","protocolVersion","timePeriod","setTimePeriod","TimePeriod","DAY","setChartType","isV2","ProtocolVersion","V2","isV3","V3","isV4","V4","addressOrId","duration","toHistoryDuration","priceQuery","usePoolPriceHistoryQuery","priceHistory","v2Pair","referenceToken","entries","value","token0Price","token1Price","timestamp","open","high","low","close","dataQuality","DataQuality","VALID","INVALID","usePDPPriceChartData","volumeQuery","usePoolVolumeHistoryQuery","historicalVolume","amt","withUTCTimestamp","checkDataQuality","usePDPVolumeChartData","activeQuery","ChartSection","gqlToCurrency","Chain","Ethereum","refitChartContent","useAtomValue","refitChartContentAtom","ChartBody","ChartSkeleton","selectedChartProps","supportedChainIdFromGQLChain","LiquidityChart","errorText","stale","STALE","PriceChart","VolumeChart","filteredTimeOptions","filtered","DEFAULT_PILL_TIME_SELECTOR_OPTIONS","option","TimePeriodDisplay","HOUR","selected","DISPLAYS","disabledChartOption","data-testid","ChartActionsContainer","SegmentedControl","selectedOption","getTimePeriodFromDisplay","PriceDisplayContainer","ChartPriceText","EllipsisStyle","formatCurrencyAmount","primaryToken","PriceChartType","LINE","stablecoinPrice","useStablecoinPrice","lastPrice","Chart","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","decimals","priceDisplay","symbol","amount","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","FiatTokenPrice","FadeInHeading","H1Medium","textFadeIn","FadeInSubheader","SubHeader","LiquidityTooltipDisplay","tokenADescriptor","tokenBDescriptor","displayValue0","input","TokenQuantityStats","displayValue1","BodySmall","name","useTheme","surface3","LoadingChart","TooltipBody","FeeAmount","LOWEST","displayPoint","display","paddingTop","DetailBubble","LoadingBubble","$height","$width","SmallDetailBubble","StyledExternalLink","ExternalLink","HeaderContainer","transition","medium","Badge","LabelMicro","surface2","ToggleReverseArrows","ReverseArrow","ClickableStyle","neutral2","IconBubble","PoolDetailsBreadcrumb","chainName","exploreOrigin","poolsOrigin","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","ChevronRight","size","CurrentPageBreadcrumb","poolName","StyledPoolDetailsTitle","PoolName","PoolDetailsTitle","toggleReversed","formatPercent","feePercent","Percent","BIPS_BASE","StyledLink","getTokenDetailsURL","onClick","ContractsDropdownRowContainer","Row","ContractsDropdownRow","tokens","currency","isPool","currencies","isNative","NATIVE_CHAIN_ID","explorerUrl","getExplorerLink","ExplorerDataType","NATIVE","ADDRESS","TOKEN","href","gap","DoubleCurrencyAndChainLogo","CurrencyLogo","BodyPrimary","BodySecondary","shortenAddress","ExternalLinkIcon","stroke","ContractsModalContainer","ActionMenuFlyoutStyle","minWidth","borderRadius","PoolDetailsHeaderActions","contractsModalIsOpen","toggleContractsModal","justify","DropdownSelector","isOpen","toggleOpen","menuLabel","EtherscanLogo","neutral1","ExplorerIcon","internalMenuItems","tooltipText","hideChevron","buttonStyle","ActionButtonStyle","dropdownStyle","adaptToSheet","ShareButton","utmSource","PoolDetailsHeader","shouldColumnBreak","useScreenSize","Column","style","TokenName","BREAKPOINTS","lg","xs","TokenTextWrapper","isClickable","SymbolText","CopyAddress","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","isCopied","setCopied","useCopyClipboard","copy","useCallback","checksummedAddress","isAddress","navigate","useNavigate","handleTokenTextClick","truncateAddress","setTruncateAddress","onTextRender","textRef","clientWidth","scrollWidth","prev","align","ref","Tooltip","placement","TooltipSize","Max","show","text","padding","HeaderText","Text","StatsWrapper","loaded","StatItemColumn","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","leftBarChartStyles","css","rightBarChartStyles","BalanceChartSide","percent","$color","isLeft","StatSectionBubble","StatHeaderBubble","PoolBalanceTokenNames","unwrappedToken","screenIsNotLarge","unwrapToken","nativeOnChain","marginRight","tvl","marginLeft","PoolDetailsStats","currency0","useCurrency","currency1","tvlToken0","tvlToken1","fullWidth","token0FullData","token1FullData","tvlUSD","StatItem","title","delta","tvlUSDChange","volumeUSD24H","volumeUSD24HChange","Array","_","StatsTextContainer","StatItemText","formatDelta","FiatTokenStats","DeltaArrow","PoolDetailsStatsButtonsRow","surface1","Z_INDEX","sticky","PoolButton","button","$open","accent1","opacify","timing","inOut","$fixedWidth","$hideOnMobile","SwapIcon","ButtonBubble","SwapModalWrapper","ease","SwapWrapperOuter","CurrencySelect","fixed","MobileBalance","PoolDetailsStatsButtons","balanceQuery","account","positions","userOwnedPositions","useMultiChainPositions","find","details","fee","closed","findMatchingPosition","tokenId","switchChain","useSwitchChain","location","useLocation","useTokenBalancesQuery","balance0","balance1","balance0Fiat","balance1Fiat","filteredBalances","tokenBalance0","tokenBalance1","portfolios","tokenBalances","tokenBalance","quantity","denominatedValue","formattedBalance0","TokenNonTx","formattedBalance1","totalFiatValue","formattedFiatValue","PortfolioBalance","handleAddLiquidity","currencyId","state","pathname","swapModalOpen","toggleSwapModalOpen","useReducer","isScreenSize","screenSizeLargerThanTablet","token0Warning","useTokenWarning","token1Warning","priorityWarning","getPriorityWarning","SubHeaderSmall","HeadlineSmall","Boolean","Caption","X","fontWeight","Plus","Swap","syncTabToUrl","initialInputCurrency","initialOutputCurrency","compact","disableTokenInputs","TokenSafetyMessage","tokenAddress","warning","StrongWarning","plural","tokenSymbol","Scrim","$maxWidth","$zIndex","ClosedCircle","svg","xmlns","viewBox","g","clipPath","path","d","strokeLinecap","strokeLinejoin","defs","id","rect","PositionTableWrapper","PositionWrapper","FeeTier","StatusWrapper","status","success","deprecated_accentWarning","RangeWrapper","StyledDoubleArrow","RangeText","StyledDot","PositionRow","positionInfo","useTranslation","formatTickPrice","inRange","priceUpper","token0PriceLower","priceLower","token0PriceUpper","ticksAtLimit","LOWER","UPPER","MAX_SAFE_INTEGER","DoubleCurrencyLogo","AlertTriangle","amountWithSymbol","atLimit","direction","Bound","outputToken","PoolDetailsPositionsTable","PoolTableTransactionType","PoolTableTransactionType2","PoolTransactionDefaultQuerySize","TableWrapper","PoolTransactionColumnWidth","comparePoolTokens","WRAPPED_NATIVE_CURRENCY","PoolDetailsTransactionsTable","getSupportedGraphQlChain","useChainFromUrlParam","fallbackToEthereum","activeLocalCurrency","useActiveLocalCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","s","filterAnchorRef","useRef","setFilters","BUY","SELL","REMOVE","ADD","transactions","loadMore","dataV3","dataV2","loadingV3","errorV3","fetchMore","fetchMoreV3","useV3PoolTransactionsQuery","loadingV2","errorV2","fetchMoreV2","useV2PairTransactionsQuery","loadingMore","onComplete","current","cursor","updateQuery","fetchMoreResult","mergedData","filteredTransactions","tx","tokenIn","token0Address","token0Quantity","isSell","PoolTransactionType","Remove","includes","transaction","hash","maker","amount0","amount1","token1Quantity","amountUSD","usdValue","usePoolTransactions","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","row","header","Cell","justifyContent","HeaderArrow","OrderDirection","Desc","HeaderSortText","active","cell","TimestampCell","getValue","link","TRANSACTION","span","FilterHeaderRow","clickable","onPress","Filter","allFilters","Object","values","activeFilter","anchorRef","PoolTransactionTableType","grow","fiat","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","Table","maxHeight","TableHeader","disabled","PoolDetailsTableTab","positionsInThisPool","activeTable","setActiveTable","calc24HVolChange","currentTime","Date","getTime","dayAgo","twoDaysAgo","volume24h","reduce","acc","cur","volume48h","getPoolDetailPageTitle","token0Symbol","token1Symbol","baseTitle","xl","LeftColumn","HR","hr","RightColumn","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","chainInfo","unwrappedTokens","useParams","useV3PoolQuery","errorPolicy","useV2PairQuery","anyError","anyLoading","V2_BIPS","txCount","token0Supply","project","markets","token1Supply","totalLiquidity","totalLiquidityPercentChange24h","usePoolData","getUnwrappedPoolToken","darkMode","color0","useColor","backgroundColor","color1","isInvalidPool","poolNotFound","metatagProperties","label","url","window","description","metatags","useDynamicMetatags","ThemeProvider","Helmet","tag","meta","POOL_DETAILS_PAGE","properties","token1Address","token0Name","token1Name","backendChain"],"sourceRoot":""}