{"version":3,"file":"static/js/2507.4ccfe211.chunk.js","mappings":"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","sources":["components/Liquidity/PositionNFT.tsx","components/Toggle/MultiToggle.tsx","components/RateToggle.tsx","hooks/usePositionTokenURI.ts","hooks/useV3Positions.ts","pages/LegacyPool/PositionPage.tsx"],"sourcesContent":["\"use strict\";\nimport { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nfunction getSnapshot(src, canvas, targetHeight) {\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    let { width, height } = src;\n    const ratio = width / height;\n    height = targetHeight;\n    width = Math.round(ratio * targetHeight);\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.width = width + \"px\";\n    canvas.style.height = height + \"px\";\n    context.scale(devicePixelRatio, devicePixelRatio);\n    context.clearRect(0, 0, width, height);\n    context.drawImage(src, 0, 0, width, height);\n  }\n}\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`;\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`;\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`;\nexport function PositionNFT({ image, height: targetHeight }) {\n  const [animate, setAnimate] = useState(false);\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  return <NFTGrid\n    onMouseEnter={() => {\n      setAnimate(true);\n    }}\n    onMouseLeave={() => {\n      if (imageRef.current && canvasRef.current) {\n        getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n      }\n      setAnimate(false);\n    }}\n  >\n    <NFTCanvas ref={canvasRef} />\n    <NFTImage\n      ref={imageRef}\n      src={image}\n      hidden={!animate}\n      onLoad={() => {\n        if (imageRef.current && canvasRef.current) {\n          getSnapshot(imageRef.current, canvasRef.current, targetHeight);\n        }\n      }}\n    />\n  </NFTGrid>;\n}\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nexport const ToggleWrapper = styled.button`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? \"100%\"};\n  padding: 1px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 8px;\n  border: ${({ theme }) => \"1px solid \" + theme.surface3};\n  cursor: pointer;\n  outline: none;\n`;\nexport const ToggleElement = styled.span`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => isActive ? theme.surface1 : \"none\"};\n  color: ${({ theme, isActive }) => isActive ? theme.neutral1 : theme.neutral3};\n  font-size: ${({ fontSize }) => fontSize ?? \"1rem\"};\n  font-weight: 535;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => isActive ? theme.neutral2 : theme.neutral3};\n  }\n`;\n","\"use strict\";\nimport { ToggleElement, ToggleWrapper } from \"components/Toggle/MultiToggle\";\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle\n}) {\n  const tokenA = currencyA?.wrapped;\n  const tokenB = currencyB?.wrapped;\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n  return tokenA && tokenB ? <div style={{ width: \"fit-content\", display: \"flex\", alignItems: \"center\" }} onClick={handleRateToggle}><ToggleWrapper width=\"fit-content\">\n    <ToggleElement isActive={isSorted} fontSize=\"12px\">{isSorted ? currencyA.symbol : currencyB.symbol}</ToggleElement>\n    <ToggleElement isActive={!isSorted} fontSize=\"12px\">{isSorted ? currencyB.symbol : currencyA.symbol}</ToggleElement>\n  </ToggleWrapper></div> : null;\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nconst STARTS_WITH = \"data:application/json;base64,\";\nexport function usePositionTokenURI(tokenId) {\n  const contract = useV3NFTPositionManagerContract();\n  const inputs = useMemo(\n    () => [tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16)],\n    [tokenId]\n  );\n  const { result, error, loading, valid } = useSingleCallResult(contract, \"tokenURI\", inputs, {\n    ...NEVER_RELOAD,\n    gasRequired: 3e6\n  });\n  return useMemo(() => {\n    if (error || !valid || !tokenId) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    if (loading) {\n      return {\n        valid: true,\n        loading: true\n      };\n    }\n    if (!result) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    const [tokenURI] = result;\n    if (!tokenURI || !tokenURI.startsWith(STARTS_WITH)) {\n      return {\n        valid: false,\n        loading: false\n      };\n    }\n    try {\n      const json = JSON.parse(atob(tokenURI.slice(STARTS_WITH.length)));\n      return {\n        valid: true,\n        loading: false,\n        result: json\n      };\n    } catch (error2) {\n      return { valid: false, loading: false };\n    }\n  }, [error, loading, result, tokenId, valid]);\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useSingleCallResult, useSingleContractMultipleData } from \"lib/hooks/multicall\";\nimport { useMemo } from \"react\";\nfunction useV3PositionsFromTokenIds(tokenIds) {\n  const positionManager = useV3NFTPositionManagerContract();\n  const inputs = useMemo(() => tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : [], [tokenIds]);\n  const results = useSingleContractMultipleData(positionManager, \"positions\", inputs);\n  const loading = useMemo(() => results.some(({ loading: loading2 }) => loading2), [results]);\n  const error = useMemo(() => results.some(({ error: error2 }) => error2), [results]);\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i];\n        const result = call.result;\n        return {\n          tokenId,\n          fee: result.fee,\n          feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n          feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n          liquidity: result.liquidity,\n          nonce: result.nonce,\n          operator: result.operator,\n          tickLower: result.tickLower,\n          tickUpper: result.tickUpper,\n          token0: result.token0,\n          token1: result.token1,\n          tokensOwed0: result.tokensOwed0,\n          tokensOwed1: result.tokensOwed1\n        };\n      });\n    }\n    return void 0;\n  }, [loading, error, results, tokenIds]);\n  return {\n    loading,\n    positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] }))\n  };\n}\nexport function useV3PositionFromTokenId(tokenId) {\n  const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : void 0);\n  return {\n    loading: position.loading,\n    position: position.positions?.[0]\n  };\n}\nexport function useV3Positions(account) {\n  const positionManager = useV3NFTPositionManagerContract();\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, \"balanceOf\", [\n    account ?? void 0\n  ]);\n  const accountBalance = balanceResult?.[0]?.toNumber();\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = [];\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i]);\n      }\n      return tokenRequests;\n    }\n    return [];\n  }, [account, accountBalance]);\n  const tokenIdResults = useSingleContractMultipleData(positionManager, \"tokenOfOwnerByIndex\", tokenIdsArgs);\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults]);\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults.map(({ result }) => result).filter((result) => !!result).map((result) => BigNumber.from(result[0]));\n    }\n    return [];\n  }, [account, tokenIdResults]);\n  const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds);\n  return {\n    loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n    positions\n  };\n}\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { InterfacePageName, LiquidityEventName, LiquiditySource } from \"@uniswap/analytics-events\";\nimport { CurrencyAmount, Fraction, Percent } from \"@uniswap/sdk-core\";\nimport { NonfungiblePositionManager, Pool, Position } from \"@uniswap/v3-sdk\";\nimport Badge from \"components/Badge/Badge\";\nimport RangeBadge from \"components/Badge/RangeBadge\";\nimport { ButtonConfirmed, ButtonGray, ButtonPrimary, SmallButtonPrimary } from \"components/Button/buttons\";\nimport { DarkCard, LightCard } from \"components/Card/cards\";\nimport { PositionNFT } from \"components/Liquidity/PositionNFT\";\nimport { LoadingFullscreen } from \"components/Loader/styled\";\nimport CurrencyLogo from \"components/Logo/CurrencyLogo\";\nimport { DoubleCurrencyLogo } from \"components/Logo/DoubleLogo\";\nimport { getPriceOrderingFromPositionForUI } from \"components/PositionListItem\";\nimport RateToggle from \"components/RateToggle\";\nimport { SwitchLocaleLink } from \"components/SwitchLocaleLink\";\nimport TransactionConfirmationModal, { ConfirmationModalContent } from \"components/TransactionConfirmationModal\";\nimport { AutoColumn } from \"components/deprecated/Column\";\nimport { RowBetween, RowFixed } from \"components/deprecated/Row\";\nimport { Dots } from \"components/swap/styled\";\nimport {\n  chainIdToBackendChain,\n  useIsSupportedChainId,\n  useSupportedChainId\n} from \"constants/chains\";\nimport { getPoolDetailsURL, getTokenDetailsURL, isGqlSupportedChain } from \"graphql/data/util\";\nimport { useToken } from \"hooks/Tokens\";\nimport { useAccount } from \"hooks/useAccount\";\nimport { useV3NFTPositionManagerContract } from \"hooks/useContract\";\nimport { useEthersSigner } from \"hooks/useEthersSigner\";\nimport useIsTickAtLimit from \"hooks/useIsTickAtLimit\";\nimport { PoolState, usePool } from \"hooks/usePools\";\nimport { usePositionTokenURI } from \"hooks/usePositionTokenURI\";\nimport useStablecoinPrice from \"hooks/useStablecoinPrice\";\nimport { useV3PositionFees } from \"hooks/useV3PositionFees\";\nimport { useV3PositionFromTokenId } from \"hooks/useV3Positions\";\nimport { useSingleCallResult } from \"lib/hooks/multicall\";\nimport useNativeCurrency from \"lib/hooks/useNativeCurrency\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { LoadingRows } from \"pages/LegacyPool/styled\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Bound } from \"state/mint/v3/actions\";\nimport { useIsTransactionPending, useTransactionAdder } from \"state/transactions/hooks\";\nimport { TransactionType } from \"state/transactions/types\";\nimport { ClickableStyle, ExternalLink, HideExtraSmall, HideSmall, StyledRouterLink, ThemedText } from \"theme/components\";\nimport { Switch, Text } from \"ui/src\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { Trans, t } from \"uniswap/src/i18n\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nimport { ExplorerDataType, getExplorerLink } from \"uniswap/src/utils/linking\";\nimport { logger } from \"utilities/src/logger/logger\";\nimport { calculateGasMargin } from \"utils/calculateGasMargin\";\nimport { currencyId } from \"utils/currencyId\";\nimport { WrongChainError } from \"utils/errors\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nimport { unwrappedToken } from \"utils/unwrappedToken\";\nconst PositionPageButtonPrimary = styled(ButtonPrimary)`\n  width: 228px;\n  height: 40px;\n  font-size: 16px;\n  line-height: 20px;\n  border-radius: 12px;\n`;\nconst PageWrapper = styled.div`\n  padding: 68px 16px 16px 16px;\n\n  min-width: 800px;\n  max-width: 960px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    min-width: 100%;\n    padding: 16px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    min-width: 100%;\n    padding: 16px;\n  }\n`;\nconst BadgeText = styled.div`\n  font-weight: 535;\n  font-size: 14px;\n  color: ${({ theme }) => theme.neutral2};\n`;\nconst Label = styled(({ end, ...props }) => <ThemedText.DeprecatedLabel {...props} />)`\n  display: flex;\n  font-size: 16px;\n  justify-content: ${({ end }) => end ? \"flex-end\" : \"flex-start\"};\n  align-items: center;\n`;\nconst ExtentsText = styled.span`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  text-align: center;\n  margin-right: 4px;\n  font-weight: 535;\n`;\nconst HoverText = styled(ThemedText.DeprecatedMain)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.neutral2};\n  :hover {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none;\n  }\n`;\nconst DoubleArrow = styled.span`\n  color: ${({ theme }) => theme.neutral3};\n  margin: 0 1rem;\n`;\nconst ResponsiveRow = styled(RowBetween)`\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 16px;\n    width: 100%;\n  }\n`;\nconst ActionButtonResponsiveRow = styled(ResponsiveRow)`\n  width: 50%;\n  justify-content: flex-end;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    width: 100%;\n    flex-direction: row;\n    * {\n      width: 100%;\n    }\n  }\n`;\nconst ResponsiveButtonConfirmed = styled(ButtonConfirmed)`\n  border-radius: 12px;\n  padding: 6px 8px;\n  width: fit-content;\n  font-size: 16px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    width: fit-content;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    width: fit-content;\n  }\n`;\nconst StyledPoolLink = styled(Link)`\n  text-decoration: none;\n  ${ClickableStyle}\n`;\nconst PairHeader = styled(ThemedText.H1Medium)`\n  margin-right: 10px;\n`;\nfunction CurrentPriceCard({\n  inverted,\n  pool,\n  currencyQuote,\n  currencyBase\n}) {\n  const { formatPrice } = useFormatter();\n  if (!pool || !currencyQuote || !currencyBase) {\n    return null;\n  }\n  return <LightCard padding=\"12px\"><AutoColumn gap=\"sm\" justify=\"center\">\n    <ExtentsText><Trans i18nKey=\"common.currentPrice\" /></ExtentsText>\n    <ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatPrice({ price: inverted ? pool.token1Price : pool.token0Price, type: NumberType.TokenTx })}</ThemedText.DeprecatedMediumHeader>\n    <ExtentsText><Trans\n      i18nKey=\"common.feesEarnedPerBase\"\n      values={{ symbolA: currencyQuote?.symbol, symbolB: currencyBase?.symbol }}\n    /></ExtentsText>\n  </AutoColumn></LightCard>;\n}\nconst TokenLink = ({\n  children,\n  chainId,\n  address\n}) => {\n  const tokenLink = getTokenDetailsURL({ address, chain: chainIdToBackendChain({ chainId }) });\n  return <StyledRouterLink to={tokenLink}>{children}</StyledRouterLink>;\n};\nconst ExternalTokenLink = ({ children, chainId, address }) => {\n  return <ExternalLink href={getExplorerLink(chainId, address, ExplorerDataType.TOKEN)}>{children}</ExternalLink>;\n};\nfunction LinkedCurrency({ chainId, currency }) {\n  const address = currency?.address;\n  const supportedChain = useSupportedChainId(chainId);\n  const Link2 = isGqlSupportedChain(supportedChain) ? TokenLink : ExternalTokenLink;\n  return <Link2 chainId={chainId} address={address}><RowFixed>\n    <CurrencyLogo currency={currency} size={20} style={{ marginRight: \"0.5rem\" }} />\n    <ThemedText.DeprecatedMain>\n      {currency?.symbol}\n      {\" \\u2197\"}\n    </ThemedText.DeprecatedMain>\n  </RowFixed></Link2>;\n}\nfunction getRatio(lower, current, upper) {\n  try {\n    if (!current.greaterThan(lower)) {\n      return 100;\n    } else if (!current.lessThan(upper)) {\n      return 0;\n    }\n    const a = Number.parseFloat(lower.toSignificant(15));\n    const b = Number.parseFloat(upper.toSignificant(15));\n    const c = Number.parseFloat(current.toSignificant(15));\n    const ratio = Math.floor(1 / ((Math.sqrt(a * b) - Math.sqrt(b * c)) / (c - Math.sqrt(b * c)) + 1) * 100);\n    if (ratio < 0 || ratio > 100) {\n      throw Error(\"Out of range\");\n    }\n    return ratio;\n  } catch {\n    return void 0;\n  }\n}\nconst useInverter = ({\n  priceLower,\n  priceUpper,\n  quote,\n  base,\n  invert\n}) => {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base\n  };\n};\nexport function PositionPageUnsupportedContent() {\n  return <PageWrapper><div style={{ display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}>\n    <ThemedText.HeadlineLarge style={{ marginBottom: \"8px\" }}><Trans i18nKey=\"common.positionUnavailable\">Position unavailable</Trans></ThemedText.HeadlineLarge>\n    <ThemedText.BodyPrimary style={{ marginBottom: \"32px\" }}><Trans i18nKey=\"pool.position.networkConnect\" /></ThemedText.BodyPrimary>\n    <PositionPageButtonPrimary as={Link} to=\"/pool\" width=\"fit-content\"><Trans i18nKey=\"pool.back\" /></PositionPageButtonPrimary>\n  </div></PageWrapper>;\n}\nexport default function PositionPage() {\n  const { chainId } = useAccount();\n  const isSupportedChain = useIsSupportedChainId(chainId);\n  if (isSupportedChain) {\n    return <PositionPageContent />;\n  } else {\n    return <PositionPageUnsupportedContent />;\n  }\n}\nconst PositionLabelRow = styled(RowFixed)({\n  flexWrap: \"wrap\",\n  gap: 8\n});\nfunction parseTokenId(tokenId) {\n  if (!tokenId) {\n    return void 0;\n  }\n  try {\n    return BigNumber.from(tokenId);\n  } catch (error) {\n    return void 0;\n  }\n}\nfunction PositionPageContent() {\n  const { tokenId: tokenIdFromUrl } = useParams();\n  const account = useAccount();\n  const supportedChain = useSupportedChainId(account.chainId);\n  const signer = useEthersSigner();\n  const theme = useTheme();\n  const { formatCurrencyAmount, formatDelta, formatTickPrice } = useFormatter();\n  const parsedTokenId = parseTokenId(tokenIdFromUrl);\n  const { loading, position: positionDetails } = useV3PositionFromTokenId(parsedTokenId);\n  const {\n    token0: token0Address,\n    token1: token1Address,\n    fee: feeAmount,\n    liquidity,\n    tickLower,\n    tickUpper,\n    tokenId\n  } = positionDetails || {};\n  const removed = liquidity?.eq(0);\n  const metadata = usePositionTokenURI(parsedTokenId);\n  const token0 = useToken(token0Address);\n  const token1 = useToken(token1Address);\n  const currency0 = token0 ? unwrappedToken(token0) : void 0;\n  const currency1 = token1 ? unwrappedToken(token1) : void 0;\n  const [receiveWETH, setReceiveWETH] = useState(false);\n  const nativeCurrency = useNativeCurrency(supportedChain);\n  const nativeWrappedSymbol = nativeCurrency.wrapped.symbol;\n  const poolAddress = token0 && token1 && feeAmount ? Pool.getAddress(token0, token1, feeAmount) : void 0;\n  const [poolState, pool] = usePool(token0 ?? void 0, token1 ?? void 0, feeAmount);\n  const position = useMemo(() => {\n    if (pool && liquidity && typeof tickLower === \"number\" && typeof tickUpper === \"number\") {\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper });\n    }\n    return void 0;\n  }, [liquidity, pool, tickLower, tickUpper]);\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted\n  });\n  const inverted = token1 ? base?.equals(token1) : void 0;\n  const currencyQuote = inverted ? currency0 : currency1;\n  const currencyBase = inverted ? currency1 : currency0;\n  const ratio = useMemo(() => {\n    return priceLower && pool && priceUpper ? getRatio(\n      inverted ? priceUpper.invert() : priceLower,\n      pool.token0Price,\n      inverted ? priceLower.invert() : priceUpper\n    ) : void 0;\n  }, [inverted, pool, priceLower, priceUpper]);\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? void 0, positionDetails?.tokenId, receiveWETH);\n  const currency0ForFeeCollectionPurposes = pool ? receiveWETH ? pool.token0 : unwrappedToken(pool.token0) : void 0;\n  const currency1ForFeeCollectionPurposes = pool ? receiveWETH ? pool.token1 : unwrappedToken(pool.token1) : void 0;\n  const [collecting, setCollecting] = useState(false);\n  const [collectMigrationHash, setCollectMigrationHash] = useState(null);\n  const isCollectPending = useIsTransactionPending(collectMigrationHash ?? void 0);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { price: price0 } = useStablecoinPrice(token0 ?? void 0);\n  const { price: price1 } = useStablecoinPrice(token1 ?? void 0);\n  const fiatValueOfFees = useMemo(() => {\n    if (!price0 || !price1 || !feeValue0 || !feeValue1) {\n      return null;\n    }\n    const feeValue0Wrapped = feeValue0?.wrapped;\n    const feeValue1Wrapped = feeValue1?.wrapped;\n    if (!feeValue0Wrapped || !feeValue1Wrapped) {\n      return null;\n    }\n    const amount0 = price0.quote(feeValue0Wrapped);\n    const amount1 = price1.quote(feeValue1Wrapped);\n    return amount0.add(amount1);\n  }, [price0, price1, feeValue0, feeValue1]);\n  const fiatValueOfLiquidity = useMemo(() => {\n    if (!price0 || !price1 || !position) {\n      return null;\n    }\n    const amount0 = price0.quote(position.amount0);\n    const amount1 = price1.quote(position.amount1);\n    return amount0.add(amount1);\n  }, [price0, price1, position]);\n  const addTransaction = useTransactionAdder();\n  const positionManager = useV3NFTPositionManagerContract();\n  const collect = useCallback(async () => {\n    if (!currency0ForFeeCollectionPurposes || !currency1ForFeeCollectionPurposes || account.status !== \"connected\" || !positionManager || !tokenId || !signer) {\n      return;\n    }\n    setCollecting(true);\n    const { calldata, value } = NonfungiblePositionManager.collectCallParameters({\n      tokenId: tokenId.toString(),\n      expectedCurrencyOwed0: feeValue0 ?? CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0),\n      expectedCurrencyOwed1: feeValue1 ?? CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0),\n      recipient: account.address\n    });\n    const txn = {\n      to: positionManager.address,\n      data: calldata,\n      value\n    };\n    const connectedChainId = await signer.getChainId();\n    if (account.chainId !== connectedChainId) {\n      throw new WrongChainError();\n    }\n    signer.estimateGas(txn).then((estimate) => {\n      const newTxn = {\n        ...txn,\n        gasLimit: calculateGasMargin(estimate)\n      };\n      return signer.sendTransaction(newTxn).then((response) => {\n        setCollectMigrationHash(response.hash);\n        setCollecting(false);\n        sendAnalyticsEvent(LiquidityEventName.COLLECT_LIQUIDITY_SUBMITTED, {\n          source: LiquiditySource.V3,\n          label: [currency0ForFeeCollectionPurposes.symbol, currency1ForFeeCollectionPurposes.symbol].join(\"/\"),\n          type: LiquiditySource.V3,\n          fee_tier: feeAmount\n        });\n        addTransaction(response, {\n          type: TransactionType.COLLECT_FEES,\n          currencyId0: currencyId(currency0ForFeeCollectionPurposes),\n          currencyId1: currencyId(currency1ForFeeCollectionPurposes),\n          expectedCurrencyOwed0: feeValue0?.quotient.toString() ?? CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0).toExact(),\n          expectedCurrencyOwed1: feeValue1?.quotient.toString() ?? CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0).toExact()\n        });\n      });\n    }).catch((error) => {\n      setCollecting(false);\n      logger.error(error, {\n        tags: {\n          file: \"PositionPage\",\n          function: \"collectCallback\"\n        }\n      });\n    });\n  }, [\n    currency0ForFeeCollectionPurposes,\n    currency1ForFeeCollectionPurposes,\n    account.status,\n    account.address,\n    account.chainId,\n    positionManager,\n    tokenId,\n    signer,\n    feeValue0,\n    feeValue1,\n    feeAmount,\n    addTransaction\n  ]);\n  const owner = useSingleCallResult(tokenId ? positionManager : null, \"ownerOf\", [tokenId]).result?.[0];\n  const ownsNFT = owner === account.address || positionDetails?.operator === account.address;\n  const feeValueUpper = inverted ? feeValue0 : feeValue1;\n  const feeValueLower = inverted ? feeValue1 : feeValue0;\n  const below = pool && typeof tickLower === \"number\" ? pool.tickCurrent < tickLower : void 0;\n  const above = pool && typeof tickUpper === \"number\" ? pool.tickCurrent >= tickUpper : void 0;\n  const inRange = typeof below === \"boolean\" && typeof above === \"boolean\" ? !below && !above : false;\n  function modalHeader() {\n    return <AutoColumn gap=\"md\" style={{ marginTop: \"20px\" }}>\n      <LightCard padding=\"12px 16px\"><AutoColumn gap=\"md\">\n        <RowBetween>\n          <RowFixed>\n            <CurrencyLogo currency={feeValueUpper?.currency} size={20} style={{ marginRight: \"0.5rem\" }} />\n            <ThemedText.DeprecatedMain>{feeValueUpper ? formatCurrencyAmount({ amount: feeValueUpper }) : \"-\"}</ThemedText.DeprecatedMain>\n          </RowFixed>\n          <ThemedText.DeprecatedMain>{feeValueUpper?.currency?.symbol}</ThemedText.DeprecatedMain>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <CurrencyLogo currency={feeValueLower?.currency} size={20} style={{ marginRight: \"0.5rem\" }} />\n            <ThemedText.DeprecatedMain>{feeValueLower ? formatCurrencyAmount({ amount: feeValueLower }) : \"-\"}</ThemedText.DeprecatedMain>\n          </RowFixed>\n          <ThemedText.DeprecatedMain>{feeValueLower?.currency?.symbol}</ThemedText.DeprecatedMain>\n        </RowBetween>\n      </AutoColumn></LightCard>\n      <Text fontSize={12} fontStyle=\"italic\" color=\"$neutral2\"><Trans i18nKey=\"pool.collectingFeesWithdraw\" /></Text>\n      <ButtonPrimary data-testid=\"modal-collect-fees-button\" onClick={collect}><Trans i18nKey=\"common.collect.button\" /></ButtonPrimary>\n    </AutoColumn>;\n  }\n  const showCollectAsWeth = Boolean(\n    ownsNFT && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0)) && currency0 && currency1 && (currency0.isNative || currency1.isNative) && !collectMigrationHash\n  );\n  if (!positionDetails && !loading) {\n    return <PositionPageUnsupportedContent />;\n  }\n  return loading || poolState === PoolState.LOADING || !feeAmount ? <LoadingRows>\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </LoadingRows> : <Trace logImpression page={InterfacePageName.POOL_PAGE}><>\n    <Helmet><title>{t(`liquidityPool.positions.page.title`, {\n      quoteSymbol: currencyQuote?.symbol,\n      baseSymbol: currencyBase?.symbol\n    })}</title></Helmet>\n    <PageWrapper>\n      <TransactionConfirmationModal\n        isOpen={showConfirm}\n        onDismiss={() => setShowConfirm(false)}\n        attemptingTxn={collecting}\n        hash={collectMigrationHash ?? \"\"}\n        reviewContent={() => <ConfirmationModalContent\n          title={<Trans i18nKey=\"pool.claimFees\" />}\n          onDismiss={() => setShowConfirm(false)}\n          topContent={modalHeader}\n        />}\n        pendingText={<Trans i18nKey=\"common.collecting.fees\" />}\n      />\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"sm\">\n          <Link\n            data-cy=\"visit-pool\"\n            style={{ textDecoration: \"none\", width: \"fit-content\", marginBottom: \"0.5rem\" }}\n            to=\"/pool\"\n          ><HoverText>\n            {\"\\u2190 \"}\n            <Trans i18nKey=\"pool.back\" />\n          </HoverText></Link>\n          <ResponsiveRow>\n            <PositionLabelRow>\n              <DoubleCurrencyLogo currencies={[currencyBase, currencyQuote]} size={24} />\n              <StyledPoolLink\n                to={poolAddress ? getPoolDetailsURL(\n                  poolAddress,\n                  chainIdToBackendChain({ chainId: supportedChain, withFallback: true })\n                ) : \"\"}\n              ><PairHeader>\n                {\"\\xA0\"}\n                {currencyQuote?.symbol}\n                {\"\\xA0/\\xA0\"}\n                {currencyBase?.symbol}\n              </PairHeader></StyledPoolLink>\n              <Badge style={{ marginRight: \"8px\" }}><BadgeText>{formatDelta(parseFloat(new Percent(feeAmount, 1e6).toSignificant()))}</BadgeText></Badge>\n              <RangeBadge removed={removed} inRange={inRange} />\n            </PositionLabelRow>\n            {ownsNFT && <ActionButtonResponsiveRow>\n              {currency0 && currency1 && feeAmount && tokenId ? <ButtonGray\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}/${feeAmount}/${tokenId}`}\n                padding=\"6px 8px\"\n                width=\"fit-content\"\n                $borderRadius=\"12px\"\n                style={{ marginRight: \"8px\" }}\n              ><Trans i18nKey=\"pool.increaseLiquidity\" /></ButtonGray> : null}\n              {tokenId && !removed ? <SmallButtonPrimary\n                as={Link}\n                to={`/remove/${tokenId}`}\n                padding=\"6px 8px\"\n                width=\"fit-content\"\n                $borderRadius=\"12px\"\n              ><Trans i18nKey=\"pool.removeLiquidity\" /></SmallButtonPrimary> : null}\n            </ActionButtonResponsiveRow>}\n          </ResponsiveRow>\n        </AutoColumn>\n        <ResponsiveRow align=\"flex-start\">\n          <HideSmall\n            style={{\n              height: \"100%\",\n              marginRight: 12\n            }}\n          >{\"result\" in metadata ? <DarkCard\n            width=\"100%\"\n            height=\"100%\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              justifyContent: \"space-around\",\n              minWidth: \"340px\"\n            }}\n          >\n            <PositionNFT image={metadata.result.image} height={400} />\n            {typeof account.chainId === \"number\" && owner && !ownsNFT ? <ExternalLink href={getExplorerLink(account.chainId, owner, ExplorerDataType.ADDRESS)}><Trans i18nKey=\"pool.owner\" /></ExternalLink> : null}\n          </DarkCard> : <DarkCard\n            width=\"100%\"\n            height=\"100%\"\n            style={{\n              minWidth: \"340px\",\n              position: \"relative\",\n              overflow: \"hidden\"\n            }}\n          ><LoadingFullscreen /></DarkCard>}</HideSmall>\n          <AutoColumn gap=\"sm\" style={{ width: \"100%\", height: \"100%\" }}>\n            <DarkCard><AutoColumn gap=\"md\" style={{ width: \"100%\" }}>\n              <AutoColumn gap=\"md\">\n                <Label><Trans i18nKey=\"common.liquidity\" /></Label>\n                {fiatValueOfLiquidity?.greaterThan(new Fraction(1, 100)) ? <ThemedText.DeprecatedLargeHeader fontSize=\"36px\" fontWeight={535}>{formatCurrencyAmount({\n                  amount: fiatValueOfLiquidity,\n                  type: NumberType.FiatTokenPrice\n                })}</ThemedText.DeprecatedLargeHeader> : <ThemedText.DeprecatedLargeHeader color={theme.neutral1} fontSize=\"36px\" fontWeight={535}>-</ThemedText.DeprecatedLargeHeader>}\n              </AutoColumn>\n              <LightCard padding=\"12px 16px\"><AutoColumn gap=\"md\">\n                <RowBetween>\n                  <LinkedCurrency\n                    chainId={account.chainId ?? UniverseChainId.Mainnet}\n                    currency={currencyQuote}\n                  />\n                  <RowFixed>\n                    <ThemedText.DeprecatedMain>{formatCurrencyAmount({ amount: inverted ? position?.amount0 : position?.amount1 })}</ThemedText.DeprecatedMain>\n                    {typeof ratio === \"number\" && !removed ? <Badge style={{ marginLeft: \"10px\" }}><BadgeText>\n                      {inverted ? ratio : 100 - ratio}\n                      {\"%\"}\n                    </BadgeText></Badge> : null}\n                  </RowFixed>\n                </RowBetween>\n                <RowBetween>\n                  <LinkedCurrency\n                    chainId={account.chainId ?? UniverseChainId.Mainnet}\n                    currency={currencyBase}\n                  />\n                  <RowFixed>\n                    <ThemedText.DeprecatedMain>{formatCurrencyAmount({ amount: inverted ? position?.amount1 : position?.amount0 })}</ThemedText.DeprecatedMain>\n                    {typeof ratio === \"number\" && !removed ? <Badge style={{ marginLeft: \"10px\" }}><BadgeText>\n                      {inverted ? 100 - ratio : ratio}\n                      {\"%\"}\n                    </BadgeText></Badge> : null}\n                  </RowFixed>\n                </RowBetween>\n              </AutoColumn></LightCard>\n            </AutoColumn></DarkCard>\n            <DarkCard><AutoColumn gap=\"md\" style={{ width: \"100%\" }}>\n              <AutoColumn gap=\"md\"><RowBetween style={{ alignItems: \"flex-start\" }}>\n                <AutoColumn gap=\"md\">\n                  <Label><Trans i18nKey=\"pool.unclaimedFees\" /></Label>\n                  {fiatValueOfFees?.greaterThan(new Fraction(1, 100)) ? <ThemedText.DeprecatedLargeHeader color={theme.success} fontSize=\"36px\" fontWeight={535}>{formatCurrencyAmount({ amount: fiatValueOfFees, type: NumberType.FiatTokenPrice })}</ThemedText.DeprecatedLargeHeader> : <ThemedText.DeprecatedLargeHeader color={theme.neutral1} fontSize=\"36px\" fontWeight={535}>-</ThemedText.DeprecatedLargeHeader>}\n                </AutoColumn>\n                {ownsNFT && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || !!collectMigrationHash) ? <ResponsiveButtonConfirmed\n                  data-testid=\"collect-fees-button\"\n                  disabled={collecting || !!collectMigrationHash}\n                  confirmed={!!collectMigrationHash && !isCollectPending}\n                  width=\"fit-content\"\n                  style={{ borderRadius: \"12px\" }}\n                  padding=\"4px 8px\"\n                  onClick={() => setShowConfirm(true)}\n                >{!!collectMigrationHash && !isCollectPending ? <ThemedText.DeprecatedMain color={theme.neutral1}><Trans i18nKey=\"pool.collected\" /></ThemedText.DeprecatedMain> : isCollectPending || collecting ? <ThemedText.DeprecatedMain color={theme.neutral1}>\n                  {\" \"}\n                  <Dots><Trans i18nKey=\"pool.collecting\" /></Dots>\n                </ThemedText.DeprecatedMain> : <><ThemedText.DeprecatedMain color={theme.white}><Trans i18nKey=\"pool.collectingFees\" /></ThemedText.DeprecatedMain></>}</ResponsiveButtonConfirmed> : null}\n              </RowBetween></AutoColumn>\n              <LightCard padding=\"12px 16px\"><AutoColumn gap=\"md\">\n                <RowBetween>\n                  <RowFixed>\n                    <CurrencyLogo\n                      currency={feeValueUpper?.currency}\n                      size={20}\n                      style={{ marginRight: \"0.5rem\" }}\n                    />\n                    <ThemedText.DeprecatedMain>{feeValueUpper?.currency?.symbol}</ThemedText.DeprecatedMain>\n                  </RowFixed>\n                  <RowFixed><ThemedText.DeprecatedMain>{feeValueUpper ? formatCurrencyAmount({ amount: feeValueUpper }) : \"-\"}</ThemedText.DeprecatedMain></RowFixed>\n                </RowBetween>\n                <RowBetween>\n                  <RowFixed>\n                    <CurrencyLogo\n                      currency={feeValueLower?.currency}\n                      size={20}\n                      style={{ marginRight: \"0.5rem\" }}\n                    />\n                    <ThemedText.DeprecatedMain>{feeValueLower?.currency?.symbol}</ThemedText.DeprecatedMain>\n                  </RowFixed>\n                  <RowFixed><ThemedText.DeprecatedMain>{feeValueLower ? formatCurrencyAmount({ amount: feeValueLower }) : \"-\"}</ThemedText.DeprecatedMain></RowFixed>\n                </RowBetween>\n              </AutoColumn></LightCard>\n              {showCollectAsWeth && <AutoColumn gap=\"md\"><RowBetween>\n                <ThemedText.DeprecatedMain><Trans i18nKey=\"pool.collectAs\" values={{ nativeWrappedSymbol }} /></ThemedText.DeprecatedMain>\n                <Switch\n                  id=\"receive-as-weth\"\n                  checked={receiveWETH}\n                  onCheckedChange={() => setReceiveWETH((receiveWETH2) => !receiveWETH2)}\n                  variant=\"branded\"\n                />\n              </RowBetween></AutoColumn>}\n            </AutoColumn></DarkCard>\n          </AutoColumn>\n        </ResponsiveRow>\n        <DarkCard><AutoColumn gap=\"md\">\n          <RowBetween>\n            <RowFixed>\n              <Label display=\"flex\" style={{ marginRight: \"12px\" }}><Trans i18nKey=\"pool.priceRange\" /></Label>\n              <HideExtraSmall><>\n                <RangeBadge removed={removed} inRange={inRange} />\n                <span style={{ width: \"8px\" }} />\n              </></HideExtraSmall>\n            </RowFixed>\n            <RowFixed>{currencyBase && currencyQuote && <RateToggle\n              currencyA={currencyBase}\n              currencyB={currencyQuote}\n              handleRateToggle={() => setManuallyInverted(!manuallyInverted)}\n            />}</RowFixed>\n          </RowBetween>\n          <RowBetween>\n            <LightCard padding=\"12px\" width=\"100%\"><AutoColumn gap=\"sm\" justify=\"center\">\n              <ExtentsText><Trans i18nKey=\"pool.minPrice\" /></ExtentsText>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatTickPrice({\n                price: priceLower,\n                atLimit: tickAtLimit,\n                direction: Bound.LOWER,\n                numberType: NumberType.TokenTx\n              })}</ThemedText.DeprecatedMediumHeader>\n              <ExtentsText>\n                {\" \"}\n                <Trans\n                  i18nKey=\"common.feesEarnedPerBase\"\n                  values={{ symbolA: currencyQuote?.symbol, symbolB: currencyBase?.symbol }}\n                />\n              </ExtentsText>\n              {inRange && <Text fontSize={11} color=\"$neutral3\"><Trans i18nKey=\"pool.position.100\" /></Text>}\n            </AutoColumn></LightCard>\n            <DoubleArrow>{\"\\u27F7\"}</DoubleArrow>\n            <LightCard padding=\"12px\" width=\"100%\"><AutoColumn gap=\"sm\" justify=\"center\">\n              <ExtentsText><Trans i18nKey=\"pool.maxPrice\" /></ExtentsText>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">{formatTickPrice({\n                price: priceUpper,\n                atLimit: tickAtLimit,\n                direction: Bound.UPPER,\n                numberType: NumberType.TokenTx\n              })}</ThemedText.DeprecatedMediumHeader>\n              <ExtentsText>\n                {\" \"}\n                <Trans\n                  i18nKey=\"common.feesEarnedPerBase\"\n                  values={{ symbolA: currencyQuote?.symbol, symbolB: currencyBase?.symbol }}\n                />\n              </ExtentsText>\n              {inRange && <Text fontSize={11} color=\"$neutral3\"><Trans i18nKey=\"pool.position.100.at\" values={{ symbol: currencyQuote?.symbol }} /></Text>}\n            </AutoColumn></LightCard>\n          </RowBetween>\n          <CurrentPriceCard\n            inverted={inverted}\n            pool={pool}\n            currencyQuote={currencyQuote}\n            currencyBase={currencyBase}\n          />\n        </AutoColumn></DarkCard>\n      </AutoColumn>\n    </PageWrapper>\n    <SwitchLocaleLink />\n  </></Trace>;\n}\n"],"names":["getSnapshot","src","canvas","targetHeight","context","getContext","width","height","ratio","Math","round","devicePixelRatio","style","scale","clearRect","drawImage","NFTGrid","styled","div","NFTCanvas","NFTImage","img","PositionNFT","image","animate","setAnimate","useState","canvasRef","useRef","imageRef","onMouseEnter","onMouseLeave","current","ref","hidden","onLoad","ToggleWrapper","button","theme","surface2","surface3","ToggleElement","span","isActive","surface1","neutral1","neutral3","fontSize","neutral2","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","display","alignItems","onClick","symbol","STARTS_WITH","usePositionTokenURI","tokenId","contract","useV3NFTPositionManagerContract","inputs","useMemo","BigNumber","toHexString","toString","result","error","loading","valid","useSingleCallResult","NEVER_RELOAD","gasRequired","tokenURI","startsWith","JSON","parse","atob","slice","length","error2","useV3PositionsFromTokenIds","tokenIds","positions","positionManager","map","from","results","useSingleContractMultipleData","some","loading2","call","i","fee","feeGrowthInside0LastX128","feeGrowthInside1LastX128","liquidity","nonce","operator","tickLower","tickUpper","token0","token1","tokensOwed0","tokensOwed1","position","useV3PositionFromTokenId","useV3Positions","account","balanceResult","balanceLoading","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","positionsLoading","PositionPageButtonPrimary","ButtonPrimary","PageWrapper","breakpoint","md","sm","BadgeText","Label","end","props","ThemedText","DeprecatedLabel","ExtentsText","HoverText","DeprecatedMain","DoubleArrow","ResponsiveRow","RowBetween","ActionButtonResponsiveRow","ResponsiveButtonConfirmed","ButtonConfirmed","StyledPoolLink","Link","ClickableStyle","PairHeader","H1Medium","CurrentPriceCard","inverted","pool","currencyQuote","currencyBase","formatPrice","useFormatter","LightCard","padding","AutoColumn","gap","justify","Trans","i18nKey","DeprecatedMediumHeader","textAlign","price","token1Price","token0Price","type","NumberType","TokenTx","values","symbolA","symbolB","TokenLink","children","chainId","address","tokenLink","getTokenDetailsURL","chain","chainIdToBackendChain","StyledRouterLink","to","ExternalTokenLink","ExternalLink","href","getExplorerLink","ExplorerDataType","TOKEN","LinkedCurrency","currency","supportedChain","useSupportedChainId","Link2","isGqlSupportedChain","RowFixed","CurrencyLogo","size","marginRight","useInverter","priceLower","priceUpper","quote","base","invert","PositionPageUnsupportedContent","flexDirection","HeadlineLarge","marginBottom","BodyPrimary","as","PositionPage","useAccount","useIsSupportedChainId","PositionPageContent","PositionLabelRow","flexWrap","positionDetails","feeValue0","feeValue1","fiatValueOfLiquidity","fiatValueOfFees","feeValueUpper","feeValueLower","tokenIdFromUrl","useParams","signer","useEthersSigner","useTheme","formatCurrencyAmount","formatDelta","formatTickPrice","parsedTokenId","parseTokenId","token0Address","token1Address","feeAmount","removed","eq","metadata","useToken","currency0","unwrappedToken","currency1","receiveWETH","setReceiveWETH","nativeWrappedSymbol","useNativeCurrency","poolAddress","Pool","getAddress","poolState","usePool","Position","tickAtLimit","useIsTickAtLimit","pricesFromPosition","getPriceOrderingFromPositionForUI","manuallyInverted","setManuallyInverted","equals","lower","upper","greaterThan","lessThan","a","Number","parseFloat","toSignificant","b","c","floor","sqrt","Error","getRatio","useV3PositionFees","currency0ForFeeCollectionPurposes","currency1ForFeeCollectionPurposes","collecting","setCollecting","collectMigrationHash","setCollectMigrationHash","isCollectPending","useIsTransactionPending","showConfirm","setShowConfirm","price0","useStablecoinPrice","price1","feeValue0Wrapped","feeValue1Wrapped","amount0","amount1","add","addTransaction","useTransactionAdder","collect","useCallback","status","calldata","value","NonfungiblePositionManager","collectCallParameters","expectedCurrencyOwed0","CurrencyAmount","fromRawAmount","expectedCurrencyOwed1","recipient","txn","data","connectedChainId","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","hash","sendAnalyticsEvent","LiquidityEventName","COLLECT_LIQUIDITY_SUBMITTED","source","LiquiditySource","V3","label","join","fee_tier","TransactionType","COLLECT_FEES","currencyId0","currencyId","currencyId1","quotient","toExact","catch","logger","tags","file","function","owner","ownsNFT","below","tickCurrent","above","inRange","modalHeader","marginTop","amount","Text","fontStyle","color","data-testid","showCollectAsWeth","Boolean","isNative","PoolState","LOADING","LoadingRows","Trace","logImpression","page","InterfacePageName","POOL_PAGE","Helmet","title","t","quoteSymbol","baseSymbol","TransactionConfirmationModal","isOpen","onDismiss","attemptingTxn","reviewContent","ConfirmationModalContent","topContent","pendingText","data-cy","textDecoration","DoubleCurrencyLogo","currencies","getPoolDetailsURL","withFallback","Badge","Percent","RangeBadge","ButtonGray","$borderRadius","SmallButtonPrimary","align","HideSmall","DarkCard","justifyContent","minWidth","ADDRESS","overflow","LoadingFullscreen","Fraction","DeprecatedLargeHeader","fontWeight","FiatTokenPrice","UniverseChainId","Mainnet","marginLeft","success","disabled","confirmed","borderRadius","Dots","white","Switch","id","checked","onCheckedChange","receiveWETH2","variant","HideExtraSmall","atLimit","direction","Bound","LOWER","numberType","UPPER","SwitchLocaleLink"],"sourceRoot":""}