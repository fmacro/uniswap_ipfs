{"version":3,"file":"static/js/6337.a7135ff7.chunk.js","mappings":"6KAAA,SAASA,IAAW,OAAOA,EAASC,OAAOC,QAAQ,SAASC,GAAQ,IAAI,IAAIC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAI,CAAC,IAAIG,EAAOF,UAAUD,GAAG,IAAI,IAAII,KAAOD,EAAON,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,EAAEH,EAASY,MAAMC,KAAKR,UAAU,CAAC,SAASS,EAAyBP,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAyU,SAAuCI,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAO,CAAC,EAAEa,EAAWf,OAAOgB,KAAKV,GAAQ,IAAIH,EAAE,EAAEA,EAAEY,EAAWV,OAAOF,IAAII,EAAIQ,EAAWZ,GAAGW,EAASG,QAAQV,IAAM,IAAIL,EAAOK,GAAKD,EAAOC,IAAM,OAAOL,CAAM,CAAzjBgB,CAA8BZ,EAAOQ,GAAU,GAAGd,OAAOmB,sBAAsB,CAAC,IAAIC,EAAiBpB,OAAOmB,sBAAsBb,GAAQ,IAAIH,EAAE,EAAEA,EAAEiB,EAAiBf,OAAOF,IAAII,EAAIa,EAAiBjB,GAAGW,EAASG,QAAQV,IAAM,GAAGP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,CAAgU,IAAIoB,GAAU,IAAAC,aAAW,SAAUC,EAAKC,GAAK,IAAIC,EAAWF,EAAKG,MAAMA,OAAM,IAASD,EAAW,eAAeA,EAAWE,EAAUJ,EAAKK,KAAKA,OAAK,IAASD,EAAU,GAAGA,EAAUE,EAAKjB,EAAyBW,EAAK,CAAC,QAAQ,SAAS,OAAO,gBAAoB,MAAMzB,EAAS,CAAC0B,IAAIA,EAAIM,MAAM,6BAA6BC,MAAMH,EAAKI,OAAOJ,EAAKK,QAAQ,YAAYC,KAAK,OAAOC,OAAOT,EAAMU,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAST,GAAM,gBAAoB,WAAW,CAACU,OAAO,oBAAqB,IAAGlB,EAAUmB,UAAU,CAACd,MAAM,WAAiBE,KAAK,cAAoB,CAAC,WAAiB,cAAoBP,EAAUoB,YAAY,YAAY,S,kDCC1nD,MAAMC,EAASC,IAAU,SAACC,MAAAA,CAAIb,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOJ,MAAM,gCAAiCa,E,UAAO,SAACE,OAAAA,CACzIC,EAAE,+UACFZ,KAAMS,EAAMT,Q,oGCGP,MAAMa,EAAoB,CAACC,EAAUC,EAAAA,gBAAgBC,W,IAGxCC,EAFlB,MAAMC,GAAiBC,EAAAA,EAAAA,GAAkBL,GACnCM,GAAeC,EAAAA,EAAAA,GAAuB,IAAKH,GAEjD,OAD8BE,QAAZH,GAAAA,EAAAA,EAAAA,GAAYG,UAAZH,IAAAA,OAAAA,EAAAA,EAA2BK,OAAQ,CACrC,EAEX,SAASC,EAAsBC,G,IAETA,EAAAA,EAAqDA,EAAAA,EADhF,MAAMC,EAAmBZ,IACzB,OAAOY,IAAoBD,QAAAA,EAAAA,SAAAA,IAAAA,GAAgB,QAAhBA,EAAAA,EAAOE,iBAAPF,IAAAA,OAAAA,EAAAA,EAAkBG,WAAYC,YAAWC,EAAAA,EAAAA,aAAYL,QAAAA,EAAAA,SAAAA,IAAAA,GAAgB,QAAhBA,EAAAA,EAAOE,iBAAPF,IAAAA,OAAAA,EAAAA,EAAkBG,WAAaF,GAAkBK,WAAa,EAChJ,C,qKCXA,MAAMC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAa;;WAE9B,EAAGC,WAAYA,EAAMC;;;;;;;;;aASnB,EAAGD,YAAYE,EAAAA,EAAAA,IAAO,GAAKF,EAAMC;;;EAI/B,SAASE,GAAS,KAAEC,EAAI,KAAEC,IACvC,OAAO,UAACR,EAAAA,CAAaS,KAAMD,E,UACxBD,GACD,SAACG,MAAAA,C,SAAK,aAEV,C,0DCvBW9B,EAAO,Y,WCEX,MAAM+B,EAAiB,KACrB,UAAChC,MAAAA,CAAIb,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOJ,MAAM,6B,WACvE,SAACe,OAAAA,CACCC,EAAE,owCACFZ,KAAM2C,EAAAA,GAAUC,OAAOC,SACvBC,UAAWC,KAEb,SAACpC,OAAAA,CACCC,EAAE,6oDACFZ,KAAM2C,EAAAA,GAAUC,OAAOC,SACvBC,UAAWC,KAEb,SAACpC,OAAAA,CACCC,EAAE,i5DACFZ,KAAM2C,EAAAA,GAAUC,OAAOC,SACvBC,UAAWC,O,gFCRjB,MAAMC,EAAKhB,EAAAA,GAAOiB,EAAE;mBACD,EAAGf,WAAY,aAAaA,EAAMgB;;;;;;EAO/CC,EAAKnB,EAAAA,GAAOoB,EAAE;WACT,EAAGlB,WAAYA,EAAMW;;;;;;;;;;;;;;;;;EAkB1BQ,EAAQrB,EAAAA,GAAOsB,KAAK;;;;EAKpBC,EAAKvB,EAAAA,GAAOwB,EAAE;;;;;;;;;;;;;;;;;;EAmBdC,EAAiBzB,EAAAA,GAAO0B,GAAG;;;;EAK3BC,EAAO3B,EAAAA,GAAO4B,CAAC;WACV,EAAG1B,WAAYA,EAAM2B;;;IAG5BC,EAAAA;EAEEC,EAAoB/B,EAAAA,GAAO0B,GAAG;;;;IAIhCM,EAAAA;EAEEC,GAAcjC,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;EAInCC,EAAgB,EAAGC,eAChB,SAACL,EAAAA,CAAkBM,GAAG,oB,UAAoB,UAAChB,EAAAA,C,WAChD,SAACiB,QAAAA,C,UAAM,UAACtB,EAAAA,C,WACN,SAACG,EAAAA,C,UAAG,SAACoB,EAAAA,MAAKA,CAACC,QAAQ,iBACnB,SAACrB,EAAAA,C,UAAG,SAACoB,EAAAA,MAAKA,CAACC,QAAQ,oBACnB,SAACrB,EAAAA,C,UAAG,SAACoB,EAAAA,MAAKA,CAACC,QAAQ,iBACnB,SAACrB,EAAAA,C,UAAG,SAACoB,EAAAA,MAAKA,CAACC,QAAQ,iBACnB,SAACrB,EAAAA,C,UAAG,SAACoB,EAAAA,MAAKA,CAACC,QAAQ,wBAErB,SAACC,QAAAA,C,SAAOL,SAGNM,EAA0B,EAAGC,gBAC1B,SAAC3B,EAAAA,C,SAAI4B,MAAMD,GAAW3E,KAAK,MAAM6E,KAAI,CAACC,EAAGC,KACvC,SAACxB,EAAAA,C,UAAe,SAACU,EAAAA,CAAAA,IAARc,OAGPC,EAAuB,EAAGC,eAC9B,SAACd,EAAAA,C,SAAeS,MAAMK,GAAUjF,KAAK,MAAM6E,KAAI,CAACC,EAAGC,KACjD,SAACL,EAAAA,CAAoCC,UAAW,GAAlBI,OA6BzC,EA1BsB,EAAGG,aACvB,MAAM,qBAAEC,IAAyBC,EAAAA,EAAAA,MACjC,OAAO,SAACjB,EAAAA,C,SAAee,GAAUA,EAAOL,KAAI,CAACQ,EAAON,KAClD,MAAM,eAAEO,EAAc,UAAEC,EAAS,YAAEC,EAAW,YAAEC,EAAW,MAAEC,EAAK,UAAEC,EAAS,gBAAEC,GAAoBP,EAC7FQ,EAAiBH,EAAQP,EAAqB,CAAEW,MAAOlE,WAAW8D,GAAQK,KAAMC,EAAAA,GAAWC,WAAc,KAC/G,OAAKV,GAGE,UAACvC,EAAAA,C,WACN,SAACO,EAAAA,C,UAAG,SAAC2C,EAAAA,GAASA,CACZX,UAAWA,EACXD,eAAgBA,EAChBa,qBAAsBP,EACtBQ,WAAS,OAEX,SAAC7C,EAAAA,C,SAAIsC,IAAkB,UAACpC,EAAAA,C,UACrBgC,IAAeY,EAAAA,EAAAA,IAAmBZ,EAAa,MAC/CI,EACA,aAEH,SAACtC,EAAAA,C,SAAIiC,IAAe,SAAC7B,EAAAA,CAAKnB,KAAM,gCAAgCgD,IAAezH,OAAO,SAASuI,IAAI,sB,UAAuBC,EAAAA,EAAAA,gBAAef,EAAa,QACtJ,SAACjC,EAAAA,C,SAAIoC,IAAa,SAAChC,EAAAA,CAAKnB,KAAM,gCAAgCmD,IAAa5H,OAAO,SAASuI,IAAI,sB,UAAuBC,EAAAA,EAAAA,gBAAeZ,EAAW,QAChJ,SAACpC,EAAAA,C,SAAI+B,IAAkBkB,EAAAA,EAAAA,GAAkBlB,EAAexD,gBAd1CiD,GAFP,IAEOA,K,eCtGT,EAAQ,yC,+ICPnB,MAAM0B,GAASC,KAAG,MACZC,GAAOD,KAAG,MACVE,GAAMF,KAAG,MACFG,GAAYC,IACvB,MAAMC,EAAY,IAAIC,KAAKF,GAAYG,WAA6B,IAAID,MAAQC,UAC1EC,EAAOC,KAAKC,MAAML,EAAYH,IAC9BS,EAAQF,KAAKC,MAAML,EAAYH,GAAMD,IACrCW,EAAUH,KAAKC,MAAML,EAAYJ,GAAOF,IAC9C,MAAO,GAAY,IAATS,GAAaK,EAAAA,GAAAA,GAAkBL,EAAM,OAAS,MAAgB,IAAVG,GAAcE,EAAAA,GAAAA,GAAkBF,EAAO,QAAU,OAAME,EAAAA,GAAAA,GAAkBD,EAAS,WAAW,E,+DCO7J,MAEME,GAAaC,EAAAA,GAAG;;;;;;;;;kBASJ,EAAGvF,WAAYA,EAAMwF;;;;;;;;;;;;kBAYrB,EAAGxF,WAAYA,EAAMyF;;;EAIjCC,GAAY5F,EAAAA,GAAO0B,GAAG;;;;;;;;;;;EAYtBmE,GAAqB7F,EAAAA,GAAO0B,GAAG;;;;;sBAKf,EAAGxB,WAAYA,EAAM4F;sBACrB,EAAG5F,WAAYA,EAAMgB;;EAGrC6E,GAAY/F,EAAAA,GAAO0B,GAAG;;;EAItBsE,GAAWhG,EAAAA,GAAO0B,GAAG;;;;EAKrBuE,GAAejG,EAAAA,GAAO0B,GAAG;;;sBAGT,EAAGxB,QAAOgG,aAAYC,oBAAqBD,EAAahG,EAAMkG,SAAWD,EAAiBjG,EAAMC,QAAUD,EAAMgB;;;gBAGtH,EAAGmF,YAAaA,EAAS,OAAS;;;;IAI9Cb;EAEEc,GAAwBtG,EAAAA,GAAO0B,GAAG;;EAGlC6E,IAAWvG,EAAAA,EAAAA,IAAOwG,GAAAA,EAAWC,cAAc;WACtC,EAAGvG,WAAYA,EAAMwG;EAE1BC,GAAa3G,EAAAA,GAAO4B,CAAC;WAChB,EAAG1B,WAAYA,EAAMW;;;IAG5BiB,EAAAA;EAEE8E,GAAsB5G,EAAAA,GAAO0B,GAAG;;;;;;;;;EAUhCmF,GAAqB7G,EAAAA,GAAO0B,GAAG;;;;EAK/BoF,GAAY9G,EAAAA,GAAO4B,CAAC;;;;WAIf,EAAG1B,WAAYA,EAAMW;;;IAG5BiB,EAAAA;EAEEiF,GAA4B/G,EAAAA,GAAO0B,GAAG;WACjC,EAAGxB,WAAYA,EAAMW;;;;;EAM1BmG,GAAqBhH,EAAAA,GAAO0B,GAAG;;;;EAK/BuF,GAAcjH,EAAAA,GAAOkH,EAAE;;;;;;;;;;WAUlB,EAAGhH,WAAYA,EAAM2B;;EAG1BsF,GAA0BnH,EAAAA,GAAO0B,GAAG;;;EAIpC0F,GAAmBpH,EAAAA,GAAOqH,IAAI;;;;WAIzB,EAAGnH,WAAYA,EAAM2B;;IAE5BC,EAAAA;EAEEwF,GAAwBtH,EAAAA,GAAOqH,IAAI;;EAGnCE,IAAqBvH,EAAAA,EAAAA,IAAOwH,EAAAA,GAAa;;;EAIzCC,IAAczH,EAAAA,EAAAA,IAAO2B,GAAAA,GAAK;;EAG1B+F,IAAkB1H,EAAAA,EAAAA,IAAOC,EAAAA,GAAa;;;EAItC0H,GAAiB,EAAGnI,Y,IAQDoI,EAyBRpI,EAhCf,MAAMqI,GAAWC,EAAAA,GAAAA,MACXC,GAAclJ,EAAAA,EAAAA,KACdmJ,GAAmBC,EAAAA,EAAAA,IAAqBC,GAAUA,EAAMC,sBACxDC,GAAkBC,EAAAA,EAAAA,IAAcH,GAAUA,EAAME,kBAChDE,GAAkBD,EAAAA,EAAAA,IAAcH,GAAUA,EAAMK,SAChD,YAAE1I,EAAW,qBAAEsD,IAAyBC,EAAAA,EAAAA,MACxCwE,EAAUpI,EAAMgJ,YAAchJ,EAAMgJ,WAAWtM,OAAS,EAAIsD,EAAMgJ,WAAW,QAAK,EAClFC,GAAiBb,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAASc,OAAQ,IAAI1D,KAAK4C,EAAQc,YAAS,EAC5DC,GAAWC,EAAAA,EAAAA,UACf,IAAMb,GAAevI,EAAMqJ,uBAAyBd,EAAcvI,EAAMqJ,4BAAyB,GACjG,CAACd,EAAavI,EAAMqJ,yBAEhBC,GAAQC,EAAAA,GAAAA,YACRC,EAAe,KACnBV,IACAT,EAAS,iBACTO,EAAgB5I,IAChByJ,EAAAA,GAAAA,oBAAmBC,EAAAA,GAAaC,oBAAqB,CACnDC,mBAAoB5J,EAAM6J,eAAeC,QACzCC,SAAU/J,EAAMgK,WACbV,IAELd,EAAiByB,EAAAA,EAAqBC,QAAQ,EAEhD,OAAO,UAAC7D,GAAAA,C,WACN,UAACE,GAAAA,C,WACC,SAACS,GAAAA,EAAWmD,UAAS,CAACnM,MAAM,U,SAAWoK,EAAU,aAAe,kBAC/DA,IAAW,SAACF,GAAAA,CAAgBlH,KAAMoH,EAAQgC,e,UAAiBvF,EAAAA,EAAAA,IAAmBuD,EAAQnE,YAAa,YAEtG,SAACuC,GAAAA,C,SAAU4B,GAAU,sB,WACnB,UAACpB,GAAAA,EAAWqD,aAAY,CAACC,SAAS,OAAOC,WAAW,O,UACjDlK,EAAY,CACXiE,MAAsB,QAAftE,EAAAA,EAAME,iBAANF,IAAAA,OAAAA,EAAAA,EAAiBG,SACxBoE,KAAMC,EAAAA,GAAWC,WAElB,IACA,SAEF0E,IAAY,SAACnC,GAAAA,EAAWC,cAAa,CAACsD,WAAW,O,SAAQ5G,EAAqB,CAAEW,MAAO6E,EAAU5E,KAAMC,EAAAA,GAAWgG,qBAC/G,SAACxD,GAAAA,EAAWC,cAAa,CAACqD,SAAS,OAAOC,WAAW,O,SAAO,+DACjEtB,IAAkB,UAACjC,GAAAA,EAAWC,cAAa,CAACqD,SAAS,O,UACnD,cACAjF,GAAS4D,MAEVb,GAAyM,qB,UAAE,SAAC3B,GAAAA,CAAaC,YAAY,EAAOG,QAAQ,EAAMF,gBAAgB,EAAO8D,QAASjB,E,UAAc,SAACxC,GAAAA,EAAWmD,UAAS,CAACI,WAAW,O,SAAO,wBAAtU,SAAC9D,GAAAA,CAAaC,YAAY,EAAOG,QAAQ,EAAMF,gBAAgB,EAAM8D,QAASjB,E,UAAc,SAACxC,GAAAA,EAAWmD,UAAS,CAACI,WAAW,OAAOvM,MAAM,Q,SAAQ,a,EAG5J0M,IAAalK,EAAAA,EAAAA,IAAO2B,GAAAA,GAAK;;IAE3BG,EAAAA;EAEEqI,GAAa,EAAGC,iBAAgBC,oBACpC,MAAMnK,GAAQoK,EAAAA,EAAAA,YACd,OAAO,SAACzE,GAAAA,C,UAAmB,UAACe,GAAAA,C,WAC1B,SAAC2D,EAAAA,GAAiBA,CAAC1M,MAAM,OAAOC,OAAO,OAAON,MAAO0C,EAAMwG,YAC3D,SAACF,GAAAA,EAAWmD,UAAS,C,SAAC,kBACtB,UAAC9C,GAAAA,C,WACC,SAACL,GAAAA,EAAWC,cAAa,CAACqD,SAAS,OAAOC,WAAW,O,SAAO,uCAC5D,SAACG,GAAAA,CAAWM,GAAI,oBAAoBH,I,UAAiB,SAAC7D,GAAAA,EAAW7E,KAAI,CAACoI,WAAW,O,SAAQK,a,EAIlFK,GAAoB,EAAGjL,QAAOkL,iB,IAIlBC,EAwBgCC,EAAmCpL,EA3B1F,MAAMoL,GAAUC,EAAAA,EAAAA,MACV,YAAEhL,EAAW,qBAAEsD,IAAyBC,EAAAA,EAAAA,MACxCuH,EAAgBnL,EAAMsL,YAActL,EAAMsL,WAAW5O,OAAS,EAAIsD,EAAMsL,WAAW,QAAK,EACxFrC,GAAiBkC,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAejC,OAAQ,IAAI1D,KAAK2F,EAAcjC,YAAS,EACxEqC,GAAaC,EAAAA,EAAAA,IAAQC,GAAMA,EAAEF,aAC7BG,GAAiBF,EAAAA,EAAAA,IAAQC,GAAMA,EAAEC,iBACjCC,GAAsBH,EAAAA,EAAAA,IAAQC,GAAMA,EAAEE,sBACtCC,GAAYJ,EAAAA,EAAAA,IAAQC,GAAMA,EAAEG,YAC5BC,GAAcL,EAAAA,EAAAA,IAAQC,GAAMA,EAAEI,cAC9B1C,GAAWpJ,EAAAA,EAAAA,GAAsBC,GACjC8L,EAAe,CAAC,CAAEhC,QAAS9J,EAAM8J,QAASE,QAAShK,EAAMgK,WACvD+B,aAAcC,IAAgBC,EAAAA,EAAAA,GAAc,CAAEC,aAAcd,EAAQtB,SAAW,GAAIgC,eAAcK,MAAO,IAC1GC,GAAchD,EAAAA,EAAAA,UAAQ,K,IAAM4C,E,OAAAA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAc,EAAE,GAAE,CAACA,KAC/C,WAAEtF,IAAe0C,EAAAA,EAAAA,UAAQ,KACtB,CACL1C,WAAY6E,EAAWc,MACpBC,GAAStM,EAAMgK,UAAYsC,EAAKtM,MAAMgK,SAAWhK,EAAM8J,UAAYwC,EAAKtM,MAAM8J,aAGlF,CAAC9J,EAAOuL,IAQLgB,EAAUvM,EAAMkM,gBAAkBE,IAA8B,QAAfhB,EAAAA,EAAQtB,eAARsB,IAAAA,OAAAA,EAAAA,EAAiBoB,kBAAoC,QAAlBxM,EAAAA,EAAMkM,oBAANlM,IAAAA,OAAAA,EAAAA,EAAoBwM,eACxGC,EAAYtB,GAAiBnL,EAAME,UACzC,OAAO,UAACkG,GAAAA,C,WACN,UAACoB,GAAAA,C,WACC,UAACG,GAAAA,C,WACC,SAACM,GAAAA,CAAY+C,GAAI,oBAAoBhL,EAAM8J,U,UAAW,UAAClC,GAAAA,C,UACpDsD,EAAWN,gBACZ,SAAC9C,GAAAA,C,SAAuBoD,EAAWwB,aAAc,SAAC3E,GAAAA,CAAAA,WAEpD,SAACZ,GAAAA,CAAWsD,QAhBC,KACjBkC,OAAOC,MACLC,EAAAA,EAAAA,IAAsB7M,GACtB,YACA,SAAS2M,OAAOG,OAAOzO,MApPP,KAoPgC,WAAWsO,OAAOG,OAAOxO,OAnPxD,KAmPmF,2BAAqD,EAYtH/B,OAAO,S,UAAS,SAACyC,EAAAA,EAAKA,CAAAA,SAEzD,SAACyI,GAAAA,C,SAAazH,EAAMc,MAAQ,GAAGd,EAAM4K,mBAAmB5K,EAAMgK,eAE/DuC,GAAU,SAACpE,GAAAA,CAAenI,MAAOoM,IAAkBK,GAAY,UAACpG,GAAAA,C,WAC/D,UAACE,GAAAA,C,WACC,SAACS,GAAAA,EAAWmD,UAAS,CAACnM,MAAM,U,SAAU,gBACtC,SAACkK,GAAAA,CAAgBlH,KAAMmK,EAAcf,e,UAAiBvF,EAAAA,EAAAA,IAAmBsG,EAAclH,YAAa,YAEtG,UAACuC,GAAAA,C,WACC,UAACQ,GAAAA,EAAWqD,aAAY,CAACC,SAAS,OAAOC,WAAW,O,UACjDlK,EAAY,CAAEiE,MAAOtE,EAAME,UAAUC,SAAUoE,KAAMC,EAAAA,GAAWC,WAChE,UAEF0E,IAAY,SAACnC,GAAAA,EAAWC,cAAa,CAACsD,WAAW,O,SAAQ5G,EAAqB,CAAEW,MAAO6E,EAAU5E,KAAMC,EAAAA,GAAWgG,oBAEpHvB,GAAkBA,EAAiC,IAAIzD,OAAU,UAACuB,GAAAA,CAASuD,SAAS,O,UAClF,cACAjF,GAAS4D,OAEZ,SAAC/G,MAAAA,C,UAAI,SAAC4E,GAAAA,C,UAAsB,SAACL,GAAAA,CAC3BC,WAAYA,EACZG,QAAQ,EACRF,gBAAgB,EAChB8D,QAAS,KACP/D,EAAaiF,EAAoB,CAAC3L,IAAU0L,EAAe,CAAC1L,IACvD0G,GAAemF,GAClBD,GACF,E,UAEH,SAAC5E,GAAAA,EAAWmD,UAAS,CAACnM,MAAM,QAAQuM,WAAW,O,UAAO,SAAC1C,OAAAA,CAAKkF,cAAY,yB,SAA0BrG,EAAa,SAAW,2BACrG,SAACiE,GAAAA,CAAWC,eAAgBM,EAAWN,gBAAkB,kBAAmBC,cAAe7K,EAAM8J,UACxH2C,IAAa,UAAClF,GAAAA,C,UACQ,YAApBvH,EAAMgN,WAA2BhN,EAAMkM,eAAgB,SAAClF,GAAAA,EAAWiG,UAAS,CAACjP,MAAM,WAAWuM,WAAW,O,SAAO,aACjH,SAACjD,GAAAA,CACC/K,OAAO,SACPyE,KAAM,gCAAgChB,EAAMkM,eAC5CpH,IAAI,sB,SACgB,YAApB9E,EAAMgN,UAA0B,IAAK,UAACnF,OAAAA,C,UACrC,IACA0E,EAAU,MAAQvM,EAAMkM,eAAgBnH,EAAAA,EAAAA,gBAAe/E,EAAMkM,aAAc,a,8BClTpF,MAAMgB,GAAU1M,EAAAA,GAAO0B,GAAG;;;;;;;;;;;;EAapBiL,GAAS3M,EAAAA,GAAO0B,GAAG;WACd,EAAGxB,WAAYA,EAAMW;;;EAI1B+L,GAAO5M,EAAAA,GAAO0B,GAAG;WACZ,EAAGxB,WAAYA,EAAM2B;;;;EAK1BgL,GAAS7M,EAAAA,GAAOqH,IAAI;;;;;;IAMtBvF,EAAAA;EAEEgL,GAAc9M,EAAAA,GAAO4B,CAAC;WACjB,EAAG1B,WAAYA,EAAM2B;;;IAG5BC,EAAAA;EAEEiL,IAAW/M,EAAAA,EAAAA,IAAOgN,GAAAA,EAAK;;EAGvBC,GAAW,EAAGC,SAAQC,WACnB,UAACzL,MAAAA,C,WACN,SAACiL,GAAAA,C,SAAQO,KACT,SAACN,GAAAA,C,SAAMO,OAsCX,GAlCyB,EAAG3N,QAAOkL,iB,IA0BvB0C,EAzBV,MAAM,aAAEC,IAAiBjK,EAAAA,EAAAA,OACnB,QAAEkG,EAAO,QAAEE,EAAO,UAAEgD,EAAS,QAAEY,GAAY5N,GAC3C,YAAE8N,GAAgB5C,GACjB,CAAE6C,IAAaC,EAAAA,GAAAA,KAChBC,GAAOC,EAAAA,EAAAA,cAAY,KACvBH,EAAUjE,GAAW,GAAG,GACvB,CAACA,EAASiE,IACb,OAAO,UAACb,GAAAA,C,WACN,SAACO,GAAAA,CACCC,OAAO,mBACPC,MAAM,UAACN,GAAAA,CAAO5C,QAASwD,E,WACpBlJ,EAAAA,EAAAA,gBAAe+E,EAAS,GACxB,KACD,SAACyD,GAAAA,CAASrP,KAAM,WAGpB,SAACuP,GAAAA,CAASC,OAAO,WAAWC,KAAM3D,EAAQtN,OAAS,GAlB9ByR,EAkBkDnE,EAlBzC,GAAGmE,EAAKC,UAAU,EAAG,QAAQD,EAAKC,UAAUD,EAAKzR,OAAS,EAAGyR,EAAKzR,WAkBdsN,KAClF,SAACyD,GAAAA,CAASC,OAAO,iBAAiBC,KAAMX,KACxC,SAACS,GAAAA,CAASC,OAAO,aAAaC,KAAK,cACnC,SAACF,GAAAA,CACCC,OAAO,eACPC,KAAM,GAAGE,EAAa,CAAEvJ,MAAOwJ,GAAe,EAAGvJ,KAAMC,EAAAA,GAAW6J,mBAEpE,SAACZ,GAAAA,CACCC,OAAO,UACPC,MAAMC,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAS9D,WAAW,SAACwD,GAAAA,CACzBtM,KAAM,gCAAgC4M,EAAQ9D,UAC9ChF,IAAI,sBACJvI,OAAO,S,UACPwI,EAAAA,EAAAA,gBAAe6I,EAAQ9D,QAAS,UA/BhB,IAACqE,C,8BCnDzB,MAAMhB,GAAS3M,EAAAA,GAAO0B,GAAG;;mBAEN,EAAGoM,YAAaA,EAAS,oBAAsB;;sBAE5C,EAAG5N,WAAYA,EAAM4F;;;sBAGrB,EAAG5F,WAAYA,EAAMgB;;;;;;wBAMnB,EAAGhB,WAAYA,EAAMwF;;;;wBAIrB,EAAGxF,WAAYA,EAAMyF;;;gBAG7B,EACdzF,OACE6N,YAAcC,WAAUC,cAEtBxI,EAAAA,GAAG,oBAAoBuI,EAASE,UAAUD,EAAOE;EAEjDC,GAAgBpO,EAAAA,GAAOqH,IAAI;;;;WAItB,EAAGnH,WAAYA,EAAM2B;;;;EAK1BwM,GAAkBrO,EAAAA,GAAOqH,IAAI;;WAExB,EAAGnH,WAAYA,EAAMW;EAE1ByN,GAA2BtO,EAAAA,GAAOqH,IAAI;;;;;WAKjC,EAAGnH,WAAYA,EAAM2B;EAE1B0M,GAAmBvO,EAAAA,GAAO0B,GAAG;;sBAEb,EAAGxB,WAAYA,EAAMgB;;;sBAGrB,EAAGhB,WAAYA,EAAM4F;EAsB3C,GApBsB,EACpB1D,WACAoM,gBACAC,kBACAC,iBACGjQ,MAEH,MAAOqP,EAAQa,IAAaC,EAAAA,EAAAA,YAAWF,GACvC,OAAO,UAAChN,MAAAA,C,WACN,UAACiL,GAAMA,IAAKlO,EAAOqP,OAAQA,EAAQ7D,QAAS,IAAM0E,GAAWb,G,WAC3D,UAACM,GAAAA,C,UACEI,EACA,KACD,SAACH,GAAAA,C,SAAiBI,QAEpB,SAACH,GAAAA,C,SAA0BR,GAAS,SAAC3Q,GAAAA,EAASA,CAAAA,IAAM,SAAC0R,GAAAA,EAAWA,CAAAA,QAEjEf,IAAU,SAACS,GAAAA,C,SAAkBnM,M,kBCpElC,MAAM0M,GAAO9O,EAAAA,GAAO0B,GAAG;;;;;;;;;;;;;EAcjBqN,IAAoB/O,EAAAA,EAAAA,IAAO2B,GAAAA,GAAK;sBAChB,EAAGzB,WAAYA,EAAMgB;;;;;;IAMvCY,EAAAA;;EAGEkN,GAAYhP,EAAAA,GAAO0B,GAAG;WACjB,EAAGxB,WAAYA,EAAMW;;;;;;EAO1BoO,GAAajP,EAAAA,GAAO0B,GAAG;WAClB,EAAGxB,WAAYA,EAAM2B;;;;;;;;;;;EAY1BoL,GAAW,EAAGiC,QAAOC,wBACzB,MAAM,WAAEC,EAAU,YAAEC,GAAgBH,EAC9BI,EAASC,GAAAA,UACb,CAAEC,OAAQ,CAAC,KAAKJ,OAAgBC,QAChC,CACEI,YAAa,UAGjB,OAAO,UAACV,GAAAA,CAAkBvE,GAAI,oBAAoB2E,KAAqBG,I,WACrE,SAACN,GAAAA,C,SAAWI,KACZ,SAACH,GAAAA,C,SAAYI,M,EASjB,GANwB,EAAG7P,Y,IAEXgQ,EADd,MAAMA,GAAS5G,EAAAA,EAAAA,UAAQ,K,IAAMpJ,E,OAAY,QAAZA,EAAAA,EAAMgQ,cAANhQ,IAAAA,OAAAA,EAAAA,EAAckQ,MAAK,CAAC9N,EAAG+N,IAAM/N,EAAEwN,WAAWQ,cAAcD,EAAEP,aAAY,GAAE,CAAC5P,IACtG,OAAO,SAACsP,GAAAA,C,SAAMU,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ3M,KAAKqM,IAClB,SAACjC,GAAQA,CAAwBiC,MAAOA,EAAOC,kBAAmB3P,EAAM8J,SAAzD4F,EAAME,e,sDCzChC,MAAMS,GAA6B7P,EAAAA,GAAO0B,GAAG;;;;;;EAOvCoO,GAAiB9P,EAAAA,GAAO0B,GAAG;;;EAI3BqO,GAAS/P,EAAAA,GAAO0B,GAAG;;;;;EAMnBsO,GAAkBhQ,EAAAA,GAAO4B,CAAC;;WAErB,EAAG1B,WAAYA,EAAMW;;;;IAI5BiB,EAAAA;EAEEmO,GAAmBjQ,EAAAA,GAAO0B,GAAG;;;;EAK7BwO,GAAkBlQ,EAAAA,GAAOmQ,CAAC;;;;EAK1BC,GAAapQ,EAAAA,GAAOqH,IAAI;;WAEnB,EAAGnH,WAAYA,EAAMW;;;;;EAM1BwP,GAA2BrQ,EAAAA,GAAO0B,GAAG;;;;;WAKhC,EAAGxB,WAAYA,EAAM2B;;;;EAK1BF,IAAO3B,EAAAA,EAAAA,IAAOsQ,GAAAA,GAAW;WACpB,EAAGpQ,WAAYA,EAAMC;;;;;;IAM5B2B,EAAAA;EAEEyO,GAA0BvQ,EAAAA,GAAO0B,GAAG;;;;;IAKtCM,EAAAA;;;;;EAMEwO,GAAsBxQ,EAAAA,GAAO0B,GAAG;;sBAEhB,EAAGxB,WAAYA,EAAM4F;WAChC,EAAG5F,WAAYA,EAAMW;;;;;;;;EAS1B4P,GAAYzQ,EAAAA,GAAO0B,GAAG;;sBAEN,EAAGgP,qBAAsBA;;;;sBAIzB,EAAGxQ,WAAYA,EAAMgB;WAChC,EAAGhB,WAAYA,EAAM2B;;;;;IAK5BC,EAAAA;EAEE6O,GAAS3Q,EAAAA,GAAOqH,IAAI;;;EAIpBuJ,GAAM5Q,EAAAA,GAAO6Q,GAAG;;EAGhBC,GAAsB9Q,EAAAA,GAAO0B,GAAG;;;EAIhCqP,GAAiB/Q,EAAAA,GAAO0B,GAAG;;EAG3BsP,GAAgBhR,EAAAA,GAAOqH,IAAI;;EAG3B4J,GAAc,EAClBC,WACAC,eACA7Q,OACA8J,iBACAgH,oBAEO,UAACC,EAAAA,EAAGA,CAACC,SAAS,WAAWC,QAAQ,eAAeC,UAAU,S,WAC/D,SAACH,EAAAA,EAAGA,CAACI,GAAG,QAAQ3Q,UNpJO,YMoJ0BjD,MAAM,MAAM6T,UAAQ,EAACC,IAAKR,KAC3E,SAACN,MAAAA,CACC/P,UAAWC,EACX4Q,IAAKT,EACLU,IAAKtR,GAAQ8J,EACbyH,MAAO,CACL,WAAc,QAAQT,EAAcU,KAAK,cACzCC,SAAU,QACVC,UAAW,cAKbC,GAAqB,CACzB,CAACC,GAAAA,GAAkBC,UAAU,EAC7B,CAACD,GAAAA,GAAkBE,OAAO,EAC1B,CAACF,GAAAA,GAAkBG,WAAW,EAC9B,CAACH,GAAAA,GAAkBI,gBAAgB,GASrC,MAAMC,GAAY,EAChBC,YACAhT,QACA4R,oBAEA,MAAMS,EAAQ,CAAE,WAAc,QAAQT,EAAcU,KAAK,eACzD,OAAQU,GACN,IAAK,QACH,OAAO,SAACC,QAAAA,CAAMd,IAAKnS,EAAM2R,aAAcrQ,UAAWC,EAAc2R,UAAQ,EAAChB,UAAQ,EAACiB,OAAK,EAACC,MAAI,EAACf,MAAOA,IACtG,IAAK,QACH,OAAO,SAAChB,MAAAA,CAAI/P,UAAWC,EAAc4Q,IAAKnS,EAAM0R,SAAUU,IAAKpS,EAAMc,MAAQd,EAAM4K,eAAgByH,MAAOA,IAC5G,IAAK,QACH,OAAO,SAACZ,GAAAA,IAAgBzR,EAAO4R,cAAeA,IAChD,IAAK,QACH,OAAO,SAAC1P,MAAAA,CAAIZ,UNrLU,Y,UMqLwB,SAAC+R,SAAAA,CAC7CC,MAAOtT,EAAMc,MAAQ,GAAGd,EAAM4K,mBAAmB5K,EAAMgK,UACvDmI,IAAKnS,EAAM2R,aACXrQ,UNzLW,mDM0LX+Q,MAAOA,EACPkB,YAAa,EACbjV,OAAO,OACPD,MAAM,OACNmV,QAAQ,gBACRC,MAAM,0EACNC,iBAAe,MAErB,EAEWC,GAAe,EAAG3T,QAAOkL,iB,IA+BnB0I,EAAAA,EA2BF5T,EAAAA,EAAAA,EAyCG6T,EAeb7T,EAAkBA,EAjHvB,MAAM,qBAAE2D,IAAyBC,EAAAA,EAAAA,OAC1BgO,IAAiBxC,EAAAA,EAAAA,UAAS,CAAC,EAAG,EAAG,KAClC,eAAE0E,IAAmB1K,EAAAA,EAAAA,UACzB,K,IACkBpJ,EAAAA,EAAAA,E,OADZA,EAAM+T,OAAS,CACnBD,eAAgB9T,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAO+T,cAAP/T,IAAAA,GAAwB,QAAxBA,EAAAA,EAAegU,iBAAfhU,IAAAA,OAAAA,EAAAA,EAA0BiU,MACxC,EAAGC,SAAUC,M,IAA8BnU,E,OAAdmU,KAA0B,QAAZnU,EAAAA,EAAM+T,cAAN/T,IAAAA,OAAAA,EAAAA,EAAcoU,gBAAe,KAExE,CAAC,CAAC,GACN,CAACpU,EAAM+T,SAEHM,GAAiBjL,EAAAA,EAAAA,UAAQ,KACzBkL,EAAAA,GAAAA,GAAQtU,EAAM2R,cAAgB,IACzB,SACE4C,EAAAA,GAAAA,GAAQvU,EAAM2R,cAAgB,IAChC,QACE3R,EAAM2R,aACR,QAEF,SACN,CAAC3R,KACI8J,QAAS0K,EAAiBxK,QAASD,GAAa/J,GAChD6T,YAAaD,IAAiBa,EAAAA,EAAAA,GACpC,CACEC,cAAe,CAACC,EAAAA,gBAAgB/B,MAChC9I,QAAS0K,EACTxK,QAASD,GAEX,EACA,YAEI6K,EAAWhB,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAe,UAAfA,IAAAA,OAAAA,EAAAA,EAAmB1P,MAC9BG,EAAiBuQ,EAAWjR,EAAqB,CAAEW,MAAOlE,WAAWwU,GAAWrQ,KAAMC,EAAAA,GAAWC,gBAAc,GAC9GoQ,EAAeC,IAAmBC,EAAAA,EAAAA,YAAWC,EAAAA,EAAevC,IAC7DwC,GAAS/G,EAAAA,EAAAA,cACb,UAAwB,UAAEnK,IACxB,MAAMmR,EAAWL,EAAc9Q,GAC/B,OAAO,SAACkN,GAAAA,CACNC,gBAAiBgE,EAAWC,EAAAA,GAAKnX,MAAMsI,SAAWnF,EAAAA,GAAUC,OAAOM,SACnE+I,QAAS,IAAMqK,EAAgB,CAAE/Q,c,SACjCA,IAAc2O,GAAAA,GAAkBI,cAAgB,gBAAkB/O,EAAUqR,OAAO,GAAKrR,EAAUsR,MAAM,GAAG7I,cAAgB,KAC/H,GACA,CAACqI,KAEG,YACJhB,EACAyB,QAASC,EACTC,SAAUC,EACVC,QAASC,EACTC,MAAOC,IACLpB,EAAAA,EAAAA,GACF,CACEC,cAAerY,OAAOgB,KAAKwX,GAAexR,KAAKzG,GAAQA,IAAKkZ,QAAQlZ,GAAQiY,EAAcjY,KAC1FkN,QAAS0K,EACTxK,QAASD,GAEX,IAEIgK,EAAS/T,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAO+T,cAAP/T,IAAAA,GAAwB,QAAxBA,EAAAA,EAAegU,iBAAfhU,IAAAA,OAAAA,EAAAA,EAA2B,IACnC+V,EAAYC,IAAiB5G,EAAAA,EAAAA,WAAS,GAC7C,OAAO,UAACmB,GAAAA,C,WACN,SAACD,GAAAA,C,cAAmC,IAAnBtQ,EAAM0R,UAAuBqE,GAAa,SAAC/E,GAAAA,C,SAAoB,8BAAqE,UAAnBqD,GAAyC,SAACjD,GAAAA,CAC1K9P,UAAWC,EACX4Q,IAAKnS,EAAM0R,SACXU,IAAKpS,EAAMc,MAAQoK,EAAWN,eAC9BqL,QAAS,IAAMD,GAAc,MAC1B,SAACjD,GAAAA,CAAU/S,MAAOA,EAAOgT,UAAWqB,EAAgBzC,cAAeA,OACxE,SAACvB,GAAAA,C,UAA2B,SAACpF,GAAiBA,CAACjL,MAAOA,EAAOkL,WAAYA,MACxElL,EAAMgQ,SAAU,SAACkG,GAAaA,CAC7BnJ,cAAY,qBACZiC,cAAc,SACdE,aAAW,EACXD,gBAAiB6E,GAAkBC,GAAUA,EAAOoC,OAAQ,SAACC,EAAAA,GAAgBA,CAC3EjI,MAAM,UAACoD,GAAAA,C,WACL,SAACD,GAAAA,C,UAAoB,SAACD,MAAAA,CAAIc,IAAI,oBAAoBC,IAAI,WAAW/T,MAAO,QACxE,SAACmT,GAAAA,C,SAAc,gCAEjB6E,UAAU,M,UACX,UAACzF,GAAAA,C,UACC,WACAjN,EAAqB,CAAEW,MAAOyP,EAAOoC,MAAO5R,KAAMC,EAAAA,GAAW6J,mBAC7B,K,UACpC,SAACiI,GAAeA,CAACtW,MAAOA,OACzB,SAACkW,GAAaA,CACZlH,cAAc,WACdE,aAAW,EACXD,gBAAiB5K,EAAiB,cAAcA,aAAuB,EACvE0I,cAAY,uB,UACb,sB,WACC,UAACgE,GAAAA,CAAwBwF,qBAAmB,E,WAC1C,SAACtB,EAAAA,CAAOlR,UAAW2O,GAAAA,GAAkBC,WACrC,SAACsC,EAAAA,CAAOlR,UAAW2O,GAAAA,GAAkBE,QACrC,SAACqC,EAAAA,CAAOlR,UAAW2O,GAAAA,GAAkBG,YACrC,SAACoC,EAAAA,CAAOlR,UAAW2O,GAAAA,GAAkBI,mBAEtC6C,GAAuB,SAACnS,EAAoBA,CAACC,SAAU,KAASoQ,GAAeA,EAAYnX,OAAS,GAAI,SAAC8Z,GAAAA,EAAcA,CACtHC,KAAMhB,EACNiB,UAAWnB,EACXoB,OAAQhB,IAAwB,SAACtI,EAAAA,GAAMA,C,UAAC,SAACnM,EAAcA,CAAAA,KACvD0V,YAAY/C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAanX,SAAU,EACnCma,iBAAiB,oB,UAClB,SAACC,EAAaA,CAACpT,OAAQmQ,OAAmC,qB,UAAIgC,GAA0BhC,IAAe,UAAChD,GAAAA,C,WACvG,SAAC3O,MAAAA,C,SAAI,uBACL,SAACC,GAAIA,CAAC6I,GAAI,oBAAoBhL,EAAM8J,U,SAAW,0BAC9C,eAGL,SAACoM,GAAaA,CACZlH,cAAc,cACdE,aAAW,EACXD,gBAAiB,KACjBlC,cAAY,0B,UACb,sB,WACC,SAACoE,GAAAA,C,SAAO,SACPnR,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO4N,WAAwB,QAAb5N,EAAAA,EAAM4N,eAAN5N,IAAAA,OAAAA,EAAAA,EAAe8J,WAAW,SAAC0G,GAAAA,CAC5CxP,KAAM,gCAAgChB,EAAM4N,QAAQ9D,UACpDvN,OAAO,SACPuI,IAAI,sB,UACJC,EAAAA,EAAAA,gBAAe/E,EAAM4N,QAAQ9D,QAAS,MACxC,SAAC4G,GAAAA,CAAgB3D,cAAY,+B,SAAgC7B,EAAW6L,yBACxE,UAACtG,GAAAA,C,UACEvF,EAAW8L,cAAe,SAACnW,EAAQA,CAACC,KAAK,UAAUC,KAAM,GAAGmK,EAAW8L,gBACvE9L,EAAW+L,aAAc,SAACpW,EAAQA,CAACC,KAAK,UAAUC,KAAM,uBAAuBmK,EAAW+L,eAC1F/L,EAAWgM,aAAc,SAACrW,EAAQA,CAACC,KAAK,UAAUC,KAAMmK,EAAWgM,sBAGxE,SAAChB,GAAaA,CAAClH,cAAc,UAAUE,aAAW,EAACD,gBAAiB,KAAMlC,cAAY,4B,UAA4B,SAACoK,GAAgBA,CAACnX,MAAOA,EAAOkL,WAAYA,Q,0CCpUlK,MAAMkM,GAAa,QACbC,IAAQ7W,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;EAI7B4U,IAAW9W,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;;;uBAKf0U;;;EAIjBG,IAAS/W,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;EAI9B8U,IAAgBhX,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;;EAKrC+U,IAAcjX,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;EAInCgV,IAAiBlX,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;EAItCiV,IAAiBnX,EAAAA,EAAAA,IAAO+P,GAAAA,GAAO;;;;;;uBAMd6G;;;EAIjBQ,GAAkBpX,EAAAA,GAAO0B,GAAG;;;;;;;;EAS5B2V,IAAkBrX,EAAAA,EAAAA,IAAOkC,EAAAA,EAAc;;;;uBAItB0U;;;EAIjBU,GAAmBtX,EAAAA,GAAO0B,GAAG;;;;;;;;IAQ/B6V,GAAAA;;uBAEmBX;;;;EAKjBY,IAAexX,EAAAA,EAAAA,IAAO+P,GAAAA,GAAO;;;;uBAIZ6G;;;EAIjBa,IAAuBzX,EAAAA,EAAAA,IAAO+P,GAAAA,GAAO;;;;;uBAKpB6G;;;EAIjBc,IAAsB1X,EAAAA,EAAAA,IAAO+P,GAAAA,GAAO;;;;;uBAKnB6G;;;EAIVe,GAAsB,KACjC,MAAMzX,GAAQoK,EAAAA,EAAAA,YACd,OAAO,UAACgN,GAAAA,C,WACN,UAACE,GAAAA,C,WACC,SAACJ,GAAAA,C,UAAgB,SAACQ,GAAAA,GAAMA,CAAC3Z,OAAQiC,EAAMC,QAASzC,KAAK,YACrD,UAACga,GAAAA,C,WACC,UAAC3H,GAAAA,GAAMA,C,WACL,SAAC8G,GAAAA,CAAAA,IACD,SAACC,GAAAA,CAAAA,OAEH,SAACO,GAAAA,CAAAA,IACD,UAACtH,GAAAA,GAAMA,C,WACL,SAACgH,GAAAA,CAAAA,IACD,SAACC,GAAAA,CAAAA,UAGL,UAACG,GAAAA,C,WACC,SAACF,GAAAA,CAAAA,IACD,SAACC,GAAAA,CAAAA,IACD,SAACD,GAAAA,CAAAA,IACD,SAACA,GAAAA,CAAAA,UAGL,UAACQ,GAAAA,C,WACC,UAAC1H,GAAAA,GAAMA,C,WACL,SAAC8G,GAAAA,CAAAA,IACD,SAACC,GAAAA,CAAAA,OAEH,SAACO,GAAAA,CAAAA,IACD,UAACtH,GAAAA,GAAMA,C,WACL,SAACgH,GAAAA,CAAAA,IACD,SAACC,GAAAA,CAAAA,W,4ECxHT,MAAMa,GAAiB7X,EAAAA,GAAO0B,GAAG;;;;;;;;;;;;;;;;EAiB3BmO,GAA6B7P,EAAAA,GAAO0B,GAAG;;;;;;;EAmD7C,GA3CkB,KAChB,MAAM,QAAE8H,EAAU,GAAE,gBAAEwK,EAAkB,KAAO8D,EAAAA,GAAAA,OACzC,KAAExY,EAAI,QAAE4V,GCtCT,SAA4B5L,EAASE,G,IAO5BuO,EAAAA,EAAAA,EACKvY,EACHA,EAAAA,EAAAA,EACmCoI,EAAAA,EAAAA,EAiEVA,EA1EzC,MAAQtI,KAAMyY,EAAS,QAAE7C,IAAY8C,EAAAA,EAAAA,oBAAmB,CACtDC,UAAW,CACT3O,UACAE,aAGEhK,EAAQuY,QAAAA,EAAAA,SAAAA,IAAAA,GAAoB,QAApBA,EAAAA,EAAWG,iBAAXH,IAAAA,GAA8B,QAA9BA,EAAAA,EAAsBI,MAAM,UAA5BJ,IAAAA,OAAAA,EAAAA,EAAgCK,KACxC1N,EAAalL,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOkL,WACpB9C,EAAUpI,QAAAA,EAAAA,SAAAA,IAAAA,GAAe,QAAfA,EAAAA,EAAO6Y,gBAAP7Y,IAAAA,GAAyB,QAAzBA,EAAAA,EAAiB2Y,MAAM,UAAvB3Y,IAAAA,OAAAA,EAAAA,EAA2B4Y,KACrCE,GAAWC,EAAAA,EAAAA,aAAWC,EAAAA,EAAAA,IAAuB5Q,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAASlE,aAATkE,IAAAA,GAAqB,QAArBA,EAAAA,EAAgB6Q,aAAhB7Q,IAAAA,OAAAA,EAAAA,EAAuB9H,aAAc,MAAMA,WAC9F,OAAO8I,EAAAA,EAAAA,UACL,K,IAGUpJ,EAEQA,EACIA,EAAAA,EACEA,EAAAA,EAAAA,EACRA,EAAAA,EACIA,EACDoI,EACPpI,EAOGA,EACGA,EAAAA,EAMGA,EAAAA,EAEJA,EAAAA,EAAAA,EAAAA,EACWA,EAAAA,EAITA,EAAAA,EAQCA,EAEKA,EAAAA,EAAAA,EACRA,EAAAA,EAEEA,EACLA,EAAAA,EAKekL,EACHA,EAAAA,EACJA,EACJA,EACCA,EACDA,EACAA,EACCA,E,MA1DZ,CACLpL,KAAM,CACJ,CACE+C,GAAI7C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO6C,GACXiH,UACAoP,WAAgC,QAApBlZ,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO6Y,UACnBjO,eAAgB5K,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAOkL,kBAAPlL,IAAAA,OAAAA,EAAAA,EAAmBc,KACnCqY,iBAAkBnZ,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAOkL,kBAAPlL,IAAAA,GAAwB,QAAxBA,EAAAA,EAAmBoZ,aAAnBpZ,IAAAA,OAAAA,EAAAA,EAA0BqZ,IAC5C3H,SAAU1R,QAAAA,EAAAA,SAAAA,IAAAA,GAAY,QAAZA,EAAAA,EAAOoZ,aAAPpZ,IAAAA,OAAAA,EAAAA,EAAcqZ,IACxB1H,aAAc3R,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO2R,aACrB1N,YAAamE,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAASnE,YAAYuI,cAClC1L,KAAMd,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOc,KACbZ,UAAW,CACTC,SAAU2Y,EACVQ,UAAW,MACXC,aAAc,KACdC,UAAWV,GAEbW,QAASzZ,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO0Z,eAChBpO,WAAYtL,QAAAA,EAAAA,SAAAA,IAAAA,GAAe,QAAfA,EAAAA,EAAO6Y,gBAAP7Y,IAAAA,OAAAA,EAAAA,EAAiB2Y,MAAMtV,KAAKsW,IAC/B,IACFA,EAAYf,KACfgB,mBAAoBD,EAAYf,KAAKgB,mBAAqBC,KAAKC,MAAMH,EAAYf,KAAKgB,mBAAmBtZ,iBAAc,MAG3HyZ,cAAe/Z,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAOga,kBAAPha,IAAAA,OAAAA,EAAAA,EAAmBqZ,IAClCrP,UACAgD,UAAWhN,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAOkL,kBAAPlL,IAAAA,GAA+B,QAA/BA,EAAAA,EAAmBia,oBAAnBja,IAAAA,GAAoC,QAApCA,EAAAA,EAAkC,UAAlCA,IAAAA,OAAAA,EAAAA,EAAsCka,SACjDC,qBAAsBna,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAOkL,kBAAPlL,IAAAA,OAAAA,EAAAA,EAAmB0M,WACzCqH,OAAQ,CACNK,gBAAiB,gBAEjBJ,UAAWhU,QAAAA,EAAAA,SAAAA,IAAAA,GAAe,QAAfA,EAAAA,EAAOoa,gBAAPpa,IAAAA,OAAAA,EAAAA,EAAiBqD,KAAK0Q,IACxB,CACLsG,KAAMtG,EAAOsG,KACblE,MAAOpC,EAAOoC,MACdjC,SAAU,qBAIhBhI,aAAclM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOkM,aACrB0B,QAAS,CACP0M,iBAAiBta,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAO4N,eAAP5N,IAAAA,GAA4B,QAA5BA,EAAAA,EAAgBua,oBAAhBva,IAAAA,OAAAA,EAAAA,EAA8BqZ,MAAO,GACtDvP,SAAS9J,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAO4N,eAAP5N,IAAAA,OAAAA,EAAAA,EAAgB8J,UAAW,IAEtC0Q,aAAaxa,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAOwa,cAAe,GACnCxK,OAAQhQ,QAAAA,EAAAA,SAAAA,IAAAA,GAAa,QAAbA,EAAAA,EAAOgQ,cAAPhQ,IAAAA,OAAAA,EAAAA,EAAeqD,KAAKqM,IACnB,CAAEE,WAAYF,EAAM5O,MAAQ,GAAI+O,YAAaH,EAAMuJ,OAAS,QAGvE,CACElC,sBAAuB7L,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAYuP,YACnCC,mBAAoBxP,QAAAA,EAAAA,SAAAA,IAAAA,GAAiB,QAAjBA,EAAAA,EAAYkO,aAAZlO,IAAAA,OAAAA,EAAAA,EAAmBmO,IACvCzO,eAAgBM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAYpK,KAC5B4L,WAAYxB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAYwB,WACxBoB,YAAa5C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAYyP,UACzB1D,WAAY/L,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAY0P,YACxB1D,WAAYhM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAYgM,WACxBF,YAAa9L,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAY2P,cAG7BnF,UACD,GACD,CAAC5L,EAAS9J,EAAOkL,EAAY4N,EAAU1Q,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAASnE,YAAayR,EAAS1L,GAE1E,CDvC4B8Q,CAAmBtG,EAAiBxK,IACvDhK,EAAOkL,GAAcpL,EACtBib,GAAoB3R,EAAAA,EAAAA,UACxB,KAAO,CACLkK,OAAO0H,EAAAA,GAAAA,GAA+Bhb,EAAMc,KAAMoK,EAAWN,eAAgBZ,GAC7EoP,MAAOzM,OAAOsO,SAASC,OAAS,yBAA2B1G,EAAkB,IAAMxK,EACnFqP,IAAK1M,OAAOsO,SAASja,KACrByZ,YAAavP,EAAW6L,uBAAyB,kFAEnD,CAAC/W,EAAMc,KAAMoK,EAAW6L,sBAAuB7L,EAAWN,eAAgB4J,EAAiBxK,IAEvFmR,GAAWC,EAAAA,GAAAA,GAAmBL,GACpC,OAAIM,GAAAA,EAAuBC,SAAS9G,KAAoB+G,EAAAA,GAAAA,IAAU,IACzD,SAACC,GAAAA,GAAQA,CAACxQ,GAAG,QAAQyQ,SAAO,IAEjC/F,GACK,SAACyC,GAAmBA,CAAAA,IAEtB,sB,WACL,UAACuD,GAAAA,OAAMA,C,WACL,UAACpI,QAAAA,C,UACEtT,EAAMc,MAAQ,GACd,IACAd,EAAMc,KAAO,IAAM,GACnB,IACAoK,EAAWN,iBAAkB+Q,EAAAA,EAAAA,GAAE,eAC/B,iBAEFR,EAAS9X,KAAI,CAACuY,EAAKrY,KAAU,SAACsY,OAAAA,IAAqBD,GAAXrY,MACzC,SAACsY,OAAAA,CAAK/a,KAAK,SAASgb,QAAQ,gCAE9B,SAACC,GAAAA,QAAKA,CACJC,eAAa,EACbC,KAAMC,EAAAA,GAAkBC,iBACxBC,WAAY,CAAExS,mBAAoB4K,EAAiBzK,SAAUC,G,SAC3DhK,GAAWkL,GAAa,UAACmN,GAAAA,C,WAC3B,SAAC1E,GAAYA,CAACzI,WAAYA,EAAYlL,MAAOA,KAC7C,SAACqQ,GAA0BA,C,UAAC,SAACpF,GAAiBA,CAACC,WAAYA,EAAYlL,MAAOA,SAC5D,S,kIE/DjB,SAASqc,EAAgBC,EAAmBzZ,EAAI0Z,GACrD,GAAID,EAAkBE,IAAI3Z,GACxB,OAAOyZ,EAAkBG,IAAI5Z,GAE/B,MAAM6Z,EAAYH,GAAUnZ,MAAMuZ,KAAKJ,GAAQK,QAAO,CAACC,EAAS7c,K,IAAwBA,E,SAAX6c,KAAW7c,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO+T,QAAK,IAAI,GAIxG,OAHI2I,GACFJ,EAAkBQ,IAAIja,EAAI6Z,GAErBA,CACT,CACO,MAAMK,EAAe,CAAC/c,EAAOkb,IAE3B,oBAD2B,IAAlBlb,EAAM8J,QAAqB9J,EAAM8J,QAAU9J,EAAM6J,eAAeC,WAC/C9J,EAAMgK,UAAUkR,EAAS,WAAWA,IAAW,KAErErW,EAAqB,CAACZ,EAAa/F,EAAO,QACrD,OAAQ+F,EAAYuI,eAClB,KAAKwQ,EAAAA,GAAQC,QACX,OAAO,SAACC,EAAAA,GAA4BA,CAAC7e,MAAOH,EAAMI,OAAQJ,IAC5D,KAAK8e,EAAAA,GAAQG,UACX,OAAO,SAACC,EAAAA,GAA8BA,CAAC/e,MAAOH,EAAMI,OAAQJ,IAC9D,KAAK8e,EAAAA,GAAQK,KACX,OAAO,SAACC,EAAAA,GAA8BA,CAACjf,MAAOH,EAAMI,OAAQJ,EAAMqf,YAAYC,EAAAA,EAAAA,OAChF,KAAKR,EAAAA,GAAQS,KACX,OAAO,SAACC,EAAAA,GAA8BA,CAACrf,MAAOH,EAAMI,OAAQJ,IAC9D,KAAK8e,EAAAA,GAAQW,SACX,OAAO,SAACC,EAAAA,GAA6BA,CAACvf,MAAOH,EAAMI,OAAQJ,IAC7D,KAAK8e,EAAAA,GAAQa,KACX,OAAO,SAACC,EAAAA,GAAyBA,CAACzf,MAAOH,EAAMI,OAAQJ,EAAMqf,YAAYC,EAAAA,EAAAA,OAC3E,KAAKR,EAAAA,GAAQe,IACX,OAAO,SAACC,EAAAA,GAAwBA,CAAC3f,MAAOH,EAAMI,OAAQJ,EAAMqf,YAAYC,EAAAA,EAAAA,OAC1E,KAAKR,EAAAA,GAAQiB,KACX,OAAO,SAACC,EAAAA,GAAyBA,CAAC7f,MAAOH,EAAMI,OAAQJ,EAAMqf,YAAYC,EAAAA,EAAAA,OAC3E,KAAKR,EAAAA,GAAQmB,UACX,OAAO,SAACC,EAAAA,GAA8BA,CAAC/f,MAAOH,EAAMI,OAAQJ,IAC9D,KAAK8e,EAAAA,GAAQqB,YACb,IAAK,YACH,OAAO,SAACC,EAAAA,GAAgCA,CAACjgB,MAAOH,EAAMI,OAAQJ,IAChE,KAAK8e,EAAAA,GAAQuB,QACX,OAAO,SAACC,EAAAA,GAA4BA,CAACngB,MAAOH,EAAMI,OAAQJ,IAC5D,KAAK8e,EAAAA,GAAQyB,WACX,OAAO,SAACC,EAAAA,GAA+BA,CAACrgB,MAAOH,EAAMI,OAAQJ,IAC/D,KAAK8e,EAAAA,GAAQ2B,MACX,OAAO,SAACC,EAAAA,GAA0BA,CAACvgB,MAAOH,EAAMI,OAAQJ,IAC1D,QACE,OAAO,KACX,EAEW2O,EAAyB7M,GAC7B,uDAAuDA,EAAMc,KAAO+d,mBAAmB7e,EAAMc,MAAQ,GAAGd,EAAM4K,uBAAuB5K,EAAMgK,gBAAgBhK,EAAM4K,wDAAwD5K,EAAM8J,WAAW9J,EAAMgK,2BAE5O8U,EAA2B,CAACvC,EAAQwC,KAC/C,MAAMC,EAAsBzC,EAAO7f,OAAS,GAAK6f,EAAOlQ,MAAMrM,GAAUA,EAAM8J,UAAYyS,EAAO,GAAGzS,UAC9Fe,EAAgB0R,EAAO7f,OAAS,IAAMsiB,EAAsB,cAAczC,EAAO,GAAGzS,UAAY,GAChGmV,EAAY,oBAAoBD,EAAsB,GAAGzC,EAAO7f,cAAgB,GAAG6f,EAAO7f,UAAU6f,EAAO,GAAG3R,gBAAkB,sEAEzGC,MAC7BkU,IACA,MAAO,yCAAyCF,mBAAmBI,IAAY,EAe1E,MAAMC,EAAwB3C,I,IACqBA,EAAsCA,EAAyCA,EAAsHA,EAI/OA,EAJd,MAAM0C,EAA6B,GAAjB1C,EAAO7f,OAAc,kBAAqC,QAApB6f,EAAAA,EAAO,GAAGrR,kBAAVqR,IAAAA,OAAAA,EAAAA,EAAsBtF,YAAa,GAAuB,QAApBsF,EAAAA,EAAO,GAAGrR,kBAAVqR,IAAAA,OAAAA,EAAAA,EAAsBtF,cAAgB,GAAuB,QAApBsF,EAAAA,EAAO,GAAGrR,kBAAVqR,IAAAA,OAAAA,EAAAA,EAAsBzb,SAAW,IAAKyb,EAAO,GAAGzb,YAd7J+X,EAc4L0D,EAAO,GAAG4C,aAAe,GAbxOxZ,KAAKyZ,OAAOvG,EAASxV,KAAK+E,GAAYA,EAAQlE,OAAS,MAAO,YAa8M,QAAtBqY,EAAAA,EAAO,GAAG8C,oBAAV9C,IAAAA,OAAAA,EAAAA,EAAwBlZ,KAAKic,GAAWA,EAAOxe,OAAMwR,KAAK,wDAAwDyK,EAAaR,EAAO,MAAQ,iBAAiBA,EAAO7f,oFAXra,SAAgC6f,GAC9B,MAAMgD,EAAchD,EAAOlZ,KAAKrD,I,IAAUA,EAAgCA,E,OAAhB,QAAhBA,EAAAA,EAAMkL,kBAANlL,IAAAA,OAAAA,EAAAA,EAAkBiX,cAA8B,QAAhBjX,EAAAA,EAAMkL,kBAANlL,IAAAA,OAAAA,EAAAA,EAAkBc,OAAQ,EAAE,IAEtG,MAD0B,IAAI,IAAI0e,IAAID,IACblc,KAAK6H,IACrB,CACLA,aACAuU,MAAOlD,EAAOzG,QAAQ9V,I,IAAUA,EAA+CA,E,OAA/B,QAAhBA,EAAAA,EAAMkL,kBAANlL,IAAAA,OAAAA,EAAAA,EAAkBiX,cAAe/L,IAA8B,QAAhBlL,EAAAA,EAAMkL,kBAANlL,IAAAA,OAAAA,EAAAA,EAAkBc,QAASoK,CAAU,IAAE7H,KAAKrD,GAAUA,EAAMc,MAAQ,QAGzJ,CAIe4e,CAAuBnD,GAAQlZ,KAAI,EAAG6H,aAAYuU,WAAY,GAAGvU,KAAcuU,EAAMpc,KAAKiJ,GAASA,IAAMgG,KAAK,UAASA,KAAK,2BAErG,QAAtBiK,EAAAA,EAAO,GAAG8C,oBAAV9C,IAAAA,OAAAA,EAAAA,EAAwBlZ,KAAKic,GAAWA,EAAOxe,OAAMwR,KAAK,QAlB1E,IAA4BuG,EAmB1B,MAAO,yCAAyCgG,mBAAmBI,IAAY,C,kBC/F1E,SAASU,EAA4BC,EAAQ9e,GAClD,OAAI8e,EACK,OAASA,EAAS,cAEvB9e,EACK,OAASA,EAAO,cAElB,uBACT,CACO,SAASka,EAA+Bla,EAAM8J,EAAgBZ,GACnE,OAAIlJ,IAGA8J,GAAkBZ,EACbY,EAAiB,KAAOZ,EAE7BA,EACK,UAAYA,EAEd,sBACT,C","sources":["../../../node_modules/react-feather/dist/icons/chevron-up.js","components/Icons/Share.tsx","nft/hooks/useUsdPrice.ts","components/Tokens/TokenDetails/Resource.tsx","nft/components/common/Loading/LoadingSparkle.css.ts","nft/components/common/Loading/LoadingSparkle.tsx","nft/components/details/AssetActivity.tsx","nft/components/details/AssetDetails.css.ts","nft/utils/time.ts","nft/components/details/AssetPriceDetails.tsx","nft/components/details/DetailsContainer.tsx","nft/components/details/InfoContainer.tsx","nft/components/details/TraitsContainer.tsx","nft/components/details/AssetDetails.tsx","nft/components/details/AssetDetailsLoading.tsx","nft/pages/asset/Asset.tsx","graphql/data/nft/Details.ts","nft/utils/asset.tsx","shared-cloud/metatags.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var ChevronUp=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"polyline\",{points:\"18 15 12 9 6 15\"}))}));ChevronUp.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},ChevronUp.displayName=\"ChevronUp\";export default ChevronUp;","\"use strict\";\nexport const Share = (props) => <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path\n  d=\"M13 4.99092C13 4.09592 14.094 3.66096 14.709 4.31196L20.637 10.582C21.121 11.094 21.121 11.894 20.637 12.406L14.709 18.676C14.094 19.326 13 18.891 13 17.997V14.4919C5.437 14.4919 4.93602 16.962 4.96802 19.529C4.97402 20.019 4.32501 20.1811 4.08301 19.7561C3.46701 18.6751 3 17.1999 3 15.4909C3 8.99592 10 8.49702 13 8.49702V4.99092Z\"\n  fill={props.fill}\n/></svg>;\n","\"use strict\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useUSDPrice } from \"hooks/useUSDPrice\";\nimport useNativeCurrency from \"lib/hooks/useNativeCurrency\";\nimport tryParseCurrencyAmount from \"lib/utils/tryParseCurrencyAmount\";\nimport { UniverseChainId } from \"uniswap/src/types/chains\";\nexport const useNativeUsdPrice = (chainId = UniverseChainId.Mainnet) => {\n  const nativeCurrency = useNativeCurrency(chainId);\n  const parsedAmount = tryParseCurrencyAmount(\"1\", nativeCurrency);\n  const usdcValue = useUSDPrice(parsedAmount)?.data ?? 0;\n  return usdcValue;\n};\nexport function useUsdPriceofNftAsset(asset) {\n  const fetchedPriceData = useNativeUsdPrice();\n  return fetchedPriceData && asset?.priceInfo?.ETHPrice ? (parseFloat(formatEther(asset?.priceInfo?.ETHPrice)) * fetchedPriceData).toString() : \"\";\n}\n","\"use strict\";\nimport styled from \"lib/styled-components\";\nimport { darken } from \"polished\";\nimport { ExternalLink } from \"theme/components\";\nconst ResourceLink = styled(ExternalLink)`\n  display: flex;\n  color: ${({ theme }) => theme.accent1};\n  font-weight: 535;\n  font-size: 14px;\n  line-height: 20px;\n  gap: 4px;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.accent1)};\n    text-decoration: none;\n  }\n`;\nexport default function Resource({ name, link }) {\n  return <ResourceLink href={link}>\n    {name}\n    <sup>{\"\\u2197\"}</sup>\n  </ResourceLink>;\n}\n","import \"src/nft/components/common/Loading/LoadingSparkle.css.ts.vanilla.css!=!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/common/Loading/LoadingSparkle.css.ts.vanilla.css\\\",\\\"source\\\":\\\"QGtleWZyYW1lcyBfMWNmOWdudzAgewogIDAlIHsKICAgIG9wYWNpdHk6IDAuMjsKICB9CiAgMTAwJSB7CiAgICBvcGFjaXR5OiAxOwogIH0KfQouXzFjZjlnbncxOm50aC1jaGlsZCgxKSB7CiAgYW5pbWF0aW9uOiAwLjVzIGluZmluaXRlIF8xY2Y5Z253MDsKICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9Ci5fMWNmOWdudzE6bnRoLWNoaWxkKDIpIHsKICBhbmltYXRpb246IDAuNXMgaW5maW5pdGUgXzFjZjlnbncwOwogIGFuaW1hdGlvbi1kZWxheTogMC4xczsKICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9Ci5fMWNmOWdudzE6bnRoLWNoaWxkKDMpIHsKICBhbmltYXRpb246IDAuNXMgaW5maW5pdGUgXzFjZjlnbncwOwogIGFuaW1hdGlvbi1kZWxheTogMC4yczsKICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7CiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyOwp9\\\"}!../../../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var path = '_1cf9gnw1';","\"use strict\";\nimport * as styles from \"nft/components/common/Loading/LoadingSparkle.css\";\nimport { themeVars } from \"nft/css/sprinkles.css\";\nexport const LoadingSparkle = () => {\n  return <svg width=\"40\" height=\"41\" viewBox=\"0 0 40 41\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M17.8281 10.834C17.6159 9.88757 17.4333 9.13689 17.291 8.58997C17.1751 8.11971 16.9497 7.68339 16.6331 7.31649C16.2834 6.97574 15.8515 6.731 15.3791 6.60601C14.8206 6.43175 14.0365 6.24408 13.0457 6.04301C12.7771 5.98134 12.6321 5.83926 12.6321 5.61405C12.6286 5.56049 12.6369 5.50679 12.6564 5.45676C12.6758 5.40674 12.7061 5.36159 12.7449 5.32448C12.8303 5.25054 12.9343 5.20142 13.0457 5.18241C13.8337 5.03623 14.6127 4.84557 15.3791 4.61136C15.8508 4.48054 16.282 4.23345 16.6331 3.89283C16.9497 3.52593 17.1751 3.08961 17.291 2.61935C17.4468 2.06885 17.6258 1.32623 17.8281 0.39145C17.8791 0.123349 18.016 0 18.2416 0C18.4671 0 18.6095 0.131392 18.6739 0.39145C18.8726 1.32623 19.0516 2.06885 19.211 2.61935C19.3304 3.08988 19.5585 3.52599 19.8769 3.89283C20.229 4.23347 20.6611 4.48052 21.1336 4.61136C21.8997 4.84657 22.6788 5.03724 23.467 5.18241C23.576 5.18865 23.6782 5.23739 23.7515 5.31813C23.8249 5.39887 23.8635 5.50515 23.8591 5.61405C23.8591 5.83926 23.7275 5.98134 23.467 6.04301C22.6802 6.19136 21.9014 6.37926 21.1336 6.60601C20.6605 6.73103 20.2276 6.97574 19.8769 7.31649C19.5585 7.68333 19.3304 8.11943 19.211 8.58997C19.0472 9.12617 18.8672 9.88757 18.6739 10.834C18.6095 11.1021 18.4671 11.2281 18.2416 11.2281C18.016 11.2281 17.8737 11.0967 17.8281 10.834Z\"\n      fill={themeVars.colors.neutral2}\n      className={styles.path}\n    />\n    <path\n      d=\"M32.4448 19.8364C32.2192 18.6679 32.0079 17.7366 31.8166 17.0452C31.6743 16.4509 31.3902 15.8999 30.9885 15.4396C30.5445 15.0113 29.9992 14.7027 29.4037 14.5425C28.4447 14.2629 27.4703 14.0397 26.4853 13.874C26.1398 13.8226 25.9656 13.6426 25.9656 13.3369C25.9618 13.2674 25.9723 13.1978 25.9964 13.1324C26.0204 13.0671 26.0576 13.0074 26.1055 12.9569C26.2105 12.8597 26.3433 12.7977 26.4853 12.7798C27.4694 12.6134 28.4437 12.3931 29.4037 12.1198C30.0021 11.9667 30.549 11.6571 30.9885 11.2228C31.389 10.7583 31.6729 10.2049 31.8166 9.60859C32.0079 8.91721 32.2192 7.98584 32.4448 6.81449C32.4458 6.74608 32.4607 6.67858 32.4886 6.61609C32.5164 6.5536 32.5567 6.49743 32.6068 6.45096C32.657 6.40448 32.7161 6.3687 32.7806 6.34574C32.845 6.32278 32.9134 6.31313 32.9816 6.31739C33.2672 6.31739 33.4528 6.48309 33.5213 6.81449C33.7479 7.98584 33.9573 8.91721 34.1495 9.60859C34.2907 10.2036 34.5706 10.7567 34.9662 11.2228C35.404 11.6593 35.9516 11.9693 36.551 12.1198C37.515 12.3926 38.493 12.6129 39.4808 12.7798C39.5532 12.7803 39.6248 12.7958 39.6909 12.8254C39.757 12.855 39.8162 12.8981 39.8648 12.9518C39.9134 13.0055 39.9503 13.0687 39.9732 13.1375C39.9961 13.2063 40.0044 13.279 39.9977 13.3512C39.9977 13.6569 39.8263 13.8369 39.4808 13.8883C38.4922 14.0545 37.514 14.2778 36.551 14.5568C35.9543 14.7142 35.4084 15.0232 34.9662 15.4539C34.5695 15.916 34.2894 16.4666 34.1495 17.0595C33.9592 17.7509 33.7498 18.6813 33.5213 19.8507C33.4528 20.185 33.2758 20.3507 32.9816 20.3507C32.912 20.3546 32.8424 20.3442 32.777 20.32C32.7116 20.2958 32.6519 20.2585 32.6015 20.2103C32.5512 20.1621 32.5113 20.104 32.4843 20.0396C32.4573 19.9753 32.4439 19.9062 32.4448 19.8364Z\"\n      fill={themeVars.colors.neutral2}\n      className={styles.path}\n    />\n    <path\n      d=\"M12.6196 40.6995C12.5109 40.7023 12.4027 40.6829 12.3013 40.6422C12.2 40.6016 12.1075 40.5405 12.0294 40.4627C11.8673 40.3009 11.7574 40.0919 11.7145 39.8639C11.418 38.0492 11.1251 36.5322 10.8358 35.3128C10.6133 34.2663 10.2461 33.258 9.74531 32.3187C9.32818 31.5649 8.73049 30.9334 8.00907 30.4841C7.132 29.9745 6.18128 29.6124 5.19297 29.4117C4.03371 29.1449 2.58684 28.8918 0.852359 28.6523C0.616735 28.6254 0.397657 28.5147 0.23303 28.3393C0.0804808 28.1721 -0.00302245 27.9506 0.000117795 27.7214C-0.00358202 27.4921 0.0799998 27.2703 0.23303 27.1035C0.396979 26.9271 0.616416 26.8162 0.852359 26.7905C2.5886 26.5618 4.03812 26.3114 5.20091 26.0392C6.20136 25.8286 7.16449 25.4614 8.05671 24.9505C8.7902 24.5064 9.40286 23.8792 9.83794 23.1268C10.3473 22.1993 10.7151 21.1968 10.9284 20.1545C11.2054 18.9369 11.4701 17.4162 11.7224 15.5925C11.7547 15.3608 11.8619 15.147 12.0268 14.9855C12.1058 14.9052 12.1997 14.8418 12.3028 14.7993C12.406 14.7567 12.5164 14.7359 12.6276 14.7378C12.7392 14.7338 12.8506 14.7526 12.9551 14.7933C13.0596 14.834 13.1552 14.8956 13.2363 14.9747C13.398 15.1367 13.5079 15.3456 13.5513 15.5735C13.8583 17.3972 14.1565 18.9178 14.4459 20.1354C14.6712 21.1811 15.0382 22.189 15.5363 23.1295C15.9558 23.8807 16.5531 24.5108 17.2726 24.9614C18.1474 25.4733 19.095 25.8407 20.0807 26.0501C21.2347 26.3223 22.6789 26.5727 24.4134 26.8014C24.6493 26.8271 24.8688 26.938 25.0327 27.1144C25.185 27.2815 25.2677 27.5033 25.263 27.7323C25.2662 27.9634 25.1839 28.1872 25.0327 28.3583C24.8722 28.5382 24.6503 28.6474 24.4134 28.6632C22.9509 28.7659 21.4954 28.9559 20.0542 29.232C19.046 29.4136 18.075 29.7698 17.1826 30.2854C16.4365 30.7497 15.8216 31.4065 15.3987 32.1908C14.8949 33.1535 14.531 34.187 14.3188 35.2584C14.04 36.5068 13.7842 38.0429 13.5513 39.8666C13.5238 40.1013 13.4192 40.3193 13.2548 40.4845C13.1681 40.5618 13.0673 40.6207 12.9583 40.6576C12.8492 40.6945 12.7341 40.7087 12.6196 40.6995Z\"\n      fill={themeVars.colors.neutral2}\n      className={styles.path}\n    />\n  </svg>;\n};\n","\"use strict\";\nimport { OpacityHoverState, ScrollBarStyles } from \"components/Common/styles\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport styled from \"lib/styled-components\";\nimport { EventCell } from \"nft/components/collection/ActivityCells\";\nimport { getMarketplaceIcon } from \"nft/utils\";\nimport { getTimeDifference } from \"nft/utils/date\";\nimport { Trans } from \"uniswap/src/i18n\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst TR = styled.tr`\n  border-bottom: ${({ theme }) => `1px solid ${theme.surface3}`};\n  width: 100%;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\nconst TH = styled.th`\n  color: ${({ theme }) => theme.neutral2};\n  font-weight: 535;\n  font-size: 14px;\n  line-height: 20px;\n  width: 20%;\n\n  @media (max-width: 960px) {\n    &:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media (max-width: 720px) {\n    &:nth-child(2) {\n      display: none;\n    }\n  }\n`;\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: left;\n  width: 100%;\n`;\nconst TD = styled.td`\n  height: 56px;\n  padding: 8px 0px;\n  text-align: left;\n  vertical-align: middle;\n  width: 20%;\n\n  @media (max-width: 960px) {\n    &:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media (max-width: 720px) {\n    &:nth-child(2) {\n      display: none;\n    }\n  }\n`;\nconst PriceContainer = styled.div`\n  align-items: center;\n  display: flex;\n  gap: 8px;\n`;\nconst Link = styled.a`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`;\nconst ActivityContainer = styled.div`\n  max-height: 310px;\n  overflow: auto;\n\n  ${ScrollBarStyles}\n`;\nconst LoadingCell = styled(LoadingBubble)`\n  height: 20px;\n  width: 80px;\n`;\nconst ActivityTable = ({ children }) => {\n  return <ActivityContainer id=\"activityContainer\"><Table>\n    <thead><TR>\n      <TH><Trans i18nKey=\"nft.event\" /></TH>\n      <TH><Trans i18nKey=\"common.price\" /></TH>\n      <TH><Trans i18nKey=\"common.by\" /></TH>\n      <TH><Trans i18nKey=\"common.to\" /></TH>\n      <TH><Trans i18nKey=\"common.time\" /></TH>\n    </TR></thead>\n    <tbody>{children}</tbody>\n  </Table></ActivityContainer>;\n};\nconst LoadingAssetActivityRow = ({ cellCount }) => {\n  return <TR>{Array(cellCount).fill(null).map((_, index) => {\n    return <TD key={index}><LoadingCell /></TD>;\n  })}</TR>;\n};\nexport const LoadingAssetActivity = ({ rowCount }) => {\n  return <ActivityTable>{Array(rowCount).fill(null).map((_, index) => {\n    return <LoadingAssetActivityRow key={index} cellCount={5} />;\n  })}</ActivityTable>;\n};\nconst AssetActivity = ({ events }) => {\n  const { formatNumberOrString } = useFormatter();\n  return <ActivityTable>{events && events.map((event, index) => {\n    const { eventTimestamp, eventType, fromAddress, marketplace, price, toAddress, transactionHash } = event;\n    const formattedPrice = price ? formatNumberOrString({ input: parseFloat(price), type: NumberType.NFTToken }) : null;\n    if (!eventType) {\n      return null;\n    }\n    return <TR key={index}>\n      <TD><EventCell\n        eventType={eventType}\n        eventTimestamp={eventTimestamp}\n        eventTransactionHash={transactionHash}\n        eventOnly\n      /></TD>\n      <TD>{formattedPrice && <PriceContainer>\n        {marketplace && getMarketplaceIcon(marketplace, \"16\")}\n        {formattedPrice}\n        {\" ETH\"}\n      </PriceContainer>}</TD>\n      <TD>{fromAddress && <Link href={`https://etherscan.io/address/${fromAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">{shortenAddress(fromAddress, 2)}</Link>}</TD>\n      <TD>{toAddress && <Link href={`https://etherscan.io/address/${toAddress}`} target=\"_blank\" rel=\"noopener noreferrer\">{shortenAddress(toAddress, 2)}</Link>}</TD>\n      <TD>{eventTimestamp && getTimeDifference(eventTimestamp.toString())}</TD>\n    </TR>;\n  })}</ActivityTable>;\n};\nexport default AssetActivity;\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#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\\\"}!../../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/nft/components/details/AssetDetails.css.ts.vanilla.css!=!../../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/details/AssetDetails.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAA31U22rjMBR871eIQiCBKMjeXFyXQv9jWRbZOrZFFcvISuJ2yb+vbk7k1LsvRjkazZkzGmXzO/mUTcUuCfrzhNCRDrgBXjc6RyUV5fKFnBuEUbLfdcPq1SJ4e0NsCemG13DswplucnTIQq2QA+4byuQlR6aEUvvZ2c+ZqiUOe6u120xum6ou6PJA1ihJdmuU7syKbFLT+vq0GbWmTmsne665bHOkQFDNz2DbyjOoStimDWcMWlsL0hJCFvZnRxnjbY217MZiRP7jgZwWvRQn7cjdCWJXAiodloXUWh7DD+WdITNtR9e+ddx66yNjnfUG57x/OTjrowOHn4xqimlph3571uoEz78ciYZBYwalVNSrP7UMlOCtlz/dxaUUUuXhPlR92cNXtroBb0exrKoejKzM3+wjjW54+dFC3+co9YgZYjIdgTq5LiP8y1xGbtbK9MOmNAEWDkgFr1vcg6iMOdBqUBNQOR/e0cF7eu/p6EslhbA1vyqoGiPcSmtXTJ/n+ALFB9f4BnYdGe87QT9njrD/pCjKThwXZ6sb9D6jHUrVJhkBSE9aRlXPNBbHIIbZF87x9yMwTtEyeqIJSbfGD6dwM33/UxP323Njia8xkAZgJWDAjCso/YTmzk9H99zG6+Iajn08y4SniBoGYU54li1WnmWuOqEoZzSPr+06P/t+S/49evQC0/FvbMq+23tHJrLvLSPSLJA+RMQJ+wu7KiNAdQUAAA==\\\"}!../../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var audioControls = '_1yohfdwd';\nexport var column = '_1yohfdwb';\nexport var columnRight = '_1yohfdwc';\nexport var columns = '_1yohfdwa rgw6ez44r rgw6ez46x rgw6ez47l rgw6ez16r rgw6ez2e3 rgw6ez2en rgw6ez2fu rgw6ez2jl rgw6ez2k5 rgw6ez2lc rgw6ez28l rgw6ez295 rgw6ez2ac rgw6ez2p3 rgw6ez3ul rgw6ez3uh rgw6ez3vi';\nexport var container = '_1yohfdw4 rgw6ez44r rgw6ez47l rgw6ez3x';\nexport var creator = '_1yohfdw8';\nexport var embed = '_1yohfdw3 _1yohfdw1 rgw6ez819 rgw6ez1dr rgw6ez53';\nexport var embedContainer = '_1yohfdw2';\nexport var image = '_1yohfdw1 rgw6ez819 rgw6ez1dr rgw6ez53';\nexport var marketplace = 'rgw6ez80l';\nexport var tab = '_1yohfdw7 rgw6ezd3 rgw6ezbf rgw6eze9 rgw6ez4bf rgw6ez88d rgw6ez2t3 rgw6ez4ur rgw6ez7zd';","\"use strict\";\nimport ms from \"ms\";\nimport { roundAndPluralize } from \"nft/utils/roundAndPluralize\";\nconst MINUTE = ms(`1m`);\nconst HOUR = ms(`1h`);\nconst DAY = ms(`1d`);\nexport const timeLeft = (targetDate) => {\n  const countDown = new Date(targetDate).getTime() - (/* @__PURE__ */ new Date()).getTime();\n  const days = Math.floor(countDown / DAY);\n  const hours = Math.floor(countDown % DAY / HOUR);\n  const minutes = Math.floor(countDown % HOUR / MINUTE);\n  return `${days !== 0 ? roundAndPluralize(days, \"day\") : \"\"} ${hours !== 0 ? roundAndPluralize(hours, \"hour\") : \"\"} ${roundAndPluralize(minutes, \"minute\")}`;\n};\n","\"use strict\";\nimport { NFTEventName } from \"@uniswap/analytics-events\";\nimport { OpacityHoverState } from \"components/Common/styles\";\nimport { Share } from \"components/Icons/Share\";\nimport { useNftBalance } from \"graphql/data/nft/NftBalance\";\nimport { useAccount } from \"hooks/useAccount\";\nimport styled, { css, useTheme } from \"lib/styled-components\";\nimport { CancelListingIcon, VerifiedIcon } from \"nft/components/icons\";\nimport { useBag, useNativeUsdPrice, useProfilePageState, useSellAsset, useUsdPriceofNftAsset } from \"nft/hooks\";\nimport { ProfilePageStateType } from \"nft/types\";\nimport { generateTweetForAsset, getMarketplaceIcon, timeLeft } from \"nft/utils\";\nimport { useMemo } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ExternalLink, ThemedText } from \"theme/components\";\nimport { sendAnalyticsEvent } from \"uniswap/src/features/telemetry/send\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { useTrace } from \"utilities/src/telemetry/trace/TraceContext\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst TWITTER_WIDTH = 560;\nconst TWITTER_HEIGHT = 480;\nconst hoverState = css`\n  :hover::after {\n    border-radius: 12px;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${({ theme }) => theme.deprecated_stateOverlayHover};\n    z-index: 0;\n  }\n\n  :active::after {\n    border-radius: 12px;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${({ theme }) => theme.deprecated_stateOverlayPressed};\n    z-index: 0;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 24px;\n\n  @media (min-width: calc(960px + 1px)) {\n    position: fixed;\n    width: 360px;\n    margin-top: 20px;\n  }\n`;\nconst BestPriceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  background-color: ${({ theme }) => theme.surface1};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  border-radius: 16px;\n`;\nconst HeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst PriceRow = styled.div`\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n`;\nconst BuyNowButton = styled.div`\n  position: relative;\n  width: 100%;\n  background-color: ${({ theme, assetInBag, useAccentColor }) => assetInBag ? theme.critical : useAccentColor ? theme.accent1 : theme.surface3};\n  border-radius: 12px;\n  padding: 10px 12px;\n  margin-top: ${({ margin }) => margin ? \"12px\" : \"0px\"};\n  text-align: center;\n  cursor: pointer;\n\n  ${hoverState}\n`;\nconst BuyNowButtonContainer = styled.div`\n  position: relative;\n`;\nconst Tertiary = styled(ThemedText.BodySecondary)`\n  color: ${({ theme }) => theme.neutral3};\n`;\nconst UploadLink = styled.a`\n  color: ${({ theme }) => theme.neutral2};\n  cursor: pointer;\n\n  ${OpacityHoverState}\n`;\nconst NotForSaleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 48px 18px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst DiscoveryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst OwnerText = styled.a`\n  font-size: 16px;\n  font-weight: 535;\n  line-height: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`;\nconst OwnerInformationContainer = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 8px;\n`;\nconst AssetInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nconst AssetHeader = styled.h1`\n  display: -webkit-box;\n  align-items: center;\n  font-size: 28px;\n  font-weight: 535;\n  line-height: 36px;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => theme.neutral1};\n  margin: 0;\n`;\nconst CollectionNameContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst CollectionHeader = styled.span`\n  font-size: 16px;\n  font-weight: 485;\n  line-height: 24px;\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${OpacityHoverState};\n`;\nconst VerifiedIconContainer = styled.span`\n  position: relative;\n`;\nconst StyledVerifiedIcon = styled(VerifiedIcon)`\n  position: absolute;\n  top: 0px;\n`;\nconst DefaultLink = styled(Link)`\n  text-decoration: none;\n`;\nconst MarketplaceIcon = styled(ExternalLink)`\n  display: flex;\n  align-items: center;\n`;\nconst OwnerContainer = ({ asset }) => {\n  const navigate = useNavigate();\n  const ethUsdPrice = useNativeUsdPrice();\n  const setSellPageState = useProfilePageState((state) => state.setProfilePageState);\n  const selectSellAsset = useSellAsset((state) => state.selectSellAsset);\n  const resetSellAssets = useSellAsset((state) => state.reset);\n  const { formatEther, formatNumberOrString } = useFormatter();\n  const listing = asset.sellOrders && asset.sellOrders.length > 0 ? asset.sellOrders[0] : void 0;\n  const expirationDate = listing?.endAt ? new Date(listing.endAt) : void 0;\n  const USDPrice = useMemo(\n    () => ethUsdPrice && asset.floor_sell_order_price ? ethUsdPrice * asset.floor_sell_order_price : void 0,\n    [ethUsdPrice, asset.floor_sell_order_price]\n  );\n  const trace = useTrace();\n  const goToListPage = () => {\n    resetSellAssets();\n    navigate(\"/nfts/profile\");\n    selectSellAsset(asset);\n    sendAnalyticsEvent(NFTEventName.NFT_SELL_ITEM_ADDED, {\n      collection_address: asset.asset_contract.address,\n      token_id: asset.tokenId,\n      ...trace\n    });\n    setSellPageState(ProfilePageStateType.LISTING);\n  };\n  return <BestPriceContainer>\n    <HeaderRow>\n      <ThemedText.SubHeader color=\"accent1\">{listing ? \"Your Price\" : \"List for Sale\"}</ThemedText.SubHeader>\n      {listing && <MarketplaceIcon href={listing.marketplaceUrl}>{getMarketplaceIcon(listing.marketplace, \"20\")}</MarketplaceIcon>}\n    </HeaderRow>\n    <PriceRow>{listing ? <>\n      <ThemedText.MediumHeader fontSize=\"28px\" lineHeight=\"36px\">\n        {formatEther({\n          input: asset.priceInfo?.ETHPrice,\n          type: NumberType.NFTToken\n        })}\n        {\" \"}\n        {\"ETH\"}\n      </ThemedText.MediumHeader>\n      {USDPrice && <ThemedText.BodySecondary lineHeight=\"24px\">{formatNumberOrString({ input: USDPrice, type: NumberType.FiatNFTToken })}</ThemedText.BodySecondary>}\n    </> : <ThemedText.BodySecondary fontSize=\"14px\" lineHeight=\"20px\">Get the best price for your NFT by selling with Uniswap.</ThemedText.BodySecondary>}</PriceRow>\n    {expirationDate && <ThemedText.BodySecondary fontSize=\"14px\">\n      {\"Sale ends: \"}\n      {timeLeft(expirationDate)}\n    </ThemedText.BodySecondary>}\n    {!listing ? <BuyNowButton assetInBag={false} margin={true} useAccentColor={true} onClick={goToListPage}><ThemedText.SubHeader lineHeight=\"20px\" color=\"white\">List</ThemedText.SubHeader></BuyNowButton> : <><BuyNowButton assetInBag={false} margin={true} useAccentColor={false} onClick={goToListPage}><ThemedText.SubHeader lineHeight=\"20px\">Adjust listing</ThemedText.SubHeader></BuyNowButton></>}\n  </BestPriceContainer>;\n};\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  ${OpacityHoverState}\n`;\nconst NotForSale = ({ collectionName, collectionUrl }) => {\n  const theme = useTheme();\n  return <BestPriceContainer><NotForSaleContainer>\n    <CancelListingIcon width=\"79px\" height=\"79px\" color={theme.neutral3} />\n    <ThemedText.SubHeader>Not for sale</ThemedText.SubHeader>\n    <DiscoveryContainer>\n      <ThemedText.BodySecondary fontSize=\"14px\" lineHeight=\"20px\">Discover similar NFTs for sale in</ThemedText.BodySecondary>\n      <StyledLink to={`/nfts/collection/${collectionUrl}`}><ThemedText.Link lineHeight=\"20px\">{collectionName}</ThemedText.Link></StyledLink>\n    </DiscoveryContainer>\n  </NotForSaleContainer></BestPriceContainer>;\n};\nexport const AssetPriceDetails = ({ asset, collection }) => {\n  const account = useAccount();\n  const { formatEther, formatNumberOrString } = useFormatter();\n  const cheapestOrder = asset.sellorders && asset.sellorders.length > 0 ? asset.sellorders[0] : void 0;\n  const expirationDate = cheapestOrder?.endAt ? new Date(cheapestOrder.endAt) : void 0;\n  const itemsInBag = useBag((s) => s.itemsInBag);\n  const addAssetsToBag = useBag((s) => s.addAssetsToBag);\n  const removeAssetsFromBag = useBag((s) => s.removeAssetsFromBag);\n  const toggleBag = useBag((s) => s.toggleBag);\n  const bagExpanded = useBag((s) => s.bagExpanded);\n  const USDPrice = useUsdPriceofNftAsset(asset);\n  const assetsFilter = [{ address: asset.address, tokenId: asset.tokenId }];\n  const { walletAssets: ownerAssets } = useNftBalance({ ownerAddress: account.address ?? \"\", assetsFilter, first: 1 });\n  const walletAsset = useMemo(() => ownerAssets?.[0], [ownerAssets]);\n  const { assetInBag } = useMemo(() => {\n    return {\n      assetInBag: itemsInBag.some(\n        (item) => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n      )\n    };\n  }, [asset, itemsInBag]);\n  const shareTweet = () => {\n    window.open(\n      generateTweetForAsset(asset),\n      \"newwindow\",\n      `left=${(window.screen.width - TWITTER_WIDTH) / 2}, top=${(window.screen.height - TWITTER_HEIGHT) / 2}, width=${TWITTER_WIDTH}, height=${TWITTER_HEIGHT}`\n    );\n  };\n  const isOwner = asset.ownerAddress && !!walletAsset && account.address?.toLowerCase() === asset.ownerAddress?.toLowerCase();\n  const isForSale = cheapestOrder && asset.priceInfo;\n  return <Container>\n    <AssetInfoContainer>\n      <CollectionNameContainer>\n        <DefaultLink to={`/nfts/collection/${asset.address}`}><CollectionHeader>\n          {collection.collectionName}\n          <VerifiedIconContainer>{collection.isVerified && <StyledVerifiedIcon />}</VerifiedIconContainer>\n        </CollectionHeader></DefaultLink>\n        <UploadLink onClick={shareTweet} target=\"_blank\"><Share /></UploadLink>\n      </CollectionNameContainer>\n      <AssetHeader>{asset.name ?? `${asset.collectionName} #${asset.tokenId}`}</AssetHeader>\n    </AssetInfoContainer>\n    {isOwner ? <OwnerContainer asset={walletAsset} /> : isForSale ? <BestPriceContainer>\n      <HeaderRow>\n        <ThemedText.SubHeader color=\"accent1\">Best Price</ThemedText.SubHeader>\n        <MarketplaceIcon href={cheapestOrder.marketplaceUrl}>{getMarketplaceIcon(cheapestOrder.marketplace, \"20\")}</MarketplaceIcon>\n      </HeaderRow>\n      <PriceRow>\n        <ThemedText.MediumHeader fontSize=\"28px\" lineHeight=\"36px\">\n          {formatEther({ input: asset.priceInfo.ETHPrice, type: NumberType.NFTToken })}\n          {\" ETH\"}\n        </ThemedText.MediumHeader>\n        {USDPrice && <ThemedText.BodySecondary lineHeight=\"24px\">{formatNumberOrString({ input: USDPrice, type: NumberType.FiatNFTToken })}</ThemedText.BodySecondary>}\n      </PriceRow>\n      {expirationDate && expirationDate > /* @__PURE__ */ new Date() && <Tertiary fontSize=\"14px\">\n        {\"Sale ends: \"}\n        {timeLeft(expirationDate)}\n      </Tertiary>}\n      <div><BuyNowButtonContainer><BuyNowButton\n        assetInBag={assetInBag}\n        margin={true}\n        useAccentColor={true}\n        onClick={() => {\n          assetInBag ? removeAssetsFromBag([asset]) : addAssetsToBag([asset]);\n          if (!assetInBag && !bagExpanded) {\n            toggleBag();\n          }\n        }}\n      ><ThemedText.SubHeader color=\"white\" lineHeight=\"20px\"><span data-testid=\"nft-details-toggle-bag\">{assetInBag ? \"Remove\" : \"Add to Bag\"}</span></ThemedText.SubHeader></BuyNowButton></BuyNowButtonContainer></div>\n    </BestPriceContainer> : <NotForSale collectionName={collection.collectionName ?? \"this collection\"} collectionUrl={asset.address} />}\n    {isForSale && <OwnerInformationContainer>\n      {asset.tokenType !== \"ERC1155\" && asset.ownerAddress && <ThemedText.BodySmall color=\"neutral2\" lineHeight=\"20px\">Seller:</ThemedText.BodySmall>}\n      <OwnerText\n        target=\"_blank\"\n        href={`https://etherscan.io/address/${asset.ownerAddress}`}\n        rel=\"noopener noreferrer\"\n      >{asset.tokenType === \"ERC1155\" ? \"\" : <span>\n        {\" \"}\n        {isOwner ? \"You\" : asset.ownerAddress && shortenAddress(asset.ownerAddress, 2)}\n      </span>}</OwnerText>\n    </OwnerInformationContainer>}\n  </Container>;\n};\n","\"use strict\";\nimport { OpacityHoverState } from \"components/Common/styles\";\nimport useCopyClipboard from \"hooks/useCopyClipboard\";\nimport styled from \"lib/styled-components\";\nimport { useCallback } from \"react\";\nimport { Copy } from \"react-feather\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst Details = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 40px;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 450px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\nconst Header = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  line-height: 20px;\n`;\nconst Body = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 14px;\n  line-height: 20px;\n  margin-top: 8px;\n`;\nconst Center = styled.span`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  gap: 8px;\n\n  ${OpacityHoverState}\n`;\nconst CreatorLink = styled.a`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`;\nconst CopyIcon = styled(Copy)`\n  cursor: pointer;\n`;\nconst GridItem = ({ header, body }) => {\n  return <div>\n    <Header>{header}</Header>\n    <Body>{body}</Body>\n  </div>;\n};\nconst stringShortener = (text) => `${text.substring(0, 4)}...${text.substring(text.length - 4, text.length)}`;\nconst DetailsContainer = ({ asset, collection }) => {\n  const { formatNumber } = useFormatter();\n  const { address, tokenId, tokenType, creator } = asset;\n  const { totalSupply } = collection;\n  const [, setCopied] = useCopyClipboard();\n  const copy = useCallback(() => {\n    setCopied(address ?? \"\");\n  }, [address, setCopied]);\n  return <Details>\n    <GridItem\n      header=\"Contract address\"\n      body={<Center onClick={copy}>\n        {shortenAddress(address, 2)}\n        {\" \"}\n        <CopyIcon size={13} />\n      </Center>}\n    />\n    <GridItem header=\"Token ID\" body={tokenId.length > 9 ? stringShortener(tokenId) : tokenId} />\n    <GridItem header=\"Token standard\" body={tokenType} />\n    <GridItem header=\"Blockchain\" body=\"Ethereum\" />\n    <GridItem\n      header=\"Total supply\"\n      body={`${formatNumber({ input: totalSupply ?? 0, type: NumberType.WholeNumber })}`}\n    />\n    <GridItem\n      header=\"Creator\"\n      body={creator?.address && <CreatorLink\n        href={`https://etherscan.io/address/${creator.address}`}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >{shortenAddress(creator.address, 2)}</CreatorLink>}\n    />\n  </Details>;\n};\nexport default DetailsContainer;\n","\"use strict\";\nimport styled, { css } from \"lib/styled-components\";\nimport { useState } from \"react\";\nimport { ChevronDown, ChevronUp } from \"react-feather\";\nconst Header = styled.div`\n  display: flex;\n  border-radius: ${({ isOpen }) => isOpen ? \"16px 16px 0px 0px\" : \"16px\"};\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.surface1};\n  padding: 14px 20px;\n  cursor: pointer;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 28px;\n  width: 100%;\n  align-items: center;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.deprecated_stateOverlayHover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.deprecated_stateOverlayPressed};\n  }\n\n  transition: ${({\n  theme: {\n    transition: { duration, timing }\n  }\n}) => css`background-color ${duration.medium} ${timing.ease}`};\n`;\nconst PrimaryHeader = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 535;\n  line-height: 28px;\n  font-size: 20px;\n`;\nconst SecondaryHeader = styled.span`\n  font-size: 12px;\n  color: ${({ theme }) => theme.neutral2};\n`;\nconst SecondaryHeaderContainer = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 32px;\n  color: ${({ theme }) => theme.neutral1};\n`;\nconst ContentContainer = styled.div`\n  padding: 20px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  border-top: none;\n  border-radius: 0px 0px 16px 16px;\n  background-color: ${({ theme }) => theme.surface1};\n`;\nconst InfoContainer = ({\n  children,\n  primaryHeader,\n  secondaryHeader,\n  defaultOpen,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(!!defaultOpen);\n  return <div>\n    <Header {...props} isOpen={isOpen} onClick={() => setIsOpen(!isOpen)}>\n      <PrimaryHeader>\n        {primaryHeader}\n        {\" \"}\n        <SecondaryHeader>{secondaryHeader}</SecondaryHeader>\n      </PrimaryHeader>\n      <SecondaryHeaderContainer>{isOpen ? <ChevronUp /> : <ChevronDown />}</SecondaryHeaderContainer>\n    </Header>\n    {isOpen && <ContentContainer>{children}</ContentContainer>}\n  </div>;\n};\nexport default InfoContainer;\n","\"use strict\";\nimport { OpacityHoverState } from \"components/Common/styles\";\nimport styled from \"lib/styled-components\";\nimport qs from \"query-string\";\nimport { useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 16px;\n  max-width: 780px;\n\n  @media (max-width: 1080px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 420px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\nconst GridItemContainer = styled(Link)`\n  background-color: ${({ theme }) => theme.surface3};\n  border-radius: 12px;\n  cursor: pointer;\n  padding: 12px;\n  text-decoration: none;\n\n  ${OpacityHoverState}\n  min-width: 0;\n`;\nconst TraitType = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  font-weight: 535;\n  font-size: 10px;\n  line-height: 12px;\n  white-space: nowrap;\n  width: 100%;\n`;\nconst TraitValue = styled.div`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 4px;\n  display: inline-block;\n\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 100%;\n`;\nconst GridItem = ({ trait, collectionAddress }) => {\n  const { trait_type, trait_value } = trait;\n  const params = qs.stringify(\n    { traits: [`(\"${trait_type}\",\"${trait_value}\")`] },\n    {\n      arrayFormat: \"comma\"\n    }\n  );\n  return <GridItemContainer to={`/nfts/collection/${collectionAddress}?${params}`}>\n    <TraitType>{trait_type}</TraitType>\n    <TraitValue>{trait_value}</TraitValue>\n  </GridItemContainer>;\n};\nconst TraitsContainer = ({ asset }) => {\n  const traits = useMemo(() => asset.traits?.sort((a, b) => a.trait_type.localeCompare(b.trait_type)), [asset]);\n  return <Grid>{traits?.map((trait) => {\n    return <GridItem key={trait.trait_type} trait={trait} collectionAddress={asset.address} />;\n  })}</Grid>;\n};\nexport default TraitsContainer;\n","\"use strict\";\nimport { OpacityHoverState, ScrollBarStyles } from \"components/Common/styles\";\nimport Resource from \"components/Tokens/TokenDetails/Resource\";\nimport { MouseoverTooltip } from \"components/Tooltip\";\nimport { Box } from \"components/deprecated/Box\";\nimport { useNftActivity } from \"graphql/data/nft/NftActivity\";\nimport styled from \"lib/styled-components\";\nimport { Center } from \"nft/components/Flex\";\nimport { reduceFilters } from \"nft/components/collection/Activity\";\nimport { LoadingSparkle } from \"nft/components/common/Loading/LoadingSparkle\";\nimport AssetActivity, { LoadingAssetActivity } from \"nft/components/details/AssetActivity\";\nimport * as styles from \"nft/components/details/AssetDetails.css\";\nimport { AssetPriceDetails } from \"nft/components/details/AssetPriceDetails\";\nimport DetailsContainer from \"nft/components/details/DetailsContainer\";\nimport InfoContainer from \"nft/components/details/InfoContainer\";\nimport TraitsContainer from \"nft/components/details/TraitsContainer\";\nimport { themeVars, vars } from \"nft/css/sprinkles.css\";\nimport { ActivityEventType } from \"nft/types\";\nimport { isAudio } from \"nft/utils/isAudio\";\nimport { isVideo } from \"nft/utils/isVideo\";\nimport { useCallback, useMemo, useReducer, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { NftActivityType } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nimport { shortenAddress } from \"utilities/src/addresses\";\nimport { NumberType, useFormatter } from \"utils/formatNumbers\";\nconst AssetPriceDetailsContainer = styled.div`\n  margin-top: 20px;\n  display: none;\n  @media (max-width: 960px) {\n    display: block;\n  }\n`;\nconst MediaContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 780px;\n`;\nconst AddressTextLink = styled.a`\n  display: inline-block;\n  color: ${({ theme }) => theme.neutral2};\n  text-decoration: none;\n  max-width: 100%;\n  word-wrap: break-word;\n  ${OpacityHoverState};\n`;\nconst SocialsContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 20px;\n`;\nconst DescriptionText = styled.p`\n  margin-top: 8px;\n  font-size: 14px;\n  line-height: 20px;\n`;\nconst RarityWrap = styled.span`\n  display: flex;\n  color: ${({ theme }) => theme.neutral2};\n  padding: 2px 4px;\n  border-radius: 4px;\n  align-items: center;\n  gap: 4px;\n`;\nconst EmptyActivitiesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 28px;\n  line-height: 36px;\n  padding: 56px 0px;\n`;\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.accent1};\n  text-decoration: none;\n  font-size: 14px;\n  line-height: 16px;\n  margin-top: 12px;\n  cursor: pointer;\n  ${OpacityHoverState};\n`;\nconst ActivitySelectContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 34px;\n  overflow-x: auto;\n  ${ScrollBarStyles}\n\n  @media (max-width: 720px) {\n    padding-bottom: 8px;\n  }\n`;\nconst ContentNotAvailable = styled.div`\n  display: flex;\n  background-color: ${({ theme }) => theme.surface1};\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  line-height: 20px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  width: 450px;\n  height: 450px;\n`;\nconst FilterBox = styled.div`\n  box-sizing: border-box;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 14px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  color: ${({ theme }) => theme.neutral1};\n  padding: 8px 16px;\n  border-radius: 12px;\n  cursor: pointer;\n  box-sizing: border-box;\n  ${OpacityHoverState};\n`;\nconst ByText = styled.span`\n  font-size: 14px;\n  line-height: 20px;\n`;\nconst Img = styled.img`\n  background-color: white;\n`;\nconst HoverImageContainer = styled.div`\n  display: flex;\n  margin-right: 4px;\n`;\nconst HoverContainer = styled.div`\n  display: flex;\n`;\nconst ContainerText = styled.span`\n  font-size: 14px;\n`;\nconst AudioPlayer = ({\n  imageUrl,\n  animationUrl,\n  name,\n  collectionName,\n  dominantColor\n}) => {\n  return <Box position=\"relative\" display=\"inline-block\" alignSelf=\"center\">\n    <Box as=\"audio\" className={styles.audioControls} width=\"292\" controls src={animationUrl} />\n    <img\n      className={styles.image}\n      src={imageUrl}\n      alt={name || collectionName}\n      style={{\n        [\"--shadow\"]: `rgba(${dominantColor.join(\", \")}, 0.5)`,\n        minWidth: \"300px\",\n        minHeight: \"300px\"\n      }}\n    />\n  </Box>;\n};\nconst initialFilterState = {\n  [ActivityEventType.Listing]: true,\n  [ActivityEventType.Sale]: true,\n  [ActivityEventType.Transfer]: false,\n  [ActivityEventType.CancelListing]: false\n};\nvar MediaType = /* @__PURE__ */ ((MediaType2) => {\n  MediaType2[\"Audio\"] = \"audio\";\n  MediaType2[\"Video\"] = \"video\";\n  MediaType2[\"Image\"] = \"image\";\n  MediaType2[\"Embed\"] = \"embed\";\n  return MediaType2;\n})(MediaType || {});\nconst AssetView = ({\n  mediaType,\n  asset,\n  dominantColor\n}) => {\n  const style = { [\"--shadow\"]: `rgba(${dominantColor.join(\", \")}, 0.5)` };\n  switch (mediaType) {\n    case \"video\" /* Video */:\n      return <video src={asset.animationUrl} className={styles.image} autoPlay controls muted loop style={style} />;\n    case \"image\" /* Image */:\n      return <img className={styles.image} src={asset.imageUrl} alt={asset.name || asset.collectionName} style={style} />;\n    case \"audio\" /* Audio */:\n      return <AudioPlayer {...asset} dominantColor={dominantColor} />;\n    case \"embed\" /* Embed */:\n      return <div className={styles.embedContainer}><iframe\n        title={asset.name ?? `${asset.collectionName} #${asset.tokenId}`}\n        src={asset.animationUrl}\n        className={styles.embed}\n        style={style}\n        frameBorder={0}\n        height=\"100%\"\n        width=\"100%\"\n        sandbox=\"allow-scripts\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      /></div>;\n  }\n};\nexport const AssetDetails = ({ asset, collection }) => {\n  const { formatNumberOrString } = useFormatter();\n  const [dominantColor] = useState([0, 0, 0]);\n  const { rarityProvider } = useMemo(\n    () => asset.rarity ? {\n      rarityProvider: asset?.rarity?.providers?.find(\n        ({ provider: _provider }) => _provider === asset.rarity?.primaryProvider\n      )\n    } : {},\n    [asset.rarity]\n  );\n  const assetMediaType = useMemo(() => {\n    if (isAudio(asset.animationUrl ?? \"\")) {\n      return \"audio\" /* Audio */;\n    } else if (isVideo(asset.animationUrl ?? \"\")) {\n      return \"video\" /* Video */;\n    } else if (asset.animationUrl) {\n      return \"embed\" /* Embed */;\n    }\n    return \"image\" /* Image */;\n  }, [asset]);\n  const { address: contractAddress, tokenId: token_id } = asset;\n  const { nftActivity: gqlPriceData } = useNftActivity(\n    {\n      activityTypes: [NftActivityType.Sale],\n      address: contractAddress,\n      tokenId: token_id\n    },\n    1,\n    \"no-cache\"\n  );\n  const weiPrice = gqlPriceData?.[0]?.price;\n  const formattedPrice = weiPrice ? formatNumberOrString({ input: parseFloat(weiPrice), type: NumberType.NFTToken }) : void 0;\n  const [activeFilters, filtersDispatch] = useReducer(reduceFilters, initialFilterState);\n  const Filter = useCallback(\n    function ActivityFilter({ eventType }) {\n      const isActive = activeFilters[eventType];\n      return <FilterBox\n        backgroundColor={isActive ? vars.color.surface1 : themeVars.colors.surface3}\n        onClick={() => filtersDispatch({ eventType })}\n      >{eventType === ActivityEventType.CancelListing ? \"Cancellations\" : eventType.charAt(0) + eventType.slice(1).toLowerCase() + \"s\"}</FilterBox>;\n    },\n    [activeFilters]\n  );\n  const {\n    nftActivity,\n    hasNext: hasNextActivity,\n    loadMore: loadMoreActivities,\n    loading: activitiesAreLoading,\n    error: errorLoadingActivities\n  } = useNftActivity(\n    {\n      activityTypes: Object.keys(activeFilters).map((key) => key).filter((key) => activeFilters[key]),\n      address: contractAddress,\n      tokenId: token_id\n    },\n    25\n  );\n  const rarity = asset?.rarity?.providers?.[0];\n  const [showHolder, setShowHolder] = useState(false);\n  return <Column>\n    <MediaContainer>{asset.imageUrl === void 0 || showHolder ? <ContentNotAvailable>Content not available yet</ContentNotAvailable> : assetMediaType === \"image\" /* Image */ ? <Img\n      className={styles.image}\n      src={asset.imageUrl}\n      alt={asset.name || collection.collectionName}\n      onError={() => setShowHolder(true)}\n    /> : <AssetView asset={asset} mediaType={assetMediaType} dominantColor={dominantColor} />}</MediaContainer>\n    <AssetPriceDetailsContainer><AssetPriceDetails asset={asset} collection={collection} /></AssetPriceDetailsContainer>\n    {asset.traits && <InfoContainer\n      data-testid=\"nft-details-traits\"\n      primaryHeader=\"Traits\"\n      defaultOpen\n      secondaryHeader={rarityProvider && rarity && rarity.score ? <MouseoverTooltip\n        text={<HoverContainer>\n          <HoverImageContainer><img src=\"/nft/svgs/gem.svg\" alt=\"cardLogo\" width={16} /></HoverImageContainer>\n          <ContainerText>Ranking by Rarity Sniper</ContainerText>\n        </HoverContainer>}\n        placement=\"top\"\n      ><RarityWrap>\n        {\"Rarity: \"}\n        {formatNumberOrString({ input: rarity.score, type: NumberType.WholeNumber })}\n      </RarityWrap></MouseoverTooltip> : null}\n    ><TraitsContainer asset={asset} /></InfoContainer>}\n    <InfoContainer\n      primaryHeader=\"Activity\"\n      defaultOpen\n      secondaryHeader={formattedPrice ? `Last Sale: ${formattedPrice} ETH` : void 0}\n      data-testid=\"nft-details-activity\"\n    ><>\n      <ActivitySelectContainer $isHorizontalScroll>\n        <Filter eventType={ActivityEventType.Listing} />\n        <Filter eventType={ActivityEventType.Sale} />\n        <Filter eventType={ActivityEventType.Transfer} />\n        <Filter eventType={ActivityEventType.CancelListing} />\n      </ActivitySelectContainer>\n      {activitiesAreLoading ? <LoadingAssetActivity rowCount={10} /> : nftActivity && nftActivity.length > 0 ? <InfiniteScroll\n        next={loadMoreActivities}\n        hasMore={!!hasNextActivity}\n        loader={activitiesAreLoading && <Center><LoadingSparkle /></Center>}\n        dataLength={nftActivity?.length ?? 0}\n        scrollableTarget=\"activityContainer\"\n      ><AssetActivity events={nftActivity} /></InfiniteScroll> : <>{!errorLoadingActivities && nftActivity && <EmptyActivitiesContainer>\n        <div>No activities yet</div>\n        <Link to={`/nfts/collection/${asset.address}`}>View collection items</Link>\n        {\" \"}\n      </EmptyActivitiesContainer>}</>}\n    </></InfoContainer>\n    <InfoContainer\n      primaryHeader=\"Description\"\n      defaultOpen\n      secondaryHeader={null}\n      data-testid=\"nft-details-description\"\n    ><>\n      <ByText>By </ByText>\n      {asset?.creator && asset.creator?.address && <AddressTextLink\n        href={`https://etherscan.io/address/${asset.creator.address}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{shortenAddress(asset.creator.address, 2)}</AddressTextLink>}\n      <DescriptionText data-testid=\"nft-details-description-text\">{collection.collectionDescription}</DescriptionText>\n      <SocialsContainer>\n        {collection.externalUrl && <Resource name=\"Website\" link={`${collection.externalUrl}`} />}\n        {collection.twitterUrl && <Resource name=\"Twitter\" link={`https://twitter.com/${collection.twitterUrl}`} />}\n        {collection.discordUrl && <Resource name=\"Discord\" link={collection.discordUrl} />}\n      </SocialsContainer>\n    </></InfoContainer>\n    <InfoContainer primaryHeader=\"Details\" defaultOpen secondaryHeader={null} data-testid=\"nft-details-asset-details\"><DetailsContainer asset={asset} collection={collection} /></InfoContainer>\n  </Column>;\n};\n","\"use strict\";\nimport Column from \"components/deprecated/Column\";\nimport Loader from \"components/Icons/LoadingSpinner\";\nimport { LoadingBubble } from \"components/Tokens/loading\";\nimport styled, { useTheme } from \"lib/styled-components\";\nimport { ScreenBreakpointsPaddings } from \"nft/pages/collection/index.css\";\nconst BREAKPOINT = \"960px\";\nconst Title = styled(LoadingBubble)`\n  height: 16px;\n  width: 136px;\n`;\nconst SubTitle = styled(LoadingBubble)`\n  height: 40px;\n  width: 200px;\n  margin-top: 8px;\n\n  @media (max-width: ${BREAKPOINT}) {\n    width: 100%;\n  }\n`;\nconst Seller = styled(LoadingBubble)`\n  height: 16px;\n  width: 40px;\n`;\nconst SellerAddress = styled(LoadingBubble)`\n  margin-top: 4px;\n  height: 24px;\n  width: 95px;\n`;\nconst PrimaryBody = styled(LoadingBubble)`\n  width: 100%;\n  height: 260px;\n`;\nconst ActivityLoader = styled(LoadingBubble)`\n  width: 100%;\n  height: 428px;\n`;\nconst PrimaryContent = styled(Column)`\n  max-width: 780px;\n  margin-top: 28px;\n  width: 100%;\n  gap: 28px;\n\n  @media (max-width: ${BREAKPOINT}) {\n    max-width: 100%;\n  }\n`;\nconst LoaderContainer = styled.div`\n  width: 100%;\n  padding-top: 200px;\n  padding-bottom: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: pink;\n`;\nconst BuyNowContainer = styled(LoadingBubble)`\n  height: 180px;\n  width: 360px;\n\n  @media (max-width: ${BREAKPOINT}) {\n    width: 100%;\n  }\n`;\nconst LoadingContainer = styled.div`\n  display: flex;\n  margin-top: 48px;\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1296px;\n\n  ${ScreenBreakpointsPaddings}\n\n  @media (max-width: ${BREAKPOINT}) {\n    max-width: 100%;\n    margin-top: 0;\n  }\n`;\nconst StyledColumn = styled(Column)`\n  max-width: 780px;\n  width: 100%;\n\n  @media (max-width: ${BREAKPOINT}) {\n    max-width: 100%;\n  }\n`;\nconst BuyNowLoadingDesktop = styled(Column)`\n  margin-top: 20px;\n  padding-left: 60px;\n  gap: 24px;\n\n  @media (max-width: ${BREAKPOINT}) {\n    display: none;\n  }\n`;\nconst BuyNowLoadingMobile = styled(Column)`\n  display: none;\n  margin-top: 16px;\n  gap: 24px;\n\n  @media (max-width: ${BREAKPOINT}) {\n    display: flex;\n  }\n`;\nexport const AssetDetailsLoading = () => {\n  const theme = useTheme();\n  return <LoadingContainer>\n    <StyledColumn>\n      <LoaderContainer><Loader stroke={theme.accent1} size=\"40px\" /></LoaderContainer>\n      <BuyNowLoadingMobile>\n        <Column>\n          <Title />\n          <SubTitle />\n        </Column>\n        <BuyNowContainer />\n        <Column>\n          <Seller />\n          <SellerAddress />\n        </Column>\n      </BuyNowLoadingMobile>\n      <PrimaryContent>\n        <PrimaryBody />\n        <ActivityLoader />\n        <PrimaryBody />\n        <PrimaryBody />\n      </PrimaryContent>\n    </StyledColumn>\n    <BuyNowLoadingDesktop>\n      <Column>\n        <Title />\n        <SubTitle />\n      </Column>\n      <BuyNowContainer />\n      <Column>\n        <Seller />\n        <SellerAddress />\n      </Column>\n    </BuyNowLoadingDesktop>\n  </LoadingContainer>;\n};\n","\"use strict\";\nimport { InterfacePageName } from \"@uniswap/analytics-events\";\nimport { useNftAssetDetails } from \"graphql/data/nft/Details\";\nimport styled from \"lib/styled-components\";\nimport { AssetDetails } from \"nft/components/details/AssetDetails\";\nimport { AssetDetailsLoading } from \"nft/components/details/AssetDetailsLoading\";\nimport { AssetPriceDetails } from \"nft/components/details/AssetPriceDetails\";\nimport { blocklistedCollections } from \"nft/utils\";\nimport { useDynamicMetatags } from \"pages/metatags\";\nimport { useMemo } from \"react\";\nimport { Helmet } from \"react-helmet-async/lib/index\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { formatNFTAssetMetatagTitleName } from \"shared-cloud/metatags\";\nimport Trace from \"uniswap/src/features/telemetry/Trace\";\nimport { t } from \"uniswap/src/i18n\";\nimport { isIFramed } from \"utils/isIFramed\";\nconst AssetContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  gap: 60px;\n  padding: 48px 48px 0 48px;\n\n  @media (max-width: 960px) {\n    padding: 40px 40px 0 40px;\n  }\n  @media (max-width: 540px) {\n    padding: 20px 20px 0 20px;\n  }\n  @media (max-width: 420px) {\n    padding: 16px 16px 0 16px;\n  }\n`;\nconst AssetPriceDetailsContainer = styled.div`\n  min-width: 360px;\n  position: relative;\n\n  @media (max-width: 960px) {\n    display: none;\n  }\n`;\nconst AssetPage = () => {\n  const { tokenId = \"\", contractAddress = \"\" } = useParams();\n  const { data, loading } = useNftAssetDetails(contractAddress, tokenId);\n  const [asset, collection] = data;\n  const metaTagProperties = useMemo(\n    () => ({\n      title: formatNFTAssetMetatagTitleName(asset.name, collection.collectionName, tokenId),\n      image: window.location.origin + \"/api/image/nfts/asset/\" + contractAddress + \"/\" + tokenId,\n      url: window.location.href,\n      description: collection.collectionDescription ?? \"View traits, trading activity, descriptions, and other details on your NFTs.\"\n    }),\n    [asset.name, collection.collectionDescription, collection.collectionName, contractAddress, tokenId]\n  );\n  const metaTags = useDynamicMetatags(metaTagProperties);\n  if (blocklistedCollections.includes(contractAddress) || isIFramed(true)) {\n    return <Navigate to=\"/nfts\" replace />;\n  }\n  if (loading) {\n    return <AssetDetailsLoading />;\n  }\n  return <>\n    <Helmet>\n      <title>\n        {asset.name ?? \"\"}\n        {\" \"}\n        {asset.name ? \"|\" : \"\"}\n        {\" \"}\n        {collection.collectionName ?? t(\"nft.explore\")}\n        {\" on Uniswap\"}\n      </title>\n      {metaTags.map((tag, index) => <meta key={index} {...tag} />)}\n      <meta name=\"robots\" content=\"max-image-preview:large\" />\n    </Helmet>\n    <Trace\n      logImpression\n      page={InterfacePageName.NFT_DETAILS_PAGE}\n      properties={{ collection_address: contractAddress, token_id: tokenId }}\n    >{!!asset && !!collection ? <AssetContainer>\n      <AssetDetails collection={collection} asset={asset} />\n      <AssetPriceDetailsContainer><AssetPriceDetails collection={collection} asset={asset} /></AssetPriceDetailsContainer>\n    </AssetContainer> : null}</Trace>\n  </>;\n};\nexport default AssetPage;\n","\"use strict\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { wrapScientificNotation } from \"nft/utils\";\nimport { useMemo } from \"react\";\nimport { useNftDetailsQuery } from \"uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks\";\nexport function useNftAssetDetails(address, tokenId) {\n  const { data: queryData, loading } = useNftDetailsQuery({\n    variables: {\n      address,\n      tokenId\n    }\n  });\n  const asset = queryData?.nftAssets?.edges[0]?.node;\n  const collection = asset?.collection;\n  const listing = asset?.listings?.edges[0]?.node;\n  const ethPrice = parseEther(wrapScientificNotation(listing?.price?.value?.toString() ?? \"0\")).toString();\n  return useMemo(\n    () => ({\n      data: [\n        {\n          id: asset?.id,\n          address,\n          notForSale: asset?.listings === null,\n          collectionName: asset?.collection?.name,\n          collectionSymbol: asset?.collection?.image?.url,\n          imageUrl: asset?.image?.url,\n          animationUrl: asset?.animationUrl,\n          marketplace: listing?.marketplace.toLowerCase(),\n          name: asset?.name,\n          priceInfo: {\n            ETHPrice: ethPrice,\n            baseAsset: \"ETH\",\n            baseDecimals: \"18\",\n            basePrice: ethPrice\n          },\n          susFlag: asset?.suspiciousFlag,\n          sellorders: asset?.listings?.edges.map((listingNode) => {\n            return {\n              ...listingNode.node,\n              protocolParameters: listingNode.node.protocolParameters ? JSON.parse(listingNode.node.protocolParameters.toString()) : void 0\n            };\n          }),\n          smallImageUrl: asset?.smallImage?.url,\n          tokenId,\n          tokenType: asset?.collection?.nftContracts?.[0]?.standard,\n          collectionIsVerified: asset?.collection?.isVerified,\n          rarity: {\n            primaryProvider: \"Rarity Sniper\",\n            // TODO update when backend adds more providers\n            providers: asset?.rarities?.map((rarity) => {\n              return {\n                rank: rarity.rank,\n                score: rarity.score,\n                provider: \"Rarity Sniper\"\n              };\n            })\n          },\n          ownerAddress: asset?.ownerAddress,\n          creator: {\n            profile_img_url: asset?.creator?.profileImage?.url ?? \"\",\n            address: asset?.creator?.address ?? \"\"\n          },\n          metadataUrl: asset?.metadataUrl ?? \"\",\n          traits: asset?.traits?.map((trait) => {\n            return { trait_type: trait.name ?? \"\", trait_value: trait.value ?? \"\" };\n          })\n        },\n        {\n          collectionDescription: collection?.description,\n          collectionImageUrl: collection?.image?.url,\n          collectionName: collection?.name,\n          isVerified: collection?.isVerified,\n          totalSupply: collection?.numAssets,\n          twitterUrl: collection?.twitterName,\n          discordUrl: collection?.discordUrl,\n          externalUrl: collection?.homepageUrl\n        }\n      ],\n      loading\n    }),\n    [address, asset, collection, ethPrice, listing?.marketplace, loading, tokenId]\n  );\n}\n","\"use strict\";\nimport {\n  SquareCryptopunksMarketplaceIcon,\n  SquareEnsVisionMarketplaceIcon,\n  SquareFoundationMarketplaceIcon,\n  SquareGemMarketplaceIcon,\n  SquareLooksBlurMarketplaceIcon,\n  SquareLooksRareMarketplaceIcon,\n  SquareLooksX2Y2MarketplaceIcon,\n  SquareNft20MarketplaceIcon,\n  SquareNftXMarketplaceIcon,\n  SquareOpenSeaMarketplaceIcon,\n  SquareRaribleMarketplaceIcon,\n  SquareSudoSwapMarketplaceIcon,\n  SquareZoraMarketplaceIcon\n} from \"nft/components/icons\";\nimport { Markets } from \"nft/types\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport function getRarityStatus(rarityStatusCache, id, assets) {\n  if (rarityStatusCache.has(id)) {\n    return rarityStatusCache.get(id);\n  }\n  const hasRarity = assets && Array.from(assets).reduce((reducer, asset) => !!(reducer || asset?.rarity), false);\n  if (hasRarity) {\n    rarityStatusCache.set(id, hasRarity);\n  }\n  return hasRarity;\n}\nexport const getAssetHref = (asset, origin) => {\n  const address = asset.address !== void 0 ? asset.address : asset.asset_contract.address;\n  return `/nfts/asset/${address}/${asset.tokenId}${origin ? `?origin=${origin}` : \"\"}`;\n};\nexport const getMarketplaceIcon = (marketplace, size = \"16\") => {\n  switch (marketplace.toLowerCase()) {\n    case Markets.Opensea:\n      return <SquareOpenSeaMarketplaceIcon width={size} height={size} />;\n    case Markets.LooksRare:\n      return <SquareLooksRareMarketplaceIcon width={size} height={size} />;\n    case Markets.X2Y2:\n      return <SquareLooksX2Y2MarketplaceIcon width={size} height={size} gradientId={uuidv4()} />;\n    case Markets.Blur:\n      return <SquareLooksBlurMarketplaceIcon width={size} height={size} />;\n    case Markets.Sudoswap:\n      return <SquareSudoSwapMarketplaceIcon width={size} height={size} />;\n    case Markets.NFTX:\n      return <SquareNftXMarketplaceIcon width={size} height={size} gradientId={uuidv4()} />;\n    case Markets.Gem:\n      return <SquareGemMarketplaceIcon width={size} height={size} gradientId={uuidv4()} />;\n    case Markets.Zora:\n      return <SquareZoraMarketplaceIcon width={size} height={size} gradientId={uuidv4()} />;\n    case Markets.Ensvision:\n      return <SquareEnsVisionMarketplaceIcon width={size} height={size} />;\n    case Markets.Cryptopunks:\n    case \"larvalabs\":\n      return <SquareCryptopunksMarketplaceIcon width={size} height={size} />;\n    case Markets.Rarible:\n      return <SquareRaribleMarketplaceIcon width={size} height={size} />;\n    case Markets.Foundation:\n      return <SquareFoundationMarketplaceIcon width={size} height={size} />;\n    case Markets.NFT20:\n      return <SquareNft20MarketplaceIcon width={size} height={size} />;\n    default:\n      return null;\n  }\n};\nexport const generateTweetForAsset = (asset) => {\n  return `https://twitter.com/intent/tweet?text=Check%20out%20${asset.name ? encodeURIComponent(asset.name) : `${asset.collectionName}%20%23${asset.tokenId}`}%20(${asset.collectionName})%20https://app.uniswap.org/nfts/asset/${asset.address}/${asset.tokenId}%20via%20@uniswap`;\n};\nexport const generateTweetForPurchase = (assets, txHashUrl) => {\n  const multipleCollections = assets.length > 0 && assets.some((asset) => asset.address !== assets[0].address);\n  const collectionUrl = assets.length > 0 && !multipleCollections ? `collection/${assets[0].address}` : \"\";\n  const tweetText = `I just purchased ${multipleCollections ? `${assets.length} NFTs` : `${assets.length} ${assets[0].collectionName ?? \"NFT\"}`} with @Uniswap \\u{1F984}\n\nhttps://app.uniswap.org/nfts/${collectionUrl}\n${txHashUrl}`;\n  return `https://twitter.com/intent/tweet?text=${encodeURIComponent(tweetText)}`;\n};\nfunction getMinListingPrice(listings) {\n  return Math.min(...listings.map((listing) => listing.price ?? 0)) ?? 0;\n}\nfunction mapAssetsToCollections(assets) {\n  const collections = assets.map((asset) => asset.collection?.twitterUrl ?? asset.collection?.name ?? \"\");\n  const uniqueCollections = [...new Set(collections)];\n  return uniqueCollections.map((collection) => {\n    return {\n      collection,\n      items: assets.filter((asset) => asset.collection?.twitterUrl === collection || asset.collection?.name === collection).map((asset) => asset.name ?? \"\")\n    };\n  });\n}\nexport const generateTweetForList = (assets) => {\n  const tweetText = assets.length == 1 ? `I just listed ${assets[0].collection?.twitterUrl ? `${assets[0].collection?.twitterUrl} ` : `${assets[0].collection?.name} ` ?? \"\"}${assets[0].name} for ${getMinListingPrice(assets[0].newListings ?? [])} ETH on ${assets[0].marketplaces?.map((market) => market.name).join(\", \")}. Buy it on @Uniswap at https://app.uniswap.org/${getAssetHref(assets[0])}` : `I just listed ${assets.length} items on @Uniswap at https://app.uniswap.org/nfts/profile\n\nCollections: ${mapAssetsToCollections(assets).map(({ collection, items }) => `${collection} ${items.map((item) => item).join(\", \")}`).join(\", \")} \n\nMarketplaces: ${assets[0].marketplaces?.map((market) => market.name).join(\", \")}`;\n  return `https://twitter.com/intent/tweet?text=${encodeURIComponent(tweetText)}`;\n};\n","\"use strict\";\nexport function formatTokenMetatagTitleName(symbol, name) {\n  if (symbol) {\n    return \"Get \" + symbol + \" on Uniswap\";\n  }\n  if (name) {\n    return \"Get \" + name + \" on Uniswap\";\n  }\n  return \"View Token on Uniswap\";\n}\nexport function formatNFTAssetMetatagTitleName(name, collectionName, tokenId) {\n  if (name) {\n    return name;\n  }\n  if (collectionName && tokenId) {\n    return collectionName + \" #\" + tokenId;\n  }\n  if (tokenId) {\n    return \"Asset #\" + tokenId;\n  }\n  return \"View NFT on Uniswap\";\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","displayName","Share","props","svg","path","d","useNativeUsdPrice","chainId","UniverseChainId","Mainnet","useUSDPrice","nativeCurrency","useNativeCurrency","parsedAmount","tryParseCurrencyAmount","data","useUsdPriceofNftAsset","asset","fetchedPriceData","priceInfo","ETHPrice","parseFloat","formatEther","toString","ResourceLink","styled","ExternalLink","theme","accent1","darken","Resource","name","link","href","sup","LoadingSparkle","themeVars","colors","neutral2","className","styles","TR","tr","surface3","TH","th","Table","table","TD","td","PriceContainer","div","Link","a","neutral1","OpacityHoverState","ActivityContainer","ScrollBarStyles","LoadingCell","LoadingBubble","ActivityTable","children","id","thead","Trans","i18nKey","tbody","LoadingAssetActivityRow","cellCount","Array","map","_","index","LoadingAssetActivity","rowCount","events","formatNumberOrString","useFormatter","event","eventTimestamp","eventType","fromAddress","marketplace","price","toAddress","transactionHash","formattedPrice","input","type","NumberType","NFTToken","EventCell","eventTransactionHash","eventOnly","getMarketplaceIcon","rel","shortenAddress","getTimeDifference","MINUTE","ms","HOUR","DAY","timeLeft","targetDate","countDown","Date","getTime","days","Math","floor","hours","minutes","roundAndPluralize","hoverState","css","deprecated_stateOverlayHover","deprecated_stateOverlayPressed","Container","BestPriceContainer","surface1","HeaderRow","PriceRow","BuyNowButton","assetInBag","useAccentColor","critical","margin","BuyNowButtonContainer","Tertiary","ThemedText","BodySecondary","neutral3","UploadLink","NotForSaleContainer","DiscoveryContainer","OwnerText","OwnerInformationContainer","AssetInfoContainer","AssetHeader","h1","CollectionNameContainer","CollectionHeader","span","VerifiedIconContainer","StyledVerifiedIcon","VerifiedIcon","DefaultLink","MarketplaceIcon","OwnerContainer","listing","navigate","useNavigate","ethUsdPrice","setSellPageState","useProfilePageState","state","setProfilePageState","selectSellAsset","useSellAsset","resetSellAssets","reset","sellOrders","expirationDate","endAt","USDPrice","useMemo","floor_sell_order_price","trace","useTrace","goToListPage","sendAnalyticsEvent","NFTEventName","NFT_SELL_ITEM_ADDED","collection_address","asset_contract","address","token_id","tokenId","ProfilePageStateType","LISTING","SubHeader","marketplaceUrl","MediumHeader","fontSize","lineHeight","FiatNFTToken","onClick","StyledLink","NotForSale","collectionName","collectionUrl","useTheme","CancelListingIcon","to","AssetPriceDetails","collection","cheapestOrder","account","useAccount","sellorders","itemsInBag","useBag","s","addAssetsToBag","removeAssetsFromBag","toggleBag","bagExpanded","assetsFilter","walletAssets","ownerAssets","useNftBalance","ownerAddress","first","walletAsset","some","item","isOwner","toLowerCase","isForSale","isVerified","window","open","generateTweetForAsset","screen","data-testid","tokenType","BodySmall","Details","Header","Body","Center","CreatorLink","CopyIcon","Copy","GridItem","header","body","creator","formatNumber","totalSupply","setCopied","useCopyClipboard","copy","useCallback","text","substring","WholeNumber","isOpen","transition","duration","timing","medium","ease","PrimaryHeader","SecondaryHeader","SecondaryHeaderContainer","ContentContainer","primaryHeader","secondaryHeader","defaultOpen","setIsOpen","useState","ChevronDown","Grid","GridItemContainer","TraitType","TraitValue","trait","collectionAddress","trait_type","trait_value","params","qs","traits","arrayFormat","sort","b","localeCompare","AssetPriceDetailsContainer","MediaContainer","Column","AddressTextLink","SocialsContainer","DescriptionText","p","RarityWrap","EmptyActivitiesContainer","RouterLink","ActivitySelectContainer","ContentNotAvailable","FilterBox","backgroundColor","ByText","Img","img","HoverImageContainer","HoverContainer","ContainerText","AudioPlayer","imageUrl","animationUrl","dominantColor","Box","position","display","alignSelf","as","controls","src","alt","style","join","minWidth","minHeight","initialFilterState","ActivityEventType","Listing","Sale","Transfer","CancelListing","AssetView","mediaType","video","autoPlay","muted","loop","iframe","title","frameBorder","sandbox","allow","allowFullScreen","AssetDetails","gqlPriceData","nftActivity","rarityProvider","rarity","providers","find","provider","_provider","primaryProvider","assetMediaType","isAudio","isVideo","contractAddress","useNftActivity","activityTypes","NftActivityType","weiPrice","activeFilters","filtersDispatch","useReducer","reduceFilters","Filter","isActive","vars","charAt","slice","hasNext","hasNextActivity","loadMore","loadMoreActivities","loading","activitiesAreLoading","error","errorLoadingActivities","filter","showHolder","setShowHolder","onError","InfoContainer","score","MouseoverTooltip","placement","TraitsContainer","$isHorizontalScroll","InfiniteScroll","next","hasMore","loader","dataLength","scrollableTarget","AssetActivity","collectionDescription","externalUrl","twitterUrl","discordUrl","DetailsContainer","BREAKPOINT","Title","SubTitle","Seller","SellerAddress","PrimaryBody","ActivityLoader","PrimaryContent","LoaderContainer","BuyNowContainer","LoadingContainer","ScreenBreakpointsPaddings","StyledColumn","BuyNowLoadingDesktop","BuyNowLoadingMobile","AssetDetailsLoading","Loader","AssetContainer","useParams","queryData","useNftDetailsQuery","variables","nftAssets","edges","node","listings","ethPrice","parseEther","wrapScientificNotation","value","notForSale","collectionSymbol","image","url","baseAsset","baseDecimals","basePrice","susFlag","suspiciousFlag","listingNode","protocolParameters","JSON","parse","smallImageUrl","smallImage","nftContracts","standard","collectionIsVerified","rarities","rank","profile_img_url","profileImage","metadataUrl","description","collectionImageUrl","numAssets","twitterName","homepageUrl","useNftAssetDetails","metaTagProperties","formatNFTAssetMetatagTitleName","location","origin","metaTags","useDynamicMetatags","blocklistedCollections","includes","isIFramed","Navigate","replace","Helmet","t","tag","meta","content","Trace","logImpression","page","InterfacePageName","NFT_DETAILS_PAGE","properties","getRarityStatus","rarityStatusCache","assets","has","get","hasRarity","from","reduce","reducer","set","getAssetHref","Markets","Opensea","SquareOpenSeaMarketplaceIcon","LooksRare","SquareLooksRareMarketplaceIcon","X2Y2","SquareLooksX2Y2MarketplaceIcon","gradientId","uuidv4","Blur","SquareLooksBlurMarketplaceIcon","Sudoswap","SquareSudoSwapMarketplaceIcon","NFTX","SquareNftXMarketplaceIcon","Gem","SquareGemMarketplaceIcon","Zora","SquareZoraMarketplaceIcon","Ensvision","SquareEnsVisionMarketplaceIcon","Cryptopunks","SquareCryptopunksMarketplaceIcon","Rarible","SquareRaribleMarketplaceIcon","Foundation","SquareFoundationMarketplaceIcon","NFT20","SquareNft20MarketplaceIcon","encodeURIComponent","generateTweetForPurchase","txHashUrl","multipleCollections","tweetText","generateTweetForList","newListings","min","marketplaces","market","collections","Set","items","mapAssetsToCollections","formatTokenMetatagTitleName","symbol"],"sourceRoot":""}